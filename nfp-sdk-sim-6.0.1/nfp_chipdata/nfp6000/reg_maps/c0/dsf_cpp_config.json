{
    "_comment": [
        "Copyright: Copyright (C) 2012-2016 Netronome Systems, Inc.  All rights reserved.",
        "Changeset Desc: c40185e20ecf"
    ],
    "maps": {},
    "regs": {
        "dsf_cpp_config.DsfCppDynamicLoadBalancerConfig": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "DISABLE",
                    "bit_lsb": 31,
                    "bit_msb": 31,
                    "description": "Disable",
                    "mode": "WO",
                    "name": "Disable"
                },
                {
                    "altname": "SELECT",
                    "bit_lsb": 28,
                    "bit_msb": 29,
                    "description": "Select",
                    "mode": "WO",
                    "name": "Select"
                },
                {
                    "altname": "WRITE_DATA",
                    "bit_lsb": 20,
                    "bit_msb": 27,
                    "description": "(Write data) Each unit corresponds to a single cycle over the bus. For MPullData, each cycle over the bus is 8B. To write new values into the LoadBalancer, the DWRR must first be disabled. The new values must be written in, while the DWRR is in the disabled state. The DWRR can be re-enabled for the new values to take effect.",
                    "mode": "WO",
                    "name": "WriteData"
                }
            ]
        },
        "dsf_cpp_config.DsfCppLoadBalancerConfig": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "MAP_IF_MASK_MATCH_FAILS",
                    "bit_lsb": 24,
                    "bit_msb": 31,
                    "description": "Indexed by master_id[3;0] - result is the load balance answer if mask/match fails",
                    "mode": "WO",
                    "name": "MapIfMaskMatchFails"
                },
                {
                    "altname": "MAP_IF_MASK_MATCH_PASSES",
                    "bit_lsb": 16,
                    "bit_msb": 23,
                    "description": "Indexed by master_id[3;0] - result is the load balance answer if mask/match passes",
                    "mode": "WO",
                    "name": "MapIfMaskMatchPasses"
                },
                {
                    "altname": "CONFIG_MASK",
                    "bit_lsb": 8,
                    "bit_msb": 15,
                    "description": "ANDed with island_id[6;0],master_id[2;2], and compare with mask&match - also if match&~mask then at least one must be set",
                    "mode": "WO",
                    "name": "ConfigMask"
                },
                {
                    "altname": "CONFIG_MATCH",
                    "bit_lsb": 0,
                    "bit_msb": 7,
                    "description": "Combined with match and island_id and top 2 bits of master_id",
                    "mode": "WO",
                    "name": "ConfigMatch"
                }
            ]
        },
        "dsf_cpp_config.DsfCppRateLimiterConfig": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "INCREMENT",
                    "bit_lsb": 8,
                    "bit_msb": 13,
                    "description": "Credit to add every cycle",
                    "mode": "WO",
                    "name": "Increment"
                },
                {
                    "altname": "MAX",
                    "bit_lsb": 0,
                    "bit_msb": 7,
                    "description": "Maximum value for the credit.",
                    "mode": "WO",
                    "name": "Max"
                }
            ]
        }
    }
}