{
    "_comment": [
        "Copyright: Copyright (C) 2012-2016 Netronome Systems, Inc.  All rights reserved.",
        "Changeset Desc: c40185e20ecf"
    ],
    "maps": {
        "mac_csr.Mac12Ethernet": {
            "0x00000000": {
                "altname": "MAC_SEG%d",
                "description": "MAC%d control registers",
                "name": "MacEthSeg%d",
                "offinc1": "0x00000400",
                "ptr": "mac_csr.MacEthSegment",
                "repeat1": 12,
                "type": "regmap"
            },
            "0x00003000": {
                "altname": "MAC_ETH_GLOBAL",
                "description": "MAC Global control registers",
                "name": "MacEthGlobal",
                "ptr": "mac_csr.MacEthGlobal",
                "type": "regmap"
            },
            "0x00003400": {
                "altname": "MAC_ETH_MDIO_CTL",
                "description": "MAC MDIO control registers",
                "name": "MacEthMdioCtl",
                "ptr": "mac_csr.MacEthMdioCtl",
                "type": "regmap"
            },
            "0x00003800": {
                "altname": "MAC_ETH_VLAN_TPID_CFG",
                "description": "MAC VLAN Tag TPID configuration registers",
                "name": "MacEthVlanTpidCfg",
                "ptr": "mac_csr.MacEthVlanTpidCfg",
                "type": "regmap"
            },
            "0x00004000": {
                "altname": "MAC_ETH_CHN_PCS_SEG%d",
                "description": "MAC%d Channelized PCS configuration registers",
                "name": "MacEthChPcsSeg%d",
                "offinc1": "0x00000400",
                "ptr": "mac_csr.MacEthChPcs",
                "repeat1": 12,
                "type": "regmap"
            },
            "0x00007000": {
                "altname": "MAC_ETH_AUTO_NEG",
                "description": "MAC Auto negotiation registers",
                "name": "MacEthAutoNeg",
                "ptr": "mac_csr.MacEthAutoNeg",
                "type": "regmap"
            },
            "0x00007400": {
                "altname": "MAC_ETH_FEC_LT",
                "description": "MAC FEC Link training registers",
                "name": "MacEthFecLT",
                "ptr": "mac_csr.MacEthFecLT",
                "type": "regmap"
            },
            "0x00007800": {
                "altname": "MAC_ETH_PRBS",
                "description": "MAC PRBS Link generator registers",
                "name": "MacEthPrbs",
                "ptr": "mac_csr.MacEthPrbs",
                "type": "regmap"
            }
        },
        "mac_csr.Mac4EthAutoNeg": {
            "0x00000000": {
                "altname": "ETH_AUTO_NEG_SEG",
                "description": "MAC AutoNeg registers",
                "name": "MacEthAutoNegSeg",
                "ptr": "macle_eth_an73.EthAn",
                "type": "regmap"
            },
            "0x00000400": {
                "altname": "ETH_FEC_LT_SEG",
                "description": "MAC FEC Link training registers",
                "name": "MacEthFecLTSeg",
                "ptr": "macle_eth_lt.EthLt",
                "type": "regmap"
            }
        },
        "mac_csr.Mac4Ethernet": {
            "0x00000000": {
                "altname": "MAC_SEG%d",
                "description": "Port%d MAC control registers",
                "name": "MacEthSeg%d",
                "offinc1": "0x00000400",
                "ptr": "macle_eth_mac.EthMac",
                "repeat1": 4,
                "type": "regmap"
            },
            "0x00001000": {
                "altname": "MAC_PCS_SGMII_SEG%d",
                "description": "Port%d PCS 1G/SGMII control registers",
                "name": "MacPcsSgmiiSeg%d",
                "offinc1": "0x00000400",
                "ptr": "macle_eth_pcs_sgmii.EthPcsSgmii",
                "repeat1": 4,
                "type": "regmap"
            },
            "0x00002000": {
                "altname": "MAC_4ETH_AUTO_NEG%d",
                "description": "MAC Auto negotiation registers port %d.",
                "name": "Mac4EthAutoNeg%d",
                "offinc1": "0x00000800",
                "ptr": "mac_csr.Mac4EthAutoNeg",
                "repeat1": 4,
                "type": "regmap"
            },
            "0x00004000": {
                "altname": "MAC_ETH_CHN_PCS_SEG%d",
                "description": "MAC%d Channelized PCS configuration registers. Only 0 supports 25/40/50",
                "name": "MacEthChPcsSeg%d",
                "offinc1": "0x00000800",
                "ptr": "macle_eth_pcs50.EthPcs50",
                "repeat1": 4,
                "type": "regmap"
            },
            "0x00006000": {
                "altname": "MAC_ETH_100G_PCS",
                "description": "MAC 100G Port0 PCS configuration registers",
                "name": "MacEth100GPcs",
                "ptr": "macle_eth_pcs100.EthPcs100",
                "type": "regmap"
            },
            "0x00006800": {
                "altname": "MAC_SEG100G",
                "description": "Port0 100G MAC control registers.",
                "name": "MacEthSeg100G",
                "ptr": "macle_eth_mac100.EthMac100",
                "type": "regmap"
            },
            "0x00006c00": {
                "altname": "MAC_ETH_FEC91",
                "description": "Port0 FEC91 control registers.",
                "name": "MacEthFec91",
                "ptr": "macle_eth_rsfec.EthRsFec",
                "type": "regmap"
            }
        },
        "mac_csr.MacEthAutoNeg": {
            "0x00000000": {
                "altname": "ETH_AN_SEG%d",
                "description": "MAC%d AutoNeg registers",
                "name": "MacEthAutoNegSeg%d",
                "offinc1": "0x00000040",
                "ptr": "mac_csr.MacEthAutoNegSeg",
                "repeat1": 12,
                "type": "regmap"
            }
        },
        "mac_csr.MacEthAutoNegSeg": {
            "0x00000000": {
                "altname": "ETH_AN_KXAN_CTL",
                "description": "KXAN control register",
                "name": "EthAnKxAnCtl",
                "ptr": "mac_csr.EthAnKxAnCtl",
                "type": "reg"
            },
            "0x00000004": {
                "altname": "ETH_AN_KXAN_STATUS",
                "description": "KXAN status register",
                "name": "EthAnKxAnStatus",
                "ptr": "mac_csr.EthAnKxAnStatus",
                "type": "reg"
            },
            "0x00000008": {
                "altname": "ETH_AN_ADV_ABILITY0",
                "description": "Advertised ability bits 15:0",
                "name": "EthAnKxAnAdvAbility0",
                "ptr": "mac_csr.EthAnKxAnAdvAbility0",
                "type": "reg"
            },
            "0x0000000c": {
                "altname": "ETH_AN_ADV_ABILITY1",
                "description": "Advertised ability bits 31:16",
                "name": "EthAnKxAnAdvAbility1",
                "ptr": "mac_csr.EthAnKxAnAdvAbility1",
                "type": "reg"
            },
            "0x00000010": {
                "altname": "ETH_AN_ADV_ABILITY2",
                "description": "Advertised ability bits 47:32",
                "name": "EthAnKxAnAdvAbility2",
                "ptr": "mac_csr.EthAnKxAnAdvAbility2",
                "type": "reg"
            },
            "0x00000014": {
                "altname": "ETH_AN_REM_ABILITY0",
                "description": "Received ability bits 15:0",
                "name": "EthAnKxAnRemAbility0",
                "ptr": "mac_csr.EthAnKxAnRemAbility0",
                "type": "reg"
            },
            "0x00000018": {
                "altname": "ETH_AN_REM_ABILITY1",
                "description": "Received ability bits 31:16",
                "name": "EthAnKxAnRemAbility1",
                "ptr": "mac_csr.EthAnKxAnRemAbility1",
                "type": "reg"
            },
            "0x0000001c": {
                "altname": "ETH_AN_REM_ABILITY2",
                "description": "Received ability bits 47:32",
                "name": "EthAnKxAnRemAbility2",
                "ptr": "mac_csr.EthAnKxAnRemAbility2",
                "type": "reg"
            },
            "0x00000020": {
                "altname": "ETH_AN_MS_CNT",
                "description": "Upper 16 bits of 18-bit 1ms counter.",
                "name": "EthAnKxAnMsCnt",
                "ptr": "mac_csr.EthAnKxAnMsCnt",
                "type": "reg"
            },
            "0x00000024": {
                "altname": "ETH_AN_XNP_0",
                "description": "Autoneg Next page ability word bits 15:0.",
                "name": "EthAnXnp0",
                "ptr": "mac_csr.EthAnXnp0",
                "type": "reg"
            },
            "0x00000028": {
                "altname": "ETH_AN_XNP_1",
                "description": "Autoneg Next page ability word bits 31:16.",
                "name": "EthAnXnp1",
                "ptr": "mac_csr.EthAnXnp1",
                "type": "reg"
            },
            "0x0000002c": {
                "altname": "ETH_AN_XNP_2",
                "description": "Autoneg Next page ability word bits 47:32.",
                "name": "EthAnXnp2",
                "ptr": "mac_csr.EthAnXnp2",
                "type": "reg"
            },
            "0x00000030": {
                "altname": "ETH_AN_LP_XNP_0",
                "description": "Received Link partner Next page ability bits 15:0.",
                "name": "EthAnLpXnp0",
                "ptr": "mac_csr.EthAnLpXnp0",
                "type": "reg"
            },
            "0x00000034": {
                "altname": "ETH_AN_LP_XNP_1",
                "description": "Received Link partner Next page ability bits 31:16.",
                "name": "EthAnLpXnp1",
                "ptr": "mac_csr.EthAnLpXnp12",
                "type": "reg"
            },
            "0x00000038": {
                "altname": "ETH_AN_LP_XNP_2",
                "description": "Received Link partner Next page ability bits 47:32.",
                "name": "EthAnLpXnp2",
                "ptr": "mac_csr.EthAnLpXnp12",
                "type": "reg"
            },
            "0x0000003c": {
                "altname": "ETH_AN_BP_ETH_STATUS",
                "description": "Reflects the currently selected operating mode.",
                "name": "EthAnBpEthStatus",
                "ptr": "mac_csr.EthAnBpEthStatus",
                "type": "reg"
            }
        },
        "mac_csr.MacEthChPcs": {
            "0x00000000": {
                "altname": "ETH_CHAN_PCS_CTL1",
                "description": "PCS control register 1",
                "name": "EthChPcsCtl1",
                "ptr": "mac_csr.EthChPcsCtl1",
                "type": "reg"
            },
            "0x00000004": {
                "altname": "ETH_CHAN_PCS_STATUS1",
                "description": "PCS status register 1",
                "name": "EthChPcsStatus1",
                "ptr": "mac_csr.EthChPcsStatus1",
                "type": "reg"
            },
            "0x00000008": {
                "altname": "ETH_CHAN_PCS_DEV_ID0",
                "description": "PCS Device ID 0",
                "name": "EthChPcsDevId0",
                "ptr": "mac_csr.EthChPcsDevId0",
                "type": "reg"
            },
            "0x0000000c": {
                "altname": "ETH_CHAN_PCS_DEV_ID1",
                "description": "PCS Device ID 1",
                "name": "EthChPcsDevId1",
                "ptr": "mac_csr.EthChPcsDevId1",
                "type": "reg"
            },
            "0x00000010": {
                "altname": "ETH_CHAN_PCS_SPEED_ABLILITY",
                "description": "PCS Speed Ability inherited from global cfg",
                "name": "EthChPcsSpeedAbility",
                "ptr": "mac_csr.EthChPcsSpeedAbility",
                "type": "reg"
            },
            "0x00000014": {
                "altname": "ETH_CHAN_PCS_DEV_IN_PKG1",
                "description": "PCS Devices in package",
                "name": "EthChPcsDevInPkg1",
                "ptr": "mac_csr.EthChPcsDevInPkg1",
                "type": "reg"
            },
            "0x00000018": {
                "altname": "ETH_CHAN_PCS_DEV_IN_PKG2",
                "description": "PCS Devices in package",
                "name": "EthChPcsDevInPkg2",
                "ptr": "mac_csr.EthChPcsDevInPkg2",
                "type": "reg"
            },
            "0x0000001c": {
                "altname": "ETH_CHAN_PCS_CTL2",
                "description": "PCS control register 2",
                "name": "EthChPcsCtl2",
                "ptr": "mac_csr.EthChPcsCtl2",
                "type": "reg"
            },
            "0x00000020": {
                "altname": "ETH_CHAN_PCS_STATUS2",
                "description": "PCS status register 2",
                "name": "EthChPcsStatus2",
                "ptr": "mac_csr.EthChPcsStatus2",
                "type": "reg"
            },
            "0x00000080": {
                "altname": "ETH_CHAN_PCS_BASE_R_STATUS1",
                "description": "PCS 10/40/100GBase-R status register 1",
                "name": "EthChPcsBaseRStatus1",
                "ptr": "mac_csr.EthChPcsBaseRStatus1",
                "type": "reg"
            },
            "0x00000084": {
                "altname": "ETH_CHAN_PCS_BASE_R_STATUS2",
                "description": "PCS 10/40/100GBase-R status register 2",
                "name": "EthChPcsBaseRStatus2",
                "ptr": "mac_csr.EthChPcsBaseRStatus2",
                "type": "reg"
            },
            "0x00000088": {
                "altname": "ETH_CHAN_PCS_10G_SEED_A0",
                "description": "10G BASE-R PCS test PAT A seed data 15:0",
                "name": "EthChPcs10GSeedA0",
                "ptr": "mac_csr.EthChPcsTestPatSeedData",
                "type": "reg"
            },
            "0x0000008c": {
                "altname": "ETH_CHAN_PCS_10G_SEED_A1",
                "description": "10G BASE-R PCS test PAT A seed data 31:16",
                "name": "EthChPcs10GSeedA1",
                "ptr": "mac_csr.EthChPcsTestPatSeedData",
                "type": "reg"
            },
            "0x00000090": {
                "altname": "ETH_CHAN_PCS_10G_SEED_A2",
                "description": "10G BASE-R PCS test PAT A seed data 47:32",
                "name": "EthChPcs10GSeedA2",
                "ptr": "mac_csr.EthChPcsTestPatSeedData",
                "type": "reg"
            },
            "0x00000094": {
                "altname": "ETH_CHAN_PCS_10G_SEED_A3",
                "description": "10G BASE-R PCS test PAT A seed data 57:48",
                "name": "EthChPcs10GSeedA3",
                "ptr": "mac_csr.EthChPcsTestPatSeedDataH",
                "type": "reg"
            },
            "0x00000098": {
                "altname": "ETH_CHAN_PCS_10G_SEED_B0",
                "description": "10G BASE-R PCS test PAT B seed data 15:0",
                "name": "EthChPcs10GSeedB0",
                "ptr": "mac_csr.EthChPcsTestPatSeedData",
                "type": "reg"
            },
            "0x0000009c": {
                "altname": "ETH_CHAN_PCS_10G_SEED_B1",
                "description": "10G BASE-R PCS test PAT B seed data 31:16",
                "name": "EthChPcs10GSeedB1",
                "ptr": "mac_csr.EthChPcsTestPatSeedData",
                "type": "reg"
            },
            "0x000000a0": {
                "altname": "ETH_CHAN_PCS_10G_SEED_B2",
                "description": "10G BASE-R PCS test PAT B seed data 47:32",
                "name": "EthChPcs10GSeedB2",
                "ptr": "mac_csr.EthChPcsTestPatSeedData",
                "type": "reg"
            },
            "0x000000a4": {
                "altname": "ETH_CHAN_PCS_10G_SEED_B3",
                "description": "10G BASE-R PCS test PAT B seed data 57:48",
                "name": "EthChPcs10GSeedB3",
                "ptr": "mac_csr.EthChPcsTestPatSeedDataH",
                "type": "reg"
            },
            "0x000000a8": {
                "altname": "ETH_CHAN_PCS_BASE_R_TEST_CTL",
                "description": "10G BASE-R PCS test control register",
                "name": "EthChPcsBaseRTestCtl",
                "ptr": "mac_csr.EthChPcsBaseRTestCtl",
                "type": "reg"
            },
            "0x000000ac": {
                "altname": "ETH_CHAN_PCS_TEST_ERR_CNT",
                "description": "Test-pattern error counter. (NR)",
                "name": "EthChPcsTestCnt",
                "ptr": "mac_csr.EthChPcsTestErrCnt",
                "type": "reg"
            },
            "0x000000b0": {
                "altname": "ETH_CHAN_PCS_BER_HI_ORDER_CNT",
                "description": "Bits 21:6 of BER counter. (NR)",
                "name": "EthChPcsBerHiOrderCnt",
                "ptr": "mac_csr.EthChPcsBerHiOrderCnt",
                "type": "reg"
            },
            "0x000000b4": {
                "altname": "ETH_CHAN_PCS_ERR_BLK_HI_ORDER_CNT",
                "description": "Bits 21:8 of errored blocks counter. (NR)",
                "name": "EthChPcsErrBlkHiOrderCnt",
                "ptr": "mac_csr.EthChPcsErrBlkHiOrderCnt",
                "type": "reg"
            },
            "0x000000c8": {
                "altname": "ETH_CHAN_PCS_MULTILANE_ALIGN_STAT_1",
                "description": "Lane alignment status",
                "name": "EthChPcsLaneAlignStat1",
                "ptr": "mac_csr.EthChPcsLaneAlignStat1",
                "type": "reg"
            },
            "0x000000cc": {
                "altname": "ETH_CHAN_PCS_MULTILANE_ALIGN_STAT_2",
                "description": "Lane alignment status",
                "name": "EthChPcsLaneAlignStat2",
                "ptr": "mac_csr.EthChPcsLaneAlignStat2",
                "type": "reg"
            },
            "0x000000d0": {
                "altname": "ETH_CHAN_PCS_MULTILANE_ALIGN_STAT_3",
                "description": "Lane alignment status",
                "name": "EthChPcsLaneAlignStat3",
                "ptr": "mac_csr.EthChPcsLaneAlignStat3",
                "type": "reg"
            },
            "0x000000d4": {
                "altname": "ETH_CHAN_PCS_MULTILANE_ALIGN_STAT_4",
                "description": "Lane alignment status",
                "name": "EthChPcsLaneAlignStat4",
                "ptr": "mac_csr.EthChPcsLaneAlignStat4",
                "type": "reg"
            },
            "0x00000168": {
                "altname": "ETH_CHAN_PCS_BIP_ERR_CNT_LANE0",
                "description": "BIP error counter lane 0.",
                "name": "EthChPcsBipErrCntLane0",
                "ptr": "mac_csr.EthChPcsBipErrCnt",
                "type": "reg"
            },
            "0x0000016c": {
                "altname": "ETH_CHAN_PCS_BIP_ERR_CNT_LANE1",
                "description": "BIP error counter lane 1.",
                "name": "EthChPcsBipErrCntLane1",
                "ptr": "mac_csr.EthChPcsBipErrCnt",
                "type": "reg"
            },
            "0x00000170": {
                "altname": "ETH_CHAN_PCS_BIP_ERR_CNT_LANE2",
                "description": "BIP error counter lane 2.",
                "name": "EthChPcsBipErrCntLane2",
                "ptr": "mac_csr.EthChPcsBipErrCnt",
                "type": "reg"
            },
            "0x00000174": {
                "altname": "ETH_CHAN_PCS_BIP_ERR_CNT_LANE3",
                "description": "BIP error counter lane 3.",
                "name": "EthChPcsBipErrCntLane3",
                "ptr": "mac_csr.EthChPcsBipErrCnt",
                "type": "reg"
            },
            "0x00000178": {
                "altname": "ETH_CHAN_PCS_BIP_ERR_CNT_LANE4",
                "description": "BIP error counter lane 4.",
                "name": "EthChPcsBipErrCntLane4",
                "ptr": "mac_csr.EthChPcsBipErrCnt",
                "type": "reg"
            },
            "0x0000017c": {
                "altname": "ETH_CHAN_PCS_BIP_ERR_CNT_LANE5",
                "description": "BIP error counter lane 5.",
                "name": "EthChPcsBipErrCntLane5",
                "ptr": "mac_csr.EthChPcsBipErrCnt",
                "type": "reg"
            },
            "0x00000180": {
                "altname": "ETH_CHAN_PCS_BIP_ERR_CNT_LANE6",
                "description": "BIP error counter lane 6.",
                "name": "EthChPcsBipErrCntLane6",
                "ptr": "mac_csr.EthChPcsBipErrCnt",
                "type": "reg"
            },
            "0x00000184": {
                "altname": "ETH_CHAN_PCS_BIP_ERR_CNT_LANE7",
                "description": "BIP error counter lane 7.",
                "name": "EthChPcsBipErrCntLane7",
                "ptr": "mac_csr.EthChPcsBipErrCnt",
                "type": "reg"
            },
            "0x00000188": {
                "altname": "ETH_CHAN_PCS_BIP_ERR_CNT_LANE8",
                "description": "BIP error counter lane 8.",
                "name": "EthChPcsBipErrCntLane8",
                "ptr": "mac_csr.EthChPcsBipErrCnt",
                "type": "reg"
            },
            "0x0000018c": {
                "altname": "ETH_CHAN_PCS_BIP_ERR_CNT_LANE9",
                "description": "BIP error counter lane 9.",
                "name": "EthChPcsBipErrCntLane9",
                "ptr": "mac_csr.EthChPcsBipErrCnt",
                "type": "reg"
            },
            "0x00000190": {
                "altname": "ETH_CHAN_PCS_BIP_ERR_CNT_LANE10",
                "description": "BIP error counter lane 10.",
                "name": "EthChPcsBipErrCntLane10",
                "ptr": "mac_csr.EthChPcsBipErrCnt",
                "type": "reg"
            },
            "0x00000194": {
                "altname": "ETH_CHAN_PCS_BIP_ERR_CNT_LANE11",
                "description": "BIP error counter lane 11.",
                "name": "EthChPcsBipErrCntLane11",
                "ptr": "mac_csr.EthChPcsBipErrCnt",
                "type": "reg"
            },
            "0x00000198": {
                "altname": "ETH_CHAN_PCS_BIP_ERR_CNT_LANE12",
                "description": "BIP error counter lane 12.",
                "name": "EthChPcsBipErrCntLane12",
                "ptr": "mac_csr.EthChPcsBipErrCnt",
                "type": "reg"
            },
            "0x0000019c": {
                "altname": "ETH_CHAN_PCS_BIP_ERR_CNT_LANE13",
                "description": "BIP error counter lane 13.",
                "name": "EthChPcsBipErrCntLane13",
                "ptr": "mac_csr.EthChPcsBipErrCnt",
                "type": "reg"
            },
            "0x000001a0": {
                "altname": "ETH_CHAN_PCS_BIP_ERR_CNT_LANE14",
                "description": "BIP error counter lane 14.",
                "name": "EthChPcsBipErrCntLane14",
                "ptr": "mac_csr.EthChPcsBipErrCnt",
                "type": "reg"
            },
            "0x000001a4": {
                "altname": "ETH_CHAN_PCS_BIP_ERR_CNT_LANE15",
                "description": "BIP error counter lane 15.",
                "name": "EthChPcsBipErrCntLane15",
                "ptr": "mac_csr.EthChPcsBipErrCnt",
                "type": "reg"
            },
            "0x000001a8": {
                "altname": "ETH_CHAN_PCS_BIP_ERR_CNT_LANE16",
                "description": "BIP error counter lane 16.",
                "name": "EthChPcsBipErrCntLane16",
                "ptr": "mac_csr.EthChPcsBipErrCnt",
                "type": "reg"
            },
            "0x000001ac": {
                "altname": "ETH_CHAN_PCS_BIP_ERR_CNT_LANE17",
                "description": "BIP error counter lane 17.",
                "name": "EthChPcsBipErrCntLane17",
                "ptr": "mac_csr.EthChPcsBipErrCnt",
                "type": "reg"
            },
            "0x000001b0": {
                "altname": "ETH_CHAN_PCS_BIP_ERR_CNT_LANE18",
                "description": "BIP error counter lane 18.",
                "name": "EthChPcsBipErrCntLane18",
                "ptr": "mac_csr.EthChPcsBipErrCnt",
                "type": "reg"
            },
            "0x000001b4": {
                "altname": "ETH_CHAN_PCS_BIP_ERR_CNT_LANE19",
                "description": "BIP error counter lane 19.",
                "name": "EthChPcsBipErrCntLane19",
                "ptr": "mac_csr.EthChPcsBipErrCnt",
                "type": "reg"
            },
            "0x000001b8": {
                "altname": "ETH_CHAN_PCS_LANE_MAP_LANE0",
                "description": "Lane 0 mapping register.",
                "name": "EthChPcsLaneMapLane0",
                "ptr": "mac_csr.EthChPcsLaneMap",
                "type": "reg"
            },
            "0x000001bc": {
                "altname": "ETH_CHAN_PCS_LANE_MAP_LANE1",
                "description": "Lane 1 mapping register.",
                "name": "EthChPcsLaneMapLane1",
                "ptr": "mac_csr.EthChPcsLaneMap",
                "type": "reg"
            },
            "0x000001c0": {
                "altname": "ETH_CHAN_PCS_LANE_MAP_LANE2",
                "description": "Lane 2 mapping register.",
                "name": "EthChPcsLaneMapLane2",
                "ptr": "mac_csr.EthChPcsLaneMap",
                "type": "reg"
            },
            "0x000001c4": {
                "altname": "ETH_CHAN_PCS_LANE_MAP_LANE3",
                "description": "Lane 3 mapping register.",
                "name": "EthChPcsLaneMapLane3",
                "ptr": "mac_csr.EthChPcsLaneMap",
                "type": "reg"
            },
            "0x000001c8": {
                "altname": "ETH_CHAN_PCS_LANE_MAP_LANE4",
                "description": "Lane 4 mapping register.",
                "name": "EthChPcsLaneMapLane4",
                "ptr": "mac_csr.EthChPcsLaneMap",
                "type": "reg"
            },
            "0x000001cc": {
                "altname": "ETH_CHAN_PCS_LANE_MAP_LANE5",
                "description": "Lane 5 mapping register.",
                "name": "EthChPcsLaneMapLane5",
                "ptr": "mac_csr.EthChPcsLaneMap",
                "type": "reg"
            },
            "0x000001d0": {
                "altname": "ETH_CHAN_PCS_LANE_MAP_LANE6",
                "description": "Lane 6 mapping register.",
                "name": "EthChPcsLaneMapLane6",
                "ptr": "mac_csr.EthChPcsLaneMap",
                "type": "reg"
            },
            "0x000001d4": {
                "altname": "ETH_CHAN_PCS_LANE_MAP_LANE7",
                "description": "Lane 7 mapping register.",
                "name": "EthChPcsLaneMapLane7",
                "ptr": "mac_csr.EthChPcsLaneMap",
                "type": "reg"
            },
            "0x000001d8": {
                "altname": "ETH_CHAN_PCS_LANE_MAP_LANE8",
                "description": "Lane 8 mapping register.",
                "name": "EthChPcsLaneMapLane8",
                "ptr": "mac_csr.EthChPcsLaneMap",
                "type": "reg"
            },
            "0x000001dc": {
                "altname": "ETH_CHAN_PCS_LANE_MAP_LANE9",
                "description": "Lane 9 mapping register.",
                "name": "EthChPcsLaneMapLane9",
                "ptr": "mac_csr.EthChPcsLaneMap",
                "type": "reg"
            },
            "0x000001e0": {
                "altname": "ETH_CHAN_PCS_LANE_MAP_LANE10",
                "description": "Lane 10 mapping register.",
                "name": "EthChPcsLaneMapLane10",
                "ptr": "mac_csr.EthChPcsLaneMap",
                "type": "reg"
            },
            "0x000001e4": {
                "altname": "ETH_CHAN_PCS_LANE_MAP_LANE11",
                "description": "Lane 11 mapping register.",
                "name": "EthChPcsLaneMapLane11",
                "ptr": "mac_csr.EthChPcsLaneMap",
                "type": "reg"
            },
            "0x000001e8": {
                "altname": "ETH_CHAN_PCS_LANE_MAP_LANE12",
                "description": "Lane 12 mapping register.",
                "name": "EthChPcsLaneMapLane12",
                "ptr": "mac_csr.EthChPcsLaneMap",
                "type": "reg"
            },
            "0x000001ec": {
                "altname": "ETH_CHAN_PCS_LANE_MAP_LANE13",
                "description": "Lane 13 mapping register.",
                "name": "EthChPcsLaneMapLane13",
                "ptr": "mac_csr.EthChPcsLaneMap",
                "type": "reg"
            },
            "0x000001f0": {
                "altname": "ETH_CHAN_PCS_LANE_MAP_LANE14",
                "description": "Lane 14 mapping register.",
                "name": "EthChPcsLaneMapLane14",
                "ptr": "mac_csr.EthChPcsLaneMap",
                "type": "reg"
            },
            "0x000001f4": {
                "altname": "ETH_CHAN_PCS_LANE_MAP_LANE15",
                "description": "Lane 15 mapping register.",
                "name": "EthChPcsLaneMapLane15",
                "ptr": "mac_csr.EthChPcsLaneMap",
                "type": "reg"
            },
            "0x000001f8": {
                "altname": "ETH_CHAN_PCS_LANE_MAP_LANE16",
                "description": "Lane 16 mapping register.",
                "name": "EthChPcsLaneMapLane16",
                "ptr": "mac_csr.EthChPcsLaneMap",
                "type": "reg"
            },
            "0x000001fc": {
                "altname": "ETH_CHAN_PCS_LANE_MAP_LANE17",
                "description": "Lane 17 mapping register.",
                "name": "EthChPcsLaneMapLane17",
                "ptr": "mac_csr.EthChPcsLaneMap",
                "type": "reg"
            },
            "0x00000200": {
                "altname": "ETH_CHAN_PCS_LANE_MAP_LANE18",
                "description": "Lane 18 mapping register.",
                "name": "EthChPcsLaneMapLane18",
                "ptr": "mac_csr.EthChPcsLaneMap",
                "type": "reg"
            },
            "0x00000204": {
                "altname": "ETH_CHAN_PCS_LANE_MAP_LANE19",
                "description": "Lane 19 mapping register.",
                "name": "EthChPcsLaneMapLane19",
                "ptr": "mac_csr.EthChPcsLaneMap",
                "type": "reg"
            }
        },
        "mac_csr.MacEthFecLT": {
            "0x00000000": {
                "altname": "ETH_FEC_LT_SEG%d",
                "description": "MAC%d FEC/Link training",
                "name": "MacEthFecLTSeg%d",
                "offinc1": "0x00000040",
                "ptr": "mac_csr.MacEthFecLTSeg",
                "repeat1": 12,
                "type": "regmap"
            },
            "0x00000300": {
                "altname": "ETH_FEC_CORR_BLK_CNT_LO_VL1",
                "description": "Base-R FEC Corrected block counter 15:00. virtual lane 1 (100G)",
                "name": "EthFecCErrCntLoVl1",
                "ptr": "mac_csr.EthFecBlkCntLo",
                "type": "reg"
            },
            "0x00000304": {
                "altname": "ETH_FEC_CORR_BLK_CNT_HI_VL1",
                "description": "Base-R FEC Corrected block counter 31:16. virtual lane 1 (100G)",
                "name": "EthFecCErrCntHiVl1",
                "ptr": "mac_csr.EthFecBlkCntHi",
                "type": "reg"
            },
            "0x00000308": {
                "altname": "ETH_FEC_CORR_BLK_CNT_LO_VL3",
                "description": "Base-R FEC Corrected block counter 15:00. virtual lane 3 (100G)",
                "name": "EthFecCErrCntLoVl3",
                "ptr": "mac_csr.EthFecBlkCntLo",
                "type": "reg"
            },
            "0x0000030c": {
                "altname": "ETH_FEC_CORR_BLK_CNT_HI_VL3",
                "description": "Base-R FEC Corrected block counter 31:16. virtual lane 3 (100G)",
                "name": "EthFecCErrCntHiVl3",
                "ptr": "mac_csr.EthFecBlkCntHi",
                "type": "reg"
            },
            "0x00000310": {
                "altname": "ETH_FEC_CORR_BLK_CNT_LO_VL5",
                "description": "Base-R FEC Corrected block counter 15:00. virtual lane 5 (100G)",
                "name": "EthFecCErrCntLoVl5",
                "ptr": "mac_csr.EthFecBlkCntLo",
                "type": "reg"
            },
            "0x00000314": {
                "altname": "ETH_FEC_CORR_BLK_CNT_HI_VL5",
                "description": "Base-R FEC Corrected block counter 31:16. virtual lane 5 (100G)",
                "name": "EthFecCErrCntHiVl5",
                "ptr": "mac_csr.EthFecBlkCntHi",
                "type": "reg"
            },
            "0x00000318": {
                "altname": "ETH_FEC_CORR_BLK_CNT_LO_VL7",
                "description": "Base-R FEC Corrected block counter 15:00. virtual lane 7 (100G)",
                "name": "EthFecCErrCntLoVl7",
                "ptr": "mac_csr.EthFecBlkCntLo",
                "type": "reg"
            },
            "0x0000031c": {
                "altname": "ETH_FEC_CORR_BLK_CNT_HI_VL7",
                "description": "Base-R FEC Corrected block counter 31:16. virtual lane 7 (100G)",
                "name": "EthFecCErrCntHiVl7",
                "ptr": "mac_csr.EthFecBlkCntHi",
                "type": "reg"
            },
            "0x00000320": {
                "altname": "ETH_FEC_CORR_BLK_CNT_LO_VL9",
                "description": "Base-R FEC Corrected block counter 15:00. virtual lane 9 (100G)",
                "name": "EthFecCErrCntLoVl9",
                "ptr": "mac_csr.EthFecBlkCntLo",
                "type": "reg"
            },
            "0x00000324": {
                "altname": "ETH_FEC_CORR_BLK_CNT_HI_VL9",
                "description": "Base-R FEC Corrected block counter 31:16. virtual lane 9 (100G)",
                "name": "EthFecCErrCntHiVl9",
                "ptr": "mac_csr.EthFecBlkCntHi",
                "type": "reg"
            },
            "0x00000328": {
                "altname": "ETH_FEC_CORR_BLK_CNT_LO_VL11",
                "description": "Base-R FEC Corrected block counter 15:00. virtual lane 11 (100G)",
                "name": "EthFecCErrCntLoVl11",
                "ptr": "mac_csr.EthFecBlkCntLo",
                "type": "reg"
            },
            "0x0000032c": {
                "altname": "ETH_FEC_CORR_BLK_CNT_HI_VL11",
                "description": "Base-R FEC Corrected block counter 31:16. virtual lane 11 (100G)",
                "name": "EthFecCErrCntHiVl11",
                "ptr": "mac_csr.EthFecBlkCntHi",
                "type": "reg"
            },
            "0x00000330": {
                "altname": "ETH_FEC_CORR_BLK_CNT_LO_VL13",
                "description": "Base-R FEC Corrected block counter 15:00. virtual lane 13 (100G)",
                "name": "EthFecCErrCntLoVl13",
                "ptr": "mac_csr.EthFecBlkCntLo",
                "type": "reg"
            },
            "0x00000334": {
                "altname": "ETH_FEC_CORR_BLK_CNT_HI_VL13",
                "description": "Base-R FEC Corrected block counter 31:16. virtual lane 13 (100G)",
                "name": "EthFecCErrCntHiVl13",
                "ptr": "mac_csr.EthFecBlkCntHi",
                "type": "reg"
            },
            "0x00000338": {
                "altname": "ETH_FEC_CORR_BLK_CNT_LO_VL15",
                "description": "Base-R FEC Corrected block counter 15:00. virtual lane 15 (100G)",
                "name": "EthFecCErrCntLoVl15",
                "ptr": "mac_csr.EthFecBlkCntLo",
                "type": "reg"
            },
            "0x0000033c": {
                "altname": "ETH_FEC_CORR_BLK_CNT_HI_VL15",
                "description": "Base-R FEC Corrected block counter 31:16. virtual lane 15 (100G)",
                "name": "EthFecCErrCntHiVl15",
                "ptr": "mac_csr.EthFecBlkCntHi",
                "type": "reg"
            },
            "0x00000340": {
                "altname": "ETH_FEC_CORR_BLK_CNT_LO_VL17",
                "description": "Base-R FEC Corrected block counter 15:00. virtual lane 17 (100G)",
                "name": "EthFecCErrCntLoVl17",
                "ptr": "mac_csr.EthFecBlkCntLo",
                "type": "reg"
            },
            "0x00000344": {
                "altname": "ETH_FEC_CORR_BLK_CNT_HI_VL17",
                "description": "Base-R FEC Corrected block counter 31:16. virtual lane 17 (100G)",
                "name": "EthFecCErrCntHiVl17",
                "ptr": "mac_csr.EthFecBlkCntHi",
                "type": "reg"
            },
            "0x00000348": {
                "altname": "ETH_FEC_CORR_BLK_CNT_LO_VL19",
                "description": "Base-R FEC Corrected block counter 15:00. virtual lane 19 (100G)",
                "name": "EthFecCErrCntLoVl19",
                "ptr": "mac_csr.EthFecBlkCntLo",
                "type": "reg"
            },
            "0x0000034c": {
                "altname": "ETH_FEC_CORR_BLK_CNT_HI_VL19",
                "description": "Base-R FEC Corrected block counter 31:16. virtual lane 19 (100G)",
                "name": "EthFecCErrCntHiVl19",
                "ptr": "mac_csr.EthFecBlkCntHi",
                "type": "reg"
            },
            "0x00000380": {
                "altname": "ETH_FEC_UNCORR_BLK_CNT_LO_VL1",
                "description": "Base-R FEC UnCorrected block counter 15:00. virtual lane 1 (100G)",
                "name": "EthFecNcErrCntLoVl1",
                "ptr": "mac_csr.EthFecBlkCntLo",
                "type": "reg"
            },
            "0x00000384": {
                "altname": "ETH_FEC_UNCORR_BLK_CNT_HI_VL1",
                "description": "Base-R FEC UnCorrected block counter 31:16. virtual lane 1 (100G)",
                "name": "EthFecNcErrCntHiVl1",
                "ptr": "mac_csr.EthFecBlkCntHi",
                "type": "reg"
            },
            "0x00000388": {
                "altname": "ETH_FEC_UNCORR_BLK_CNT_LO_VL3",
                "description": "Base-R FEC UnCorrected block counter 15:00. virtual lane 3 (100G)",
                "name": "EthFecNcErrCntLoVl3",
                "ptr": "mac_csr.EthFecBlkCntLo",
                "type": "reg"
            },
            "0x0000038c": {
                "altname": "ETH_FEC_UNCORR_BLK_CNT_HI_VL3",
                "description": "Base-R FEC UnCorrected block counter 31:16. virtual lane 3 (100G)",
                "name": "EthFecNcErrCntHiVl3",
                "ptr": "mac_csr.EthFecBlkCntHi",
                "type": "reg"
            },
            "0x00000390": {
                "altname": "ETH_FEC_UNCORR_BLK_CNT_LO_VL5",
                "description": "Base-R FEC UnCorrected block counter 15:00. virtual lane 5 (100G)",
                "name": "EthFecNcErrCntLoVl5",
                "ptr": "mac_csr.EthFecBlkCntLo",
                "type": "reg"
            },
            "0x00000394": {
                "altname": "ETH_FEC_UNCORR_BLK_CNT_HI_VL5",
                "description": "Base-R FEC UnCorrected block counter 31:16. virtual lane 5 (100G)",
                "name": "EthFecNcErrCntHiVl5",
                "ptr": "mac_csr.EthFecBlkCntHi",
                "type": "reg"
            },
            "0x00000398": {
                "altname": "ETH_FEC_UNCORR_BLK_CNT_LO_VL7",
                "description": "Base-R FEC UnCorrected block counter 15:00. virtual lane 7 (100G)",
                "name": "EthFecNcErrCntLoVl7",
                "ptr": "mac_csr.EthFecBlkCntLo",
                "type": "reg"
            },
            "0x0000039c": {
                "altname": "ETH_FEC_UNCORR_BLK_CNT_HI_VL7",
                "description": "Base-R FEC UnCorrected block counter 31:16. virtual lane 7 (100G)",
                "name": "EthFecNcErrCntHiVl7",
                "ptr": "mac_csr.EthFecBlkCntHi",
                "type": "reg"
            },
            "0x000003a0": {
                "altname": "ETH_FEC_UNCORR_BLK_CNT_LO_VL9",
                "description": "Base-R FEC UnCorrected block counter 15:00. virtual lane 9 (100G)",
                "name": "EthFecNcErrCntLoVl9",
                "ptr": "mac_csr.EthFecBlkCntLo",
                "type": "reg"
            },
            "0x000003a4": {
                "altname": "ETH_FEC_UNCORR_BLK_CNT_HI_VL9",
                "description": "Base-R FEC UnCorrected block counter 31:16. virtual lane 9 (100G)",
                "name": "EthFecNcErrCntHiVl9",
                "ptr": "mac_csr.EthFecBlkCntHi",
                "type": "reg"
            },
            "0x000003a8": {
                "altname": "ETH_FEC_UNCORR_BLK_CNT_LO_VL11",
                "description": "Base-R FEC UnCorrected block counter 15:00. virtual lane 11 (100G)",
                "name": "EthFecNcErrCntLoVl11",
                "ptr": "mac_csr.EthFecBlkCntLo",
                "type": "reg"
            },
            "0x000003ac": {
                "altname": "ETH_FEC_UNCORR_BLK_CNT_HI_VL11",
                "description": "Base-R FEC UnCorrected block counter 31:16. virtual lane 11 (100G)",
                "name": "EthFecNcErrCntHiVl11",
                "ptr": "mac_csr.EthFecBlkCntHi",
                "type": "reg"
            },
            "0x000003b0": {
                "altname": "ETH_FEC_UNCORR_BLK_CNT_LO_VL13",
                "description": "Base-R FEC UnCorrected block counter 15:00. virtual lane 13 (100G)",
                "name": "EthFecNcErrCntLoVl13",
                "ptr": "mac_csr.EthFecBlkCntLo",
                "type": "reg"
            },
            "0x000003b4": {
                "altname": "ETH_FEC_UNCORR_BLK_CNT_HI_VL13",
                "description": "Base-R FEC UnCorrected block counter 31:16. virtual lane 13 (100G)",
                "name": "EthFecNcErrCntHiVl13",
                "ptr": "mac_csr.EthFecBlkCntHi",
                "type": "reg"
            },
            "0x000003b8": {
                "altname": "ETH_FEC_UNCORR_BLK_CNT_LO_VL15",
                "description": "Base-R FEC UnCorrected block counter 15:00. virtual lane 15 (100G)",
                "name": "EthFecNcErrCntLoVl15",
                "ptr": "mac_csr.EthFecBlkCntLo",
                "type": "reg"
            },
            "0x000003bc": {
                "altname": "ETH_FEC_UNCORR_BLK_CNT_HI_VL15",
                "description": "Base-R FEC UnCorrected block counter 31:16. virtual lane 15 (100G)",
                "name": "EthFecNcErrCntHiVl15",
                "ptr": "mac_csr.EthFecBlkCntHi",
                "type": "reg"
            },
            "0x000003c0": {
                "altname": "ETH_FEC_UNCORR_BLK_CNT_LO_VL17",
                "description": "Base-R FEC UnCorrected block counter 15:00. virtual lane 17 (100G)",
                "name": "EthFecNcErrCntLoVl17",
                "ptr": "mac_csr.EthFecBlkCntLo",
                "type": "reg"
            },
            "0x000003c4": {
                "altname": "ETH_FEC_UNCORR_BLK_CNT_HI_VL17",
                "description": "Base-R FEC UnCorrected block counter 31:16. virtual lane 17 (100G)",
                "name": "EthFecNcErrCntHiVl17",
                "ptr": "mac_csr.EthFecBlkCntHi",
                "type": "reg"
            },
            "0x000003c8": {
                "altname": "ETH_FEC_UNCORR_BLK_CNT_LO_VL19",
                "description": "Base-R FEC UnCorrected block counter 15:00. virtual lane 19 (100G)",
                "name": "EthFecNcErrCntLoVl19",
                "ptr": "mac_csr.EthFecBlkCntLo",
                "type": "reg"
            },
            "0x000003cc": {
                "altname": "ETH_FEC_UNCORR_BLK_CNT_HI_VL19",
                "description": "Base-R FEC UnCorrected block counter 31:16. virtual lane 19 (100G)",
                "name": "EthFecNcErrCntHiVl19",
                "ptr": "mac_csr.EthFecBlkCntHi",
                "type": "reg"
            }
        },
        "mac_csr.MacEthFecLTSeg": {
            "0x00000000": {
                "altname": "ETH_FEC_KR_CTL",
                "description": "Base-R PMD control.",
                "name": "EthFecKRCtl",
                "ptr": "mac_csr.EthFecKRCtl",
                "type": "reg"
            },
            "0x00000004": {
                "altname": "ETH_FEC_KR_STATUS",
                "description": "Base-R PMD status.",
                "name": "EthFecKRStatus",
                "ptr": "mac_csr.EthFecKRStatus",
                "type": "reg"
            },
            "0x00000008": {
                "altname": "ETH_FEC_KR_LP_COEF",
                "description": "Base-R LP coefficient update.",
                "name": "EthFecKRLpCoef",
                "ptr": "mac_csr.EthFecKRLpCoef",
                "type": "reg"
            },
            "0x0000000c": {
                "altname": "ETH_FEC_KR_LP_STATUS",
                "description": "Base-R LP status report.",
                "name": "EthFecKRLpStatus",
                "ptr": "mac_csr.EthFecKRLpCoef",
                "type": "reg"
            },
            "0x00000010": {
                "altname": "ETH_FEC_KR_LD_COEF",
                "description": "Base-R LD coefficient update.",
                "name": "EthFecKRLdCoef",
                "ptr": "mac_csr.EthFecKRLdCoef",
                "type": "reg"
            },
            "0x00000014": {
                "altname": "ETH_FEC_KR_LD_STATUS",
                "description": "Base-R LD status report.",
                "name": "EthFecKRLdStatus",
                "ptr": "mac_csr.EthFecKRLdCoef",
                "type": "reg"
            },
            "0x00000018": {
                "altname": "ETH_FEC_ABILITY",
                "description": "Base-R FEC ability.",
                "name": "EthFecAbility",
                "ptr": "mac_csr.EthFecAbility",
                "type": "reg"
            },
            "0x0000001c": {
                "altname": "ETH_FEC_CONTROL",
                "description": "Base-R FEC control.",
                "name": "EthFecControl",
                "ptr": "mac_csr.EthFecControl",
                "type": "reg"
            },
            "0x00000020": {
                "altname": "ETH_FEC_STATUS",
                "description": "Base-R FEC status.",
                "name": "EthFecStatus",
                "ptr": "mac_csr.EthFecStatus",
                "type": "reg"
            },
            "0x00000024": {
                "altname": "ETH_FEC_CORR_BLK_CNT_LO",
                "description": "Base-R FEC Corrected block counter 15:0.",
                "name": "EthFecCErrBlkCntLo",
                "ptr": "mac_csr.EthFecBlkCntLo",
                "type": "reg"
            },
            "0x00000028": {
                "altname": "ETH_FEC_CORR_BLK_CNT_HI",
                "description": "Base-R FEC Corrected block counter 31:16.",
                "name": "EthFecCErrBlkCntHi",
                "ptr": "mac_csr.EthFecBlkCntHi",
                "type": "reg"
            },
            "0x0000002c": {
                "altname": "ETH_FEC_UNCORR_BLK_CNT_LO",
                "description": "Base-R FEC Uncorrected block counter 15:0.",
                "name": "EthFecNcErrBlkCntLo",
                "ptr": "mac_csr.EthFecBlkCntLo",
                "type": "reg"
            },
            "0x00000030": {
                "altname": "ETH_FEC_UNCORR_BLK_CNT_HI",
                "description": "Base-R FEC Uncorrected block counter 31:16.",
                "name": "EthFecNcErrBlkCntHi",
                "ptr": "mac_csr.EthFecBlkCntHi",
                "type": "reg"
            }
        },
        "mac_csr.MacEthGlobal": {
            "0x00000000": {
                "altname": "ETH_ACT_CTL_SEG",
                "description": "Active segment control registers",
                "name": "EthActCtlSeg",
                "ptr": "mac_csr.EthActCtlSeg",
                "type": "reg"
            },
            "0x00000004": {
                "altname": "ETH_MODE_CTL_SEG",
                "description": "Segment Mode control registers",
                "name": "EthModeCtlSeg",
                "ptr": "mac_csr.EthModeCtlSeg",
                "type": "reg"
            },
            "0x00000008": {
                "altname": "ETH_TXCLK_CTL_SEG",
                "description": "TXCLK control per segment registers",
                "name": "EthTxClkCtlSeg",
                "ptr": "mac_csr.EthTxClkCtlSeg",
                "type": "reg"
            },
            "0x0000000c": {
                "altname": "ETH_PRMBL_CTL_SEG",
                "description": "User defined TX preamble control per segment",
                "name": "EthPrmblCtlSeg",
                "ptr": "mac_csr.EthPrmblCtlSeg",
                "type": "reg"
            },
            "0x00000020": {
                "altname": "ETH_WAN_RS_COL_CNT",
                "description": "The 16-bit limit for the column-counter for 10GBase-R fault statemachine.",
                "name": "EthWanRsColCnt",
                "ptr": "mac_csr.EthWanRsColCnt",
                "type": "reg"
            },
            "0x00000024": {
                "altname": "ETH_TDM_INIT_CREDIT0",
                "description": "Specifies the Rx initial/max credit value to be loaded for Segment 0-3.",
                "name": "EthTdmInitCredit0",
                "ptr": "mac_csr.EthTdmInitCredit0",
                "type": "reg"
            },
            "0x00000028": {
                "altname": "ETH_TDM_INIT_CREDIT1",
                "description": "Specifies the Rx initial/max credit value to be loaded for Segment 4-7.",
                "name": "EthTdmInitCredit1",
                "ptr": "mac_csr.EthTdmInitCredit1",
                "type": "reg"
            },
            "0x0000002c": {
                "altname": "ETH_TDM_INIT_CREDIT2",
                "description": "Specifies the Rx initial/max credit value to be loaded for Segment 8-11.",
                "name": "EthTdmInitCredit2",
                "ptr": "mac_csr.EthTdmInitCredit2",
                "type": "reg"
            },
            "0x00000030": {
                "altname": "ETH_TDM_CREDIT_REG0",
                "description": "Current credit value for Segment 0-3.",
                "name": "EthTdmCreditReg0",
                "ptr": "mac_csr.EthTdmCreditReg0",
                "type": "reg"
            },
            "0x00000034": {
                "altname": "ETH_TDM_CREDIT_REG1",
                "description": "Current credit value for Segment 4-7.",
                "name": "EthTdmCreditReg1",
                "ptr": "mac_csr.EthTdmCreditReg1",
                "type": "reg"
            },
            "0x00000038": {
                "altname": "ETH_TDM_CREDIT_REG2",
                "description": "Current credit value for Segment 8-11.",
                "name": "EthTdmCreditReg2",
                "ptr": "mac_csr.EthTdmCreditReg2",
                "type": "reg"
            },
            "0x00000040": {
                "altname": "ETH_VL_INTERVAL",
                "description": "Virtual Lane Marker Interval.",
                "name": "EthVLIntvl",
                "ptr": "mac_csr.EthVLIntvl",
                "type": "reg"
            }
        },
        "mac_csr.MacEthMdioCtl": {
            "0x00000000": {
                "altname": "ETH_MDIO_CFG_STATUS",
                "description": "MDIO Status",
                "name": "EthMdioCfgStatus",
                "ptr": "mac_csr.EthMdioCfgStatus",
                "type": "reg"
            },
            "0x00000004": {
                "altname": "ETH_MDIO_COMMAND",
                "description": "MDIO Command (PHY and Port Address)",
                "name": "EthMdioCommand",
                "ptr": "mac_csr.EthMdioCommand",
                "type": "reg"
            },
            "0x00000008": {
                "altname": "ETH_MDIO_DATA",
                "description": "MDIO Data to write and last Data read.",
                "name": "EthMdioData",
                "ptr": "mac_csr.EthMdioData",
                "type": "reg"
            },
            "0x0000000c": {
                "altname": "ETH_MDIO_REG_ADDR",
                "description": "MDIO Register Address.",
                "name": "EthMdioRegAddr",
                "ptr": "mac_csr.EthMdioRegAddr",
                "type": "reg"
            }
        },
        "mac_csr.MacEthPrbs": {
            "0x00000000": {
                "altname": "ETH_PRBS_ENABLE",
                "description": "MAC0 PRBS enables",
                "name": "MacEthPrbsEnable",
                "ptr": "mac_csr.EthPrbsEnable",
                "type": "reg"
            },
            "0x00000004": {
                "altname": "ETH_PRBS31_ERR_CNT_SEG%d",
                "description": "MAC%d PRBS31 Err count 15:0",
                "name": "MacEthPrbs31ErrCntSeg%d",
                "offinc1": "0x00000004",
                "ptr": "mac_csr.EthPrbsErrCnt",
                "repeat1": 12,
                "type": "reg"
            },
            "0x00000034": {
                "altname": "ETH_PRBS9_ERR_CNT_SEG%d",
                "description": "MAC%d PRBS9 Err count 15:0",
                "name": "MacEthPrbs9ErrCntSeg%d",
                "offinc1": "0x00000004",
                "ptr": "mac_csr.EthPrbsErrCnt",
                "repeat1": 12,
                "type": "reg"
            }
        },
        "mac_csr.MacEthSegment": {
            "0x00000000": {
                "altname": "ETH_REVISON",
                "description": "Ethernet MAC Revision register",
                "name": "EthRevision",
                "ptr": "mac_csr.EthRevision",
                "type": "reg"
            },
            "0x00000004": {
                "altname": "ETH_SCRATCH",
                "description": "Ethernet MAC scratch register",
                "name": "EthScratch",
                "ptr": "mac_csr.EthScratch",
                "type": "reg"
            },
            "0x00000008": {
                "altname": "ETH_CMD_CONFIG",
                "description": "Ethernet MAC configuration register",
                "name": "EthCmdConfig",
                "ptr": "mac_csr.EthCmdConfig",
                "type": "reg"
            },
            "0x0000000c": {
                "altname": "ETH_MAC_ADDR_0",
                "description": "Ethernet MAC Addr 31:00",
                "name": "EthMacAddr0",
                "ptr": "mac_csr.EthMacAddr0",
                "type": "reg"
            },
            "0x00000010": {
                "altname": "ETH_MAC_ADDR_1",
                "description": "Ethernet MAC Addr 47:32",
                "name": "EthMacAddr1",
                "ptr": "mac_csr.EthMacAddr1",
                "type": "reg"
            },
            "0x00000014": {
                "altname": "ETH_FRAME_LENGTH",
                "description": "Ethernet MAC max frame length ",
                "name": "EthFrmLength",
                "ptr": "mac_csr.EthFrmLength",
                "type": "reg"
            },
            "0x0000001c": {
                "altname": "ETH_RX_FIFO_SECTIONS",
                "description": "Ethernet RX FIFO section thresholds",
                "name": "EthRxFifoSections",
                "ptr": "mac_csr.EthRxFifoSections",
                "type": "reg"
            },
            "0x00000020": {
                "altname": "ETH_TX_FIFO_SECTIONS",
                "description": "Ethernet TX FIFO section thresholds",
                "name": "EthTxFifoSections",
                "ptr": "mac_csr.EthTxFifoSections",
                "type": "reg"
            },
            "0x00000024": {
                "altname": "ETH_RX_FIFO_ALMOST_FULL_EMPTY",
                "description": "Ethernet RX FIFO almost full/empty WMs",
                "name": "EthRxFifoAlmostFE",
                "ptr": "mac_csr.EthRxFifoAlmostFE",
                "type": "reg"
            },
            "0x00000028": {
                "altname": "ETH_TX_FIFO_ALMOST_FULL_EMPTY",
                "description": "Ethernet TX FIFO almost full/empty WMs",
                "name": "EthTxFifoAlmostFE",
                "ptr": "mac_csr.EthTxFifoAlmostFE",
                "type": "reg"
            },
            "0x0000002c": {
                "altname": "ETH_HASH_TABLE_LOAD",
                "description": "Ethernet Hash Table load register -WO",
                "name": "EthHashTableLoad",
                "ptr": "mac_csr.EthHashTableLoad",
                "type": "reg"
            },
            "0x00000040": {
                "altname": "ETH_STATUS",
                "description": "Ethernet Status",
                "name": "EthStatus",
                "ptr": "mac_csr.EthStatus",
                "type": "reg"
            },
            "0x00000044": {
                "altname": "ETH_TX_IPG_LENGTH",
                "description": "Ethernet Transmit IPG length",
                "name": "EthTxIpgLength",
                "ptr": "mac_csr.EthTxIpgLength",
                "type": "reg"
            },
            "0x00000048": {
                "altname": "ETH_CREDIT_TRIGGER",
                "description": "Ethernet application fifo/credit reset",
                "name": "EthCreditTrigger",
                "ptr": "mac_csr.EthCreditTrigger",
                "type": "reg"
            },
            "0x0000004c": {
                "altname": "ETH_INIT_CREDIT",
                "description": "Ethernet Init Credit",
                "name": "EthInitCredit",
                "ptr": "mac_csr.EthInitCredit",
                "type": "reg"
            },
            "0x00000050": {
                "altname": "ETH_CREDIT_REG",
                "description": "Ethernet credit value for debug read-only",
                "name": "EthCreditReg",
                "ptr": "mac_csr.EthCreditReg",
                "type": "reg"
            },
            "0x00000054": {
                "altname": "ETH_PAUSE_QUANTA_CL01",
                "description": "Value sent for PFC quanta for that class when XOFF is triggered",
                "name": "EthPauseQuantaCL01",
                "ptr": "mac_csr.EthPauseQuantaCL01",
                "type": "reg"
            },
            "0x00000058": {
                "altname": "ETH_PAUSE_QUANTA_CL23",
                "description": "Value sent for PFC quanta for that class when XOFF is triggered",
                "name": "EthPauseQuantaCL23",
                "ptr": "mac_csr.EthPauseQuantaCL23",
                "type": "reg"
            },
            "0x0000005c": {
                "altname": "ETH_PAUSE_QUANTA_CL45",
                "description": "Value sent for PFC quanta for that class when XOFF is triggered",
                "name": "EthPauseQuantaCL45",
                "ptr": "mac_csr.EthPauseQuantaCL45",
                "type": "reg"
            },
            "0x00000060": {
                "altname": "ETH_PAUSE_QUANTA_CL67",
                "description": "Value sent for PFC quanta for that class when XOFF is triggered",
                "name": "EthPauseQuantaCL67",
                "ptr": "mac_csr.EthPauseQuantaCL67",
                "type": "reg"
            },
            "0x00000064": {
                "altname": "ETH_QUANTA_THRESH_CL01",
                "description": "When a PFC quanta timer counts down to this value, a refresh pause frame should be re-sent",
                "name": "EthQuantaThreshCL01",
                "ptr": "mac_csr.EthQuantaThreshCL01",
                "type": "reg"
            },
            "0x00000068": {
                "altname": "ETH_QUANTA_THRESH_CL23",
                "description": "When a PFC quanta timer counts down to this value, a refresh pause frame should be re-sent",
                "name": "EthQuantaThreshCL23",
                "ptr": "mac_csr.EthQuantaThreshCL23",
                "type": "reg"
            },
            "0x0000006c": {
                "altname": "ETH_QUANTA_THRESH_CL45",
                "description": "When a PFC quanta timer counts down to this value, a refresh pause frame should be re-sent",
                "name": "EthQuantaThreshCL45",
                "ptr": "mac_csr.EthQuantaThreshCL45",
                "type": "reg"
            },
            "0x00000070": {
                "altname": "ETH_QUANTA_THRESH_CL67",
                "description": "When a PFC quanta timer counts down to this value, a refresh pause frame should be re-sent",
                "name": "EthQuantaThreshCL67",
                "ptr": "mac_csr.EthQuantaThreshCL67",
                "type": "reg"
            },
            "0x00000074": {
                "altname": "ETH_RX_PAUSE_STATUS",
                "description": "Status bits for software to read the rx pause status.",
                "name": "EthRxPauseStatus",
                "ptr": "mac_csr.EthRxPauseStatus",
                "type": "reg"
            },
            "0x0000007c": {
                "altname": "ETH_TIMESTAMP",
                "description": "Timestamp of the last frame transmitted with timestamp mark enabled.",
                "name": "EthTimestamp",
                "ptr": "mac_csr.EthTimestamp",
                "type": "reg"
            },
            "0x00000280": {
                "altname": "ETH_TX_PREAMBLE_0",
                "description": "The lower 32-Bit of the user defined 56-Bit Transmit Preamble.",
                "name": "EthTxPreamble0",
                "ptr": "mac_csr.EthTxPreamble0",
                "type": "reg"
            },
            "0x00000284": {
                "altname": "ETH_TX_PREAMBLE_1",
                "description": "The upper 24-Bit of the user defined 56-Bit Transmit Preamble.",
                "name": "EthTxPreamble1",
                "ptr": "mac_csr.EthTxPreamble1",
                "type": "reg"
            },
            "0x00000300": {
                "altname": "ETH_SGMII_PCS_CTL",
                "description": "PCS control register for SGMII.",
                "name": "EthSgmiiPcsCtl",
                "ptr": "mac_csr.EthSgmiiPcsCtl",
                "type": "reg"
            },
            "0x00000304": {
                "altname": "ETH_SGMII_PCS_STATUS",
                "description": "PCS Status register for SGMII.",
                "name": "EthSgmiiPcsStatus",
                "ptr": "mac_csr.EthSgmiiPcsStatus",
                "type": "reg"
            },
            "0x00000308": {
                "altname": "ETH_SGMII_PHY_IDENT0",
                "description": "PCS PHY Identifier register for SGMII.",
                "name": "EthSgmiiPhyIdent0",
                "ptr": "mac_csr.EthSgmiiPhyIdent0",
                "type": "reg"
            },
            "0x0000030c": {
                "altname": "ETH_SGMII_PHY_IDENT1",
                "description": "PCS PHY Identifier register for SGMII.",
                "name": "EthSgmiiPhyIdent1",
                "ptr": "mac_csr.EthSgmiiPhyIdent1",
                "type": "reg"
            },
            "0x00000310": {
                "altname": "ETH_DEV_ABILITY",
                "description": "Device ability advertised to link partner during Auto-neg.",
                "name": "EthSgmiiDevAbility",
                "ptr": "mac_csr.EthSgmiiDevAbility",
                "type": "reg"
            },
            "0x00000314": {
                "altname": "ETH_PARTNER_ABILITY",
                "description": "Device ability advertised by  link partner during Auto-neg.",
                "name": "EthSgmiiPartnerAbility",
                "ptr": "mac_csr.EthSgmiiPartnerAbility",
                "type": "reg"
            },
            "0x00000318": {
                "altname": "ETH_AN_EXPANSION",
                "description": "reserved.",
                "name": "EthSgmiiAnExpansion",
                "ptr": "mac_csr.EthSgmiiAnExpansion",
                "type": "reg"
            },
            "0x0000031c": {
                "altname": "ETH_DEVICE_NEXT_PAGE",
                "description": "The PCS does not support next page autonegotiation.",
                "name": "EthSgmiiDeviceNextPage",
                "ptr": "mac_csr.EthSgmiiNoSupport",
                "type": "reg"
            },
            "0x00000320": {
                "altname": "ETH_PARTNER_NEXT_PAGE",
                "description": "The PCS does not support next page autonegotiation.",
                "name": "EthSgmiiPartnerNextPage",
                "ptr": "mac_csr.EthSgmiiNoSupport",
                "type": "reg"
            },
            "0x0000033c": {
                "altname": "ETH_EXTENDED_STATUS",
                "description": "The PCS does not support extended status.",
                "name": "EthSgmiiExtendedStatus",
                "ptr": "mac_csr.EthSgmiiNoSupport",
                "type": "reg"
            },
            "0x00000348": {
                "altname": "ETH_LINK_TIMER_LO",
                "description": "Auto Negotiation Link Timer bits 15:0.",
                "name": "EthSgmiiLinkTimerLo",
                "ptr": "mac_csr.EthSgmiiLinkTimerLo",
                "type": "reg"
            },
            "0x0000034c": {
                "altname": "ETH_LINK_TIMER_HI",
                "description": "Auto Negotiation Link Timer bits 20:16.",
                "name": "EthSgmiiLinkTimerHi",
                "ptr": "mac_csr.EthSgmiiLinkTimerHi",
                "type": "reg"
            },
            "0x00000350": {
                "altname": "ETH_IF_MODE",
                "description": "SGMII Interface Mode register.",
                "name": "EthSgmiiIfMode",
                "ptr": "mac_csr.EthSgmiiIfMode",
                "type": "reg"
            }
        },
        "mac_csr.MacEthVlanTpidCfg": {
            "0x00000000": {
                "altname": "ETH_VLAN_TPID_%d",
                "description": "VLAN Tag TPID %d",
                "name": "EthVlanTpid%d",
                "offinc1": "0x00000004",
                "ptr": "mac_csr.EthVlanTpid",
                "repeat1": 8,
                "type": "reg"
            }
        },
        "mac_csr.MacGlbAdrMap": {
            "0x00000000": {
                "altname": "MAC_CSR",
                "description": "Mac Controller CSRs",
                "name": "MacCsr",
                "ptr": "mac_csr.MacXPB",
                "type": "regmap"
            },
            "0x00010000": {
                "altname": "MAC_INTR_MNG",
                "description": "Mac Interrupt Manager CSRs ",
                "name": "MacIntrMng",
                "ptr": "peripheral_interrupt_manager.InterruptManagerMap_inst0",
                "type": "regmap"
            },
            "0x00020000": {
                "altname": "MAC_ILK",
                "description": "Mac Interlaken Core",
                "name": "MacInterlaken",
                "ptr": "mac_csr.MacInterlaken",
                "type": "regmap"
            },
            "0x00030000": {
                "altname": "MAC_SD_EQ_CTL%d",
                "description": "Mac RX Equalization Controls",
                "name": "MacSerDesEqCtl%d",
                "offinc1": "0x00000040",
                "ptr": "mac_csr.MacSerDesEqCtl",
                "repeat1": 20,
                "type": "regmap"
            },
            "0x00040000": {
                "altname": "MAC_ETH",
                "description": "Mac Ethernet 12-Port IP Core ",
                "name": "MacEthernet",
                "ptr": "mac_csr.Mac12Ethernet",
                "type": "regmap"
            },
            "0x00060000": {
                "altname": "MAC_4ETH",
                "description": "Mac Ethernet 4-Port 25G IP Core ",
                "name": "Mac4Ethernet",
                "ptr": "mac_csr.Mac4Ethernet",
                "type": "regmap"
            },
            "0x00080000": {
                "altname": "MAC_CORES_CSR_MEM_CTRL",
                "description": "Mac 12-port IP memory control CSRs ",
                "name": "MacCoresCsrMemCtrl",
                "ptr": "mac_csr.MacMemCtrl",
                "type": "regmap"
            },
            "0x000a0000": {
                "altname": "MAC_CDS_ECC_MON%d",
                "description": "Mac ECC%d Monitor CSRs. Refer ECC Monitor section for all the ECC macro Implementation ",
                "name": "MacCdsEccMon%d",
                "offinc1": "0x00010000",
                "ptr": "peripheral_ecc_monitor.ECCControlMany",
                "repeat1": 6,
                "type": "regmap"
            },
            "0x003f0000": {
                "altname": "MAC_OVL_EXT",
                "description": "Mac Overlay Extension",
                "name": "MacOvlExt",
                "ptr": "island_overlay.IslandOverlayExtMap",
                "type": "regmap"
            }
        },
        "mac_csr.MacInterlaken": {
            "0x00000000": {
                "altname": "INTLKN_TX_INFO",
                "description": "Interlaken Mac TX Core Info",
                "name": "LkTxInfo",
                "ptr": "mac_csr.LkInfo",
                "type": "reg"
            },
            "0x00000004": {
                "altname": "INTLKN_INFO2",
                "description": "Interlaken Mac TX Core Info2",
                "name": "LkTxInfo2",
                "ptr": "mac_csr.LkInfo2",
                "type": "reg"
            },
            "0x00000008": {
                "altname": "INTLKN_TX_LANE_DISABLE",
                "description": "Interlaken Mac TX Core Lane Disable",
                "name": "LkTxLaneDisable",
                "ptr": "mac_csr.LkLaneDisable",
                "type": "reg"
            },
            "0x00000010": {
                "altname": "INTLKN_TX_CONFIG",
                "description": "Interlaken Mac TX Core Config",
                "name": "LkTxConfig",
                "ptr": "mac_csr.LkConfig",
                "type": "reg"
            },
            "0x00000018": {
                "altname": "INTLKN_TX_CONTROL",
                "description": "Interlaken Mac TX Core Control",
                "name": "LkTxControl",
                "ptr": "mac_csr.LkTxControl",
                "type": "reg"
            },
            "0x00000020": {
                "altname": "INTLKN_TXFIFO_CONFIG",
                "description": "Interlaken Mac TX Core Fifo Config",
                "name": "LkTxFifoConfig",
                "ptr": "mac_csr.LkTxFifoConfig",
                "type": "reg"
            },
            "0x00000028": {
                "altname": "INTLKN_SERDES_TXFIFO_CONFIG",
                "description": "Interlaken Mac TX Core SerDes Fifo Config",
                "name": "LkSerDesTxFifoConfig",
                "ptr": "mac_csr.LkSerDesTxFifoConfig",
                "type": "reg"
            },
            "0x00000030": {
                "altname": "INTLKN_TX_BURST_CONFIG",
                "description": "Interlaken Mac TX Core Burst Config",
                "name": "LkTxBurstConfig",
                "ptr": "mac_csr.LkBurstConfig",
                "type": "reg"
            },
            "0x00000034": {
                "altname": "INTLKN_TX_METAFRAME_SYNC_PERIOD",
                "description": "Interlaken Mac TX MetaFrame Sync Period",
                "name": "LkTxMetaFrameSyncPeriod",
                "ptr": "mac_csr.LkMetaFrameSyncPeriod",
                "type": "reg"
            },
            "0x00000038": {
                "altname": "INTLKN_TX_RATE_LIMIT0",
                "description": "Interlaken TX Rate Limit0",
                "name": "LkTxRateLimit0",
                "ptr": "mac_csr.LkTxRateLimit0",
                "type": "reg"
            },
            "0x0000003c": {
                "altname": "INTLKN_TX_RATE_LIMIT1",
                "description": "Interlaken TX Rate Limit1",
                "name": "LkTxRateLimit1",
                "ptr": "mac_csr.LkTxRateLimit1",
                "type": "reg"
            },
            "0x00000050": {
                "altname": "INTLKN_ERR_INJECT0",
                "description": "Interlaken TX Error Inject0",
                "name": "LkTxErrInject0",
                "ptr": "mac_csr.LkTxErrInject",
                "type": "reg"
            },
            "0x00000054": {
                "altname": "INTLKN_ERR_INJECT1",
                "description": "Interlaken TX Error Inject1",
                "name": "LkTxErrInject1",
                "ptr": "mac_csr.LkTxErrInject",
                "type": "reg"
            },
            "0x00000058": {
                "altname": "INTLKN_ERR_INJECT2",
                "description": "Interlaken TX Error Inject2",
                "name": "LkTxErrInject2",
                "ptr": "mac_csr.LkTxErrInject",
                "type": "reg"
            },
            "0x0000005c": {
                "altname": "INTLKN_ERR_INJECT3",
                "description": "Interlaken TX Error Inject3",
                "name": "LkTxErrInject3",
                "ptr": "mac_csr.LkTxErrInject",
                "type": "reg"
            },
            "0x00000074": {
                "altname": "INTLKN_TX_STATS_ACC",
                "description": "Interlaken TX Statistics Counter Access",
                "name": "LkTxStatsAcc",
                "ptr": "mac_csr.LkStatsAcc",
                "type": "reg"
            },
            "0x00000078": {
                "altname": "INTLKN_TX_STATS_FILL",
                "description": "Interlaken TX Statistics Counter Fill",
                "name": "LkTxStatsFill",
                "ptr": "mac_csr.LkStatsFill",
                "type": "reg"
            },
            "0x0000007c": {
                "altname": "INTLKN_TX_STATS_PARITY",
                "description": "Interlaken TX Statistics Counter Parity",
                "name": "LkTxStatsParity",
                "ptr": "mac_csr.LkStatsParity",
                "type": "reg"
            },
            "0x00000080": {
                "altname": "INTLKN_TX_STATS_WRITE_BYTE_HIGH",
                "description": "Interlaken TX Statistics Write Byte Counter High",
                "name": "LkTxStatsWrByteHi",
                "ptr": "mac_csr.LkStatsWrByteHi",
                "type": "reg"
            },
            "0x00000084": {
                "altname": "INTLKN_TX_STATS_WRITE_BYTE_LOW",
                "description": "Interlaken TX Statistics Write Byte Counter Low",
                "name": "LkTxStatsWrByteLo",
                "ptr": "mac_csr.LkStatsWrByteLo",
                "type": "reg"
            },
            "0x00000088": {
                "altname": "INTLKN_TX_STATS_WRITE_PKT_HIGH",
                "description": "Interlaken TX Statistics Write Packet Counter High",
                "name": "LkTxStatsWrPktHi",
                "ptr": "mac_csr.LkStatsWrPktHi",
                "type": "reg"
            },
            "0x0000008c": {
                "altname": "INTLKN_TX_STATS_WRITE_PKT_LOW",
                "description": "Interlaken TX Statistics Write Packet Counter Low",
                "name": "LkTxStatsWrPktLo",
                "ptr": "mac_csr.LkStatsWrPktLo",
                "type": "reg"
            },
            "0x00000090": {
                "altname": "INTLKN_TX_STATS_WRITE_ERR_HIGH",
                "description": "Interlaken TX Statistics Write Error Counter High",
                "name": "LkTxStatsWrErrHi",
                "ptr": "mac_csr.LkStatsWrErrHi",
                "type": "reg"
            },
            "0x00000094": {
                "altname": "INTLKN_TX_STATS_WRITE_ERR_LOW",
                "description": "Interlaken TX Statistics Write Error Counter Low",
                "name": "LkTxStatsWrErrLo",
                "ptr": "mac_csr.LkStatsWrErrLo",
                "type": "reg"
            },
            "0x00000098": {
                "altname": "INTLKN_TX_STATS_WRITE_PARITY",
                "description": "Interlaken TX Statistics Write Parity",
                "name": "LkTxStatsWrParity",
                "ptr": "mac_csr.LkStatsWrParity",
                "type": "reg"
            },
            "0x000000a0": {
                "altname": "INTLKN_TX_STATS_READ_BYTE_HIGH",
                "description": "Interlaken TX Statistics Read Byte Counter High",
                "name": "LkTxStatsRdByteHi",
                "ptr": "mac_csr.LkStatsRdByteHi",
                "type": "reg"
            },
            "0x000000a4": {
                "altname": "INTLKN_TX_STATS_READ_BYTE_LOW",
                "description": "Interlaken TX Statistics Read Byte Counter Low",
                "name": "LkTxStatsRdByteLo",
                "ptr": "mac_csr.LkStatsRdByteLo",
                "type": "reg"
            },
            "0x000000a8": {
                "altname": "INTLKN_TX_STATS_READ_PKT_HIGH",
                "description": "Interlaken TX Statistics Read Packet Counter High",
                "name": "LkTxStatsRdPktHi",
                "ptr": "mac_csr.LkStatsRdPktHi",
                "type": "reg"
            },
            "0x000000ac": {
                "altname": "INTLKN_TX_STATS_READ_PKT_LOW",
                "description": "Interlaken TX Statistics Read Packet Counter Low",
                "name": "LkTxStatsRdPktLo",
                "ptr": "mac_csr.LkStatsRdPktLo",
                "type": "reg"
            },
            "0x000000b0": {
                "altname": "INTLKN_TX_STATS_READ_ERR_HIGH",
                "description": "Interlaken TX Statistics Read Error Counter High",
                "name": "LkTxStatsRdErrHi",
                "ptr": "mac_csr.LkStatsRdErrHi",
                "type": "reg"
            },
            "0x000000b4": {
                "altname": "INTLKN_TX_STATS_READ_ERR_LOW",
                "description": "Interlaken TX Statistics Read Error Counter Low",
                "name": "LkTxStatsRdErrLo",
                "ptr": "mac_csr.LkStatsRdErrLo",
                "type": "reg"
            },
            "0x000000b8": {
                "altname": "INTLKN_TX_STATS_READ_PARITY",
                "description": "Interlaken TX Statistics Read Parity",
                "name": "LkTxStatsRdParity",
                "ptr": "mac_csr.LkStatsRdParity",
                "type": "reg"
            },
            "0x000000c0": {
                "altname": "INTLKN_TXCAL_ENABLE",
                "description": "Interlaken TX Calendar Enable",
                "name": "LkTxCalEnable",
                "ptr": "mac_csr.LkCalEnable",
                "type": "reg"
            },
            "0x000000c8": {
                "altname": "INTLKN_TXCAL_PROG_ACCESS",
                "description": "Interlaken TX Calendar Program Access",
                "name": "LkTxCalProgAccess",
                "ptr": "mac_csr.LkCalProgAccess",
                "type": "reg"
            },
            "0x000000d0": {
                "altname": "INTLKN_TXCAL_PROG_WR_DATA",
                "description": "Interlaken TX Calendar Program write data",
                "name": "LkTxCalProgWrData",
                "ptr": "mac_csr.LkCalProgWrData",
                "type": "reg"
            },
            "0x000000d8": {
                "altname": "INTLKN_TXCAL_PROG_RD_DATA",
                "description": "Interlaken TX Calendar Program read data",
                "name": "LkTxCalProgRdData",
                "ptr": "mac_csr.LkCalProgRdData",
                "type": "reg"
            },
            "0x00000100": {
                "altname": "INTLKN_TX_DEBUG_CTL0",
                "description": "Interlaken TX Debug bus control0",
                "name": "LkTxDebugControl0",
                "ptr": "mac_csr.LkDebugControl",
                "type": "reg"
            },
            "0x00000104": {
                "altname": "INTLKN_TX_DEBUG_CTL1",
                "description": "Interlaken TX Debug bus control1",
                "name": "LkTxDebugControl1",
                "ptr": "mac_csr.LkDebugControl",
                "type": "reg"
            },
            "0x00000108": {
                "altname": "INTLKN_TX_DEBUG_HOLD0",
                "description": "Interlaken TX Debug hold control0",
                "name": "LkTxDebugHold0",
                "ptr": "mac_csr.LkDebugHold",
                "type": "reg"
            },
            "0x0000010c": {
                "altname": "INTLKN_TX_DEBUG_HOLD1",
                "description": "Interlaken TX Debug hold control1",
                "name": "LkTxDebugHold1",
                "ptr": "mac_csr.LkDebugHold",
                "type": "reg"
            },
            "0x00000110": {
                "altname": "INTLKN_TX_DEBUG_OBSERVE0",
                "description": "Interlaken TX Debug observe data0",
                "name": "LkTxDebugObserve0",
                "ptr": "mac_csr.LkDebugObserve",
                "type": "reg"
            },
            "0x00000114": {
                "altname": "INTLKN_TX_DEBUG_OBSERVE1",
                "description": "Interlaken TX Debug observe data1",
                "name": "LkTxDebugObserve1",
                "ptr": "mac_csr.LkDebugObserve",
                "type": "reg"
            },
            "0x00000120": {
                "altname": "INTLKN_TX_SERDES_TEST_CONTROL",
                "description": "Interlaken TX SerDes Test Control",
                "name": "LkTxSerDesTestControl",
                "ptr": "mac_csr.LkSerDesTestControl",
                "type": "reg"
            },
            "0x00000124": {
                "altname": "INTLKN_TX_SERDES_TEST_PATTERN_A",
                "description": "Interlaken TX SerDes Test Pattern A",
                "name": "LkTxSerDesTestPatternA",
                "ptr": "mac_csr.LkSerDesTestPatternA",
                "type": "reg"
            },
            "0x00000128": {
                "altname": "INTLKN_TX_SERDES_TEST_PATTERN_B",
                "description": "Interlaken TX SerDes Test Pattern B",
                "name": "LkTxSerDesTestPatternB",
                "ptr": "mac_csr.LkSerDesTestPatternB",
                "type": "reg"
            },
            "0x0000012c": {
                "altname": "INTLKN_TX_SERDES_TEST_PATTERN_C",
                "description": "Interlaken TX SerDes Test Pattern C",
                "name": "LkTxSerDesTestPatternC",
                "ptr": "mac_csr.LkSerDesTestPatternC",
                "type": "reg"
            },
            "0x00000140": {
                "altname": "INTLKN_TX_STATUS_MSG",
                "description": "Interlaken TX Status Message Received from OOB",
                "name": "LkTxStatusMessage",
                "ptr": "mac_csr.LkTxStatusMessage",
                "type": "reg"
            },
            "0x00000150": {
                "altname": "INTLKN_TXLANE_REMAP_5_0",
                "description": "Interlaken TX Lane Remapping 5 to 0",
                "name": "LkTxLaneReMap5to0",
                "ptr": "mac_csr.LkLaneReMapping5to0",
                "type": "reg"
            },
            "0x00000154": {
                "altname": "INTLKN_TXLANE_REMAP_11_6",
                "description": "Interlaken TX Lane Remapping 11 to 6",
                "name": "LkTxLaneReMap11to6",
                "ptr": "mac_csr.LkLaneReMapping11to6",
                "type": "reg"
            },
            "0x00000180": {
                "altname": "INTLKN_TX_INTERRUPT",
                "description": "Interlaken TX Interrupt",
                "name": "LkTxInterrupt",
                "ptr": "mac_csr.LkTxInterrupt",
                "type": "reg"
            },
            "0x00000184": {
                "altname": "INTLKN_TX_INTERRUPT_MASK",
                "description": "Interlaken TX Interrupt Mask",
                "name": "LkTxInterruptMask",
                "ptr": "mac_csr.LkTxInterruptMask",
                "type": "reg"
            },
            "0x00000188": {
                "altname": "INTLKN_TX_INTERRUPT2",
                "description": "Interlaken TX Interrupt Second",
                "name": "LkTxInterrupt2",
                "ptr": "mac_csr.LkTxInterrupt",
                "type": "reg"
            },
            "0x0000018c": {
                "altname": "INTLKN_TX_INTERRUPT_MASK2",
                "description": "Interlaken TX Interrupt Mask Second",
                "name": "LkTxInterruptMask2",
                "ptr": "mac_csr.LkTxInterruptMask",
                "type": "reg"
            },
            "0x00000190": {
                "altname": "INTLKN_TX_INTERRUPT_FORCE",
                "description": "Interlaken TX Interrupt Force",
                "name": "LkTxInterruptForce",
                "ptr": "mac_csr.LkTxInterruptForce",
                "type": "reg"
            },
            "0x00000200": {
                "altname": "INTLKN_RX_INFO",
                "description": "Interlaken Mac RX Core Info",
                "name": "LkRxInfo",
                "ptr": "mac_csr.LkInfo",
                "type": "reg"
            },
            "0x00000208": {
                "altname": "INTLKN_RX_LANE_DISABLE",
                "description": "Interlaken Mac RX Core Lane Disable",
                "name": "LkRxLaneDisable",
                "ptr": "mac_csr.LkLaneDisable",
                "type": "reg"
            },
            "0x00000210": {
                "altname": "INTLKN_RX_CONFIG",
                "description": "Interlaken Mac RX Core Config",
                "name": "LkRxConfig",
                "ptr": "mac_csr.LkConfig",
                "type": "reg"
            },
            "0x00000218": {
                "altname": "INTLKN_RX_CONTROL",
                "description": "Interlaken Mac RX Core Control",
                "name": "LkRxControl",
                "ptr": "mac_csr.LkControl",
                "type": "reg"
            },
            "0x00000228": {
                "altname": "INTLKN_SERDES_RXFIFO_CONFIG",
                "description": "Interlaken Mac RX Core SerDes/FC Fifo Config",
                "name": "LkSerDesRxFifoConfig",
                "ptr": "mac_csr.LkSerDesRxFifoConfig",
                "type": "reg"
            },
            "0x00000230": {
                "altname": "INTLKN_RX_BURST_CONFIG",
                "description": "Interlaken Mac RX Core Burst Config",
                "name": "LkRxBurstConfig",
                "ptr": "mac_csr.LkBurstConfig",
                "type": "reg"
            },
            "0x00000234": {
                "altname": "INTLKN_RX_METAFRAME_SYNC_PERIOD",
                "description": "Interlaken Mac RX MetaFrame Sync Period",
                "name": "LkRxMetaFrameSyncPeriod",
                "ptr": "mac_csr.LkMetaFrameSyncPeriod",
                "type": "reg"
            },
            "0x00000274": {
                "altname": "INTLKN_RX_STATS_ACC",
                "description": "Interlaken RX Statistics Counter Access",
                "name": "LkRxStatsAcc",
                "ptr": "mac_csr.LkStatsAcc",
                "type": "reg"
            },
            "0x00000278": {
                "altname": "INTLKN_RX_STATS_FILL",
                "description": "Interlaken RX Statistics Counter Fill",
                "name": "LkRxStatsFill",
                "ptr": "mac_csr.LkStatsFill",
                "type": "reg"
            },
            "0x0000027c": {
                "altname": "INTLKN_RX_STATS_PARITY",
                "description": "Interlaken RX Statistics Counter Parity",
                "name": "LkRxStatsParity",
                "ptr": "mac_csr.LkStatsParity",
                "type": "reg"
            },
            "0x00000280": {
                "altname": "INTLKN_RX_STATS_WRITE_BYTE_HIGH",
                "description": "Interlaken RX Statistics Write Byte Counter High",
                "name": "LkRxStatsWrByteHi",
                "ptr": "mac_csr.LkStatsWrByteHi",
                "type": "reg"
            },
            "0x00000284": {
                "altname": "INTLKN_RX_STATS_WRITE_BYTE_LOW",
                "description": "Interlaken RX Statistics Write Byte Counter Low",
                "name": "LkRxStatsWrByteLo",
                "ptr": "mac_csr.LkStatsWrByteLo",
                "type": "reg"
            },
            "0x00000288": {
                "altname": "INTLKN_RX_STATS_WRITE_PKT_HIGH",
                "description": "Interlaken RX Statistics Write Packet Counter High",
                "name": "LkRxStatsWrPktHi",
                "ptr": "mac_csr.LkStatsWrPktHi",
                "type": "reg"
            },
            "0x0000028c": {
                "altname": "INTLKN_RX_STATS_WRITE_PKT_LOW",
                "description": "Interlaken RX Statistics Write Packet Counter Low",
                "name": "LkRxStatsWrPktLo",
                "ptr": "mac_csr.LkStatsWrPktLo",
                "type": "reg"
            },
            "0x00000290": {
                "altname": "INTLKN_RX_STATS_WRITE_ERR_HIGH",
                "description": "Interlaken RX Statistics Write Error Counter High",
                "name": "LkRxStatsWrErrHi",
                "ptr": "mac_csr.LkStatsWrErrHi",
                "type": "reg"
            },
            "0x00000294": {
                "altname": "INTLKN_RX_STATS_WRITE_ERR_LOW",
                "description": "Interlaken RX Statistics Write Error Counter Low",
                "name": "LkRxStatsWrErrLo",
                "ptr": "mac_csr.LkStatsWrErrLo",
                "type": "reg"
            },
            "0x00000298": {
                "altname": "INTLKN_RX_STATS_WRITE_PARITY",
                "description": "Interlaken RX Statistics Write Parity",
                "name": "LkRxStatsWrParity",
                "ptr": "mac_csr.LkStatsWrParity",
                "type": "reg"
            },
            "0x000002a0": {
                "altname": "INTLKN_RX_STATS_READ_BYTE_HIGH",
                "description": "Interlaken RX Statistics Read Byte Counter High",
                "name": "LkRxStatsRdByteHi",
                "ptr": "mac_csr.LkStatsRdByteHi",
                "type": "reg"
            },
            "0x000002a4": {
                "altname": "INTLKN_RX_STATS_READ_BYTE_LOW",
                "description": "Interlaken RX Statistics Read Byte Counter Low",
                "name": "LkRxStatsRdByteLo",
                "ptr": "mac_csr.LkStatsRdByteLo",
                "type": "reg"
            },
            "0x000002a8": {
                "altname": "INTLKN_RX_STATS_READ_PKT_HIGH",
                "description": "Interlaken RX Statistics Read Packet Counter High",
                "name": "LkRxStatsRdPktHi",
                "ptr": "mac_csr.LkStatsRdPktHi",
                "type": "reg"
            },
            "0x000002ac": {
                "altname": "INTLKN_RX_STATS_READ_PKT_LOW",
                "description": "Interlaken RX Statistics Read Packet Counter Low",
                "name": "LkRxStatsRdPktLo",
                "ptr": "mac_csr.LkStatsRdPktLo",
                "type": "reg"
            },
            "0x000002b0": {
                "altname": "INTLKN_RX_STATS_READ_ERR_HIGH",
                "description": "Interlaken RX Statistics Read Error Counter High",
                "name": "LkRxStatsRdErrHi",
                "ptr": "mac_csr.LkStatsRdErrHi",
                "type": "reg"
            },
            "0x000002b4": {
                "altname": "INTLKN_RX_STATS_READ_ERR_LOW",
                "description": "Interlaken RX Statistics Read Error Counter Low",
                "name": "LkRxStatsRdErrLo",
                "ptr": "mac_csr.LkStatsRdErrLo",
                "type": "reg"
            },
            "0x000002b8": {
                "altname": "INTLKN_RX_STATS_READ_PARITY",
                "description": "Interlaken RX Statistics Read Parity",
                "name": "LkRxStatsRdParity",
                "ptr": "mac_csr.LkStatsRdParity",
                "type": "reg"
            },
            "0x000002c0": {
                "altname": "INTLKN_RXCAL_ENABLE",
                "description": "Interlaken RX Calendar Enable",
                "name": "LkRxCalEnable",
                "ptr": "mac_csr.LkCalEnable",
                "type": "reg"
            },
            "0x000002c8": {
                "altname": "INTLKN_RXCAL_PROG_ACCESS",
                "description": "Interlaken RX Calendar Program Access",
                "name": "LkRxCalProgAccess",
                "ptr": "mac_csr.LkCalProgAccess",
                "type": "reg"
            },
            "0x000002d0": {
                "altname": "INTLKN_RXCAL_PROG_WR_DATA",
                "description": "Interlaken RX Calendar Program write data",
                "name": "LkRxCalProgWrData",
                "ptr": "mac_csr.LkCalProgWrData",
                "type": "reg"
            },
            "0x000002d8": {
                "altname": "INTLKN_RXCAL_PROG_RD_DATA",
                "description": "Interlaken RX Calendar Program read data",
                "name": "LkRxCalProgRdData",
                "ptr": "mac_csr.LkCalProgRdData",
                "type": "reg"
            },
            "0x00000300": {
                "altname": "INTLKN_RX_DEBUG_CTL0",
                "description": "Interlaken RX Debug bus control0",
                "name": "LkRxDebugControl0",
                "ptr": "mac_csr.LkDebugControl",
                "type": "reg"
            },
            "0x00000304": {
                "altname": "INTLKN_RX_DEBUG_CTL1",
                "description": "Interlaken RX Debug bus control1",
                "name": "LkRxDebugControl1",
                "ptr": "mac_csr.LkDebugControl",
                "type": "reg"
            },
            "0x00000308": {
                "altname": "INTLKN_RX_DEBUG_HOLD0",
                "description": "Interlaken RX Debug hold control0",
                "name": "LkRxDebugHold0",
                "ptr": "mac_csr.LkDebugHold",
                "type": "reg"
            },
            "0x0000030c": {
                "altname": "INTLKN_RX_DEBUG_HOLD1",
                "description": "Interlaken RX Debug hold control1",
                "name": "LkRxDebugHold1",
                "ptr": "mac_csr.LkDebugHold",
                "type": "reg"
            },
            "0x00000310": {
                "altname": "INTLKN_RX_DEBUG_OBSERVE0",
                "description": "Interlaken RX Debug observe data0",
                "name": "LkRxDebugObserve0",
                "ptr": "mac_csr.LkRxDebugObserve",
                "type": "reg"
            },
            "0x00000314": {
                "altname": "INTLKN_RX_DEBUG_OBSERVE1",
                "description": "Interlaken RX Debug observe data1",
                "name": "LkRxDebugObserve1",
                "ptr": "mac_csr.LkDebugObserve",
                "type": "reg"
            },
            "0x00000320": {
                "altname": "INTLKN_RX_SERDES_TEST_CONTROL",
                "description": "Interlaken RX SerDes Test Control",
                "name": "LkRxSerDesTestControl",
                "ptr": "mac_csr.LkSerDesTestControl",
                "type": "reg"
            },
            "0x00000324": {
                "altname": "INTLKN_RX_SERDES_TEST_PATTERN_A",
                "description": "Interlaken RX SerDes Test Pattern A",
                "name": "LkRxSerDesTestPatternA",
                "ptr": "mac_csr.LkSerDesTestPatternA",
                "type": "reg"
            },
            "0x00000328": {
                "altname": "INTLKN_RX_SERDES_TEST_PATTERN_B",
                "description": "Interlaken RX SerDes Test Pattern B",
                "name": "LkRxSerDesTestPatternB",
                "ptr": "mac_csr.LkSerDesTestPatternB",
                "type": "reg"
            },
            "0x0000032c": {
                "altname": "INTLKN_RX_SERDES_TEST_PATTERN_C",
                "description": "Interlaken RX SerDes Test Pattern C",
                "name": "LkRxSerDesTestPatternC",
                "ptr": "mac_csr.LkSerDesTestPatternC",
                "type": "reg"
            },
            "0x00000350": {
                "altname": "INTLKN_RXLANE_REMAP_5_0",
                "description": "Interlaken RX Lane Remapping 5 to 0",
                "name": "LkRxLaneReMap5to0",
                "ptr": "mac_csr.LkLaneReMapping5to0",
                "type": "reg"
            },
            "0x00000354": {
                "altname": "INTLKN_RXLANE_REMAP_11_6",
                "description": "Interlaken RX Lane Remapping 11 to 6",
                "name": "LkRxLaneReMap11to6",
                "ptr": "mac_csr.LkLaneReMapping11to6",
                "type": "reg"
            },
            "0x00000380": {
                "altname": "INTLKN_RX_INTERRUPT",
                "description": "Interlaken RX Interrupt",
                "name": "LkRxInterrupt",
                "ptr": "mac_csr.LkRxInterrupt",
                "type": "reg"
            },
            "0x00000384": {
                "altname": "INTLKN_RX_INTERRUPT_MASK",
                "description": "Interlaken RX Interrupt Mask",
                "name": "LkRxInterruptMask",
                "ptr": "mac_csr.LkRxInterruptMask",
                "type": "reg"
            },
            "0x00000388": {
                "altname": "INTLKN_RX_INTERRUPT2",
                "description": "Interlaken RX Interrupt Second",
                "name": "LkRxInterrupt2",
                "ptr": "mac_csr.LkRxInterrupt",
                "type": "reg"
            },
            "0x0000038c": {
                "altname": "INTLKN_RX_INTERRUPT_MASK2",
                "description": "Interlaken RX Interrupt Mask Second",
                "name": "LkRxInterruptMask2",
                "ptr": "mac_csr.LkRxInterruptMask",
                "type": "reg"
            },
            "0x00000390": {
                "altname": "INTLKN_RX_INTERRUPT_FORCE",
                "description": "Interlaken RX Interrupt Force",
                "name": "LkRxInterruptForce",
                "ptr": "mac_csr.LkRxInterruptForce",
                "type": "reg"
            },
            "0x000003ac": {
                "altname": "INTLKN_RX_METAFRAME_ERROR",
                "description": "Interlaken RX Metaframe Error",
                "name": "LkRxMfError",
                "ptr": "mac_csr.LkRxMfError",
                "type": "reg"
            },
            "0x000003b0": {
                "altname": "INTLKN_RX_BAD_CTL_ERROR",
                "description": "Interlaken RX Bad control word error",
                "name": "LkRxBadCtlError",
                "ptr": "mac_csr.LkRxBadCtlError",
                "type": "reg"
            },
            "0x000003b4": {
                "altname": "INTLKN_RX_SCRAM_ERROR",
                "description": "Interlaken RX Scrambler error",
                "name": "LkRxScramError",
                "ptr": "mac_csr.LkRxScramError",
                "type": "reg"
            },
            "0x000003b8": {
                "altname": "INTLKN_RX_CRC32_ERROR",
                "description": "Interlaken RX CRC32 error",
                "name": "LkRxCrc32Error",
                "ptr": "mac_csr.LkRxCrc32Error",
                "type": "reg"
            },
            "0x000003bc": {
                "altname": "INTLKN_RX_CDR_ERROR",
                "description": "Interlaken RX CDR error",
                "name": "LkRxCdrError",
                "ptr": "mac_csr.LkRxCdrError",
                "type": "reg"
            },
            "0x000003c0": {
                "altname": "INTLKN_RX_WORD_SYNC_CHANGE",
                "description": "Interlaken RX Word sync change",
                "name": "LkRxWrdSyncChange",
                "ptr": "mac_csr.LkRxWrdSyncChange",
                "type": "reg"
            },
            "0x000003c4": {
                "altname": "INTLKN_RX_ALIGN_STATUS",
                "description": "Interlaken RX Alignment Status",
                "name": "LkRxAlignStatus",
                "ptr": "mac_csr.LkRxAlignStatus",
                "type": "reg"
            },
            "0x000003c8": {
                "altname": "INTLKN_RX_STATUS_MESSAGE",
                "description": "Interlaken RX Status Message",
                "name": "LkRxStatusMessage",
                "ptr": "mac_csr.LkRxStatusMessage",
                "type": "reg"
            },
            "0x000003cc": {
                "altname": "INTLKN_RX_WORD_SYNC",
                "description": "Interlaken RX Word Sync",
                "name": "LkRxWrdSync",
                "ptr": "mac_csr.LkRxWrdSync",
                "type": "reg"
            },
            "0x000003d8": {
                "altname": "INTLKN_RX_CRC32_CNT_FILL",
                "description": "Interlaken RX CRC32 err counters half full",
                "name": "LkRxCrc32CntFill",
                "ptr": "mac_csr.LkRxCrc32CntFill",
                "type": "reg"
            },
            "0x000003dc": {
                "altname": "INTLKN_RX_CDR_LOST_CNT_FILL",
                "description": "Interlaken RX CDR lost err counters half full",
                "name": "LkRxCdrLostCntFill",
                "ptr": "mac_csr.LkRxCdrLostCntFill",
                "type": "reg"
            },
            "0x000003e0": {
                "altname": "INTLKN_RX_WORD_SYNC_CNT_FILL",
                "description": "Interlaken RX word sync err counters half full",
                "name": "LkRxWrdSyncCntFill",
                "ptr": "mac_csr.LkRxWrdSyncCntFill",
                "type": "reg"
            }
        },
        "mac_csr.MacMemCtrl": {
            "0x00000000": {
                "altname": "MAC_CORE_GASKET_REG%d",
                "description": "Mac Gasket Memory Control Register",
                "name": "MacCoreGasketReg%d",
                "offinc1": "0x00000004",
                "ptr": "mac_csr.MacMemCtrlReg",
                "repeat1": 10,
                "type": "reg"
            },
            "0x00000200": {
                "altname": "MAC_CORE_POWER_CSRS%d",
                "description": "Mac Memory control Power ShutDown CSRs",
                "name": "MacCoresPowerCsrs%d",
                "offinc1": "0x00000004",
                "ptr": "mac_csr.MacPowercsrs",
                "repeat1": 4,
                "type": "reg"
            }
        },
        "mac_csr.MacSerDesEqCtl": {
            "0x00000000": {
                "altname": "RX_CAL_EQ_VAL_MSB0",
                "description": "RxCal EQ Settings MSB=0",
                "name": "RxCalEqValMsb0",
                "ptr": "mac_csr.RxCalEqVal",
                "type": "reg"
            },
            "0x00000004": {
                "altname": "RX_CAL_EQ_VAL_MSB1",
                "description": "RxCal EQ Setting MSB=1",
                "name": "RxCalEqValMsb1",
                "ptr": "mac_csr.RxCalEqVal",
                "type": "reg"
            },
            "0x00000008": {
                "altname": "RX_CAL_EQ_CTL",
                "description": "RxCal EQ Control Register",
                "name": "RxCalEqCtl",
                "ptr": "mac_csr.RxCalEqCtl",
                "type": "reg"
            },
            "0x00000010": {
                "altname": "RX_CAL_EQ_RESULT",
                "description": "RxCal EQ Result",
                "name": "RxCalEqResult",
                "ptr": "mac_csr.RxCalEqResult",
                "type": "reg"
            },
            "0x00000018": {
                "altname": "RX_EYE_DIAG_CTL",
                "description": "Rx Eye Diagram Control Register",
                "name": "RxEyeDiagCtl",
                "ptr": "mac_csr.RxEyeDiagCtl",
                "type": "reg"
            },
            "0x0000001c": {
                "altname": "RX_EYE_DIAG_RESULT",
                "description": "Rx Eye Diagram Result Register",
                "name": "RxEyeDiagResult",
                "ptr": "mac_csr.RxEyeDiagResult",
                "type": "reg"
            }
        },
        "mac_csr.MacXPB": {
            "0x00000000": {
                "altname": "MAC_BLOCK_RST",
                "description": "Main Block Resets",
                "name": "MacBlkReset",
                "ptr": "mac_csr.MacBlkReset",
                "type": "reg"
            },
            "0x00000004": {
                "altname": "MAC_HYD0_BLOCK_RST",
                "description": "Hydra-12:0 Resets Register",
                "name": "MacHyd0BlkReset",
                "ptr": "mac_csr.MacHydBlkReset",
                "type": "reg"
            },
            "0x00000008": {
                "altname": "MAC_HYD1BLOCK_RST",
                "description": "Hydra-4:1 Resets Register",
                "name": "MacHyd1BlkReset",
                "ptr": "mac_csr.MacHyd4BlkReset",
                "type": "reg"
            },
            "0x0000000c": {
                "altname": "MAC_MUX_CTRL",
                "description": "Mac Mux Control Register",
                "name": "MacMuxCtrl",
                "ptr": "mac_csr.MacMuxCtrl",
                "type": "reg"
            },
            "0x00000010": {
                "altname": "MAC_SERDES_EN",
                "description": "Mac SerDes Enable Register",
                "name": "MacSerDesEn",
                "ptr": "mac_csr.MacSerDesEn",
                "type": "reg"
            },
            "0x00000014": {
                "altname": "MAC_SYS_SUPPORT_CTRL",
                "description": "Mac System Support Control Register",
                "name": "MacSysSupCtrl",
                "ptr": "mac_csr.MacSysSupCtrl",
                "type": "reg"
            },
            "0x00000018": {
                "altname": "MAC_SYS_SUPPORT_STAT",
                "description": "Mac System Support Status Register",
                "name": "MacSysSupStat",
                "ptr": "mac_csr.MacSysSupStat",
                "type": "reg"
            },
            "0x0000001c": {
                "altname": "MAC_TS_NSEC",
                "description": "Mac TimeStamp Nanoseconds",
                "name": "MacTimeStampNsec",
                "ptr": "mac_csr.MacTimeStampNsec",
                "type": "reg"
            },
            "0x00000020": {
                "altname": "MAC_TS_SEC",
                "description": "Mac TimeStamp Seconds",
                "name": "MacTimeStampSec",
                "ptr": "mac_csr.MacTimeStampSec",
                "type": "reg"
            },
            "0x00000024": {
                "altname": "MAC_TS_INCR",
                "description": "Mac TimeStamp Increment in Nanoseconds and fraction of nanoseconds",
                "name": "MacTimeStampIncr",
                "ptr": "mac_csr.MacTimeStampIncr",
                "type": "reg"
            },
            "0x00000028": {
                "altname": "MAC_TS_SET_NSEC",
                "description": "Mac TimeStamp Set Nanoseconds",
                "name": "MacTimeStampSetNsec",
                "ptr": "mac_csr.MacTimeStampSetNsec",
                "type": "reg"
            },
            "0x0000002c": {
                "altname": "MAC_TS_SET_SEC",
                "description": "Mac TimeStamp Set Seconds",
                "name": "MacTimeStampSetSec",
                "ptr": "mac_csr.MacTimeStampSetSec",
                "type": "reg"
            },
            "0x00000030": {
                "altname": "MAC_TDM0_CYCLE_WORD_3100",
                "description": "Egress TDM cycle word 31:00 for Hydra0 and Interlaken(s).",
                "name": "MacTdm0CycleWord3100",
                "ptr": "mac_csr.MacTdmCycleWord3100",
                "type": "reg"
            },
            "0x00000034": {
                "altname": "MAC_TDM0_CYCLE_WORD_4732",
                "description": "Egress TDM cycle word 47:32 for Hydra0.",
                "name": "MacTdm0CycleWord4732",
                "ptr": "mac_csr.MacTdmCycleWord4732",
                "type": "reg"
            },
            "0x00000038": {
                "altname": "MAC_TDM1_CYCLE_WORD_1500",
                "description": "Egress TDM cycle word 15:00 for Hydra1.",
                "name": "MacTdm1CycleWord1500",
                "ptr": "mac_csr.MacTdmCycleWord1500",
                "type": "reg"
            },
            "0x00000040": {
                "altname": "MAC_TDM0_MODE_0900",
                "description": "Mac Hydra0 Ports Egress rate bits 29:00 (ports 9-0).",
                "name": "MacTdm0Mode0900",
                "ptr": "mac_csr.MacTdmMode0900",
                "type": "reg"
            },
            "0x00000044": {
                "altname": "MAC_TDM0_MODE_1110_CRC_EN",
                "description": "Mac Hydra0 Ports Egress rate bits 35:30 (ports 11-10). Also Tx Crc enable for ports 11-0.",
                "name": "MacTdm0Mode1110CrcEn",
                "ptr": "mac_csr.MacTdmMode1110Crc",
                "type": "reg"
            },
            "0x00000048": {
                "altname": "MAC_TDM1_MODE_0300_CRC_EN",
                "description": "Mac Hydra1 Ports Egress Mode and Crc enable for ports 3-0.",
                "name": "MacTdm1Mode0300CrcEn",
                "ptr": "mac_csr.MacTdmMode0300Crc",
                "type": "reg"
            },
            "0x00000050": {
                "altname": "MAC_PORT_2_TO_0_CHAN_ASSIGN",
                "description": "Mac Hydra0 Ports 2-0 Channel Assignment Register.",
                "name": "MacPort2to0ChanAssign",
                "ptr": "mac_csr.MacPortChanAssign",
                "type": "reg"
            },
            "0x00000054": {
                "altname": "MAC_PORT_5_TO_3_CHAN_ASSIGN",
                "description": "Mac Hydra0 Ports 5-3 Channel Assignment Register.",
                "name": "MacPort5to3ChanAssign",
                "ptr": "mac_csr.MacPortChanAssign",
                "type": "reg"
            },
            "0x00000058": {
                "altname": "MAC_PORT_8_TO_6_CHAN_ASSIGN",
                "description": "Mac Hydra0 Ports 8-6 Channel Assignment Register.",
                "name": "MacPort8to6ChanAssign",
                "ptr": "mac_csr.MacPortChanAssign",
                "type": "reg"
            },
            "0x0000005c": {
                "altname": "MAC_PORT_11_TO_9_CHAN_ASSIGN",
                "description": "Mac Hydra0 Ports 11-9 Channel Assignment Register.",
                "name": "MacPort11to9ChanAssign",
                "ptr": "mac_csr.MacPortChanAssign",
                "type": "reg"
            },
            "0x00000060": {
                "altname": "MAC_PORT_14_TO_12_CHAN_ASSIGN",
                "description": "Mac Hydra1 Ports 2-0 Channel Assignment Register.",
                "name": "MacPort14to12ChanAssign",
                "ptr": "mac_csr.MacPortChanAssign",
                "type": "reg"
            },
            "0x00000064": {
                "altname": "MAC_PORT_17_TO_15_CHAN_ASSIGN",
                "description": "Mac Hydra1 Port 3 Channel Assignment Register. ",
                "name": "MacPort17to15ChanAssign",
                "ptr": "mac_csr.MacPortChanAssign1",
                "type": "reg"
            },
            "0x00000070": {
                "altname": "MAC_PREPEND_CTL_03_TO_00",
                "description": "Ethernet Core 0: Mac ports 03-00 prepend skip bytes.(Port0 maps to ILK0.)",
                "name": "MacPrePendCtl03to00",
                "ptr": "mac_csr.MacPrePendCtl1",
                "type": "reg"
            },
            "0x00000074": {
                "altname": "MAC_PREPEND_CTL_07_TO_04",
                "description": "Ethernet Core 0: Mac ports 07-04 prepend skip bytes.",
                "name": "MacPrePendCtl07to04",
                "ptr": "mac_csr.MacPrePendCtl2",
                "type": "reg"
            },
            "0x00000078": {
                "altname": "MAC_PREPEND_CTL_11_TO_08",
                "description": "Ethernet Core 0: Mac ports 11-08 prepend skip bytes.",
                "name": "MacPrePendCtl11to08",
                "ptr": "mac_csr.MacPrePendCtl3",
                "type": "reg"
            },
            "0x0000007c": {
                "altname": "MAC_PREPEND_CTL_15_TO_12",
                "description": "Ethernet Core 1: Mac ports 03-00 prepend skip bytes.",
                "name": "MacPrePendCtl15to12",
                "ptr": "mac_csr.MacPrePendCtl1",
                "type": "reg"
            },
            "0x00000088": {
                "altname": "MAC_DSA_CTL_15_TO_00",
                "description": "Mac IG ports 15-00 DSA TAG control.",
                "name": "MacPrePendDsaCtl15to00",
                "ptr": "mac_csr.MacPrePendDsaCtl1",
                "type": "reg"
            },
            "0x0000008c": {
                "altname": "MAC_DSA_CTL_23_TO_16",
                "description": "Mac IG ports ILK DSA TAG control.",
                "name": "MacPrePendDsaCtlLkand23to16",
                "ptr": "mac_csr.MacPrePendDsaCtl2",
                "type": "reg"
            },
            "0x00000090": {
                "altname": "INTERLAKEN_CTL_1",
                "description": "Interlaken control register 1.",
                "name": "MacInterlakenCtl1",
                "ptr": "mac_csr.MacInterlakenCtl1",
                "type": "reg"
            },
            "0x00000094": {
                "altname": "INTERLAKEN_CTL_2",
                "description": "Interlaken control register 2.",
                "name": "MacInterlakenCtl2",
                "ptr": "mac_csr.MacInterlakenCtl2",
                "type": "reg"
            },
            "0x00000098": {
                "altname": "EG_BUFFER_CREDIT_POOL_COUNT",
                "description": "Running count of total free buffers for egress.",
                "name": "EgBufferCreditPoolCount",
                "ptr": "mac_csr.EgBufferCreditPoolCount",
                "type": "reg"
            },
            "0x0000009c": {
                "altname": "TX_MPB_CREDIT_INIT",
                "description": "Initial values for Ingress-side minipacket bus credits.",
                "name": "TxMpbCreditInit",
                "ptr": "mac_csr.TxMpbCreditInit",
                "type": "reg"
            },
            "0x000000a0": {
                "altname": "IG_BUFFER_CREDIT_POOL_COUNT",
                "description": "Running count of total free buffers for ingress.",
                "name": "IgBufferCreditPoolCount",
                "ptr": "mac_csr.IgBufferCreditPoolCount",
                "type": "reg"
            },
            "0x000000a4": {
                "altname": "RX_MPB_CREDIT_INIT",
                "description": "Initial values for Egress-side minipacket bus credits.",
                "name": "RxMpbCreditInit",
                "ptr": "mac_csr.RxMpbCreditInit",
                "type": "reg"
            },
            "0x000000a8": {
                "altname": "TDM_RATE_CREDIT_INIT",
                "description": "Egress TDM Per-Rate Credit Init values.",
                "name": "MacTdmRateCreditInit",
                "ptr": "mac_csr.TDMRateCreditInit",
                "type": "reg"
            },
            "0x000000ac": {
                "altname": "MAC_INTR_ERR_STATUS_0",
                "description": "Interrupts and errors status register 0.",
                "name": "MacInterruptErrStatus0",
                "ptr": "mac_csr.MacInterruptErrStatus0",
                "type": "reg"
            },
            "0x000000b0": {
                "altname": "MAC_INTR_ERR_STATUS_1",
                "description": "Interrupts and errors status register 1.",
                "name": "MacInterruptErrStatus1",
                "ptr": "mac_csr.MacInterruptErrStatus1",
                "type": "reg"
            },
            "0x000000b4": {
                "altname": "MAC_IG_EQ_STATUS",
                "description": "Ingress Enqueue Status and purge control.",
                "name": "MacIgEqStatus",
                "ptr": "mac_csr.MacIgEqStatus",
                "type": "reg"
            },
            "0x000000b8": {
                "altname": "MAC_HYD1_CTRL",
                "description": "Hydra1 Control Register. Ports 15-12",
                "name": "MacHyd1Ctrl",
                "ptr": "mac_csr.MacHyd4Ctrl",
                "type": "reg"
            },
            "0x000000bc": {
                "altname": "MAC_LIVE_STATUS_0",
                "description": "Live status register 0.",
                "name": "MacLiveStatus0",
                "ptr": "mac_csr.MacLiveStatus0",
                "type": "reg"
            },
            "0x000000c0": {
                "altname": "MAC_LIVE_STATUS_1",
                "description": "Live status register 1.",
                "name": "MacLiveStatus1",
                "ptr": "mac_csr.MacLiveStatus1",
                "type": "reg"
            },
            "0x000000c4": {
                "altname": "MAC_CHAN_RD_ADDR",
                "description": "Addresses for reading IG/EG buffer count state.",
                "name": "MacChanRdAddr",
                "ptr": "mac_csr.MacChanRdAddr",
                "type": "reg"
            },
            "0x000000c8": {
                "altname": "MAC_CHAN_BUF_COUNT",
                "description": "Read data for IG/EG buffercounts indexed by Chan Rd Addr.",
                "name": "MacChanBufCount",
                "ptr": "mac_csr.MacChanBufCount",
                "type": "reg"
            },
            "0x000000cc": {
                "altname": "PAUSE_WATERMARK%d",
                "description": "Per Class water marks (N*2) and (N*2)+1 for pause generation.",
                "name": "PauseWaterMark%d",
                "offinc1": "0x00000004",
                "ptr": "mac_csr.PauseWaterMark",
                "repeat1": 64,
                "type": "reg"
            },
            "0x000001cc": {
                "altname": "MAC_EG_DSA_CTL_15_TO_00",
                "description": "Mac EG ports 15-00 DSA TAG control.",
                "name": "MacEgPrePendDsaCtl15to00",
                "ptr": "mac_csr.MacPrePendDsaCtl1",
                "type": "reg"
            },
            "0x000001d0": {
                "altname": "MAC_EG_DSA_CTL_23_TO_16",
                "description": "\"Mac EG ports ILK and 23-16 DSA TAG control.",
                "name": "MacEgPrePendDsaCtlLkand23to16",
                "ptr": "mac_csr.MacPrePendDsaCtl2",
                "type": "reg"
            },
            "0x000001d4": {
                "altname": "IG_CHAN_USED_BUFFER_CREDITS_RW",
                "description": "Indirect Read Access to Channel Ingress Used Credit Counter.",
                "name": "IgChanUsedBufferCreditsRw",
                "ptr": "mac_csr.BufferCounterRw",
                "type": "reg"
            },
            "0x000001d8": {
                "altname": "IG_CHAN_USED_BUFFER_CREDITS_RD_DATA",
                "description": "Indirect Read Return Data for per-Channel Ingress Used Credit Counter.",
                "name": "IgChanUsedBufferCreditsRdData",
                "ptr": "mac_csr.BufferCounterRdData",
                "type": "reg"
            },
            "0x000001dc": {
                "altname": "IG_PORT_PREPEND_EN0",
                "description": "Enable bits for prepending Timestamp and Parser Info to packets by Port for Hydra0 and ILK0.",
                "name": "IgPortPrependEn0",
                "ptr": "mac_csr.IgPrependEn",
                "type": "reg"
            },
            "0x000001e0": {
                "altname": "IG_PORT_PREPEND_EN1",
                "description": "Enable bits for prepending Timestamp and Parser Info to packets by Port for Hydra1 and ILK1.",
                "name": "IgPortPrependEn1",
                "ptr": "mac_csr.IgPrependEn",
                "type": "reg"
            },
            "0x000001e4": {
                "altname": "IG_PORT_L4_CHKSUM_SEL",
                "description": "Enables, per-port, the ingress prepend checksum field to always be the overall L4 checksum and not the\n                        calculated L4 UDP/TCP checksum.",
                "name": "IgPortL4ChksumSel",
                "ptr": "mac_csr.IgL4TotalSel",
                "type": "reg"
            },
            "0x000001e8": {
                "altname": "EG_VLAN_MATCH_REG0",
                "description": "Egress Match and Mask register for altertive VLAN tag VIDs.",
                "name": "EgVlanMatchReg0",
                "ptr": "mac_csr.VlanMatchReg",
                "type": "reg"
            },
            "0x000001ec": {
                "altname": "EG_VLAN_MATCH_REG1",
                "description": "Egress Match and Mask register for altertive VLAN tag VIDs.",
                "name": "EgVlanMatchReg1",
                "ptr": "mac_csr.VlanMatchReg1",
                "type": "reg"
            },
            "0x000001f0": {
                "altname": "IG_VLAN_MATCH_REG0",
                "description": "Ingress Match and Mask register for altertive VLAN tag VIDs.",
                "name": "IgVlanMatchReg0",
                "ptr": "mac_csr.VlanMatchReg",
                "type": "reg"
            },
            "0x000001f4": {
                "altname": "IG_VLAN_MATCH_REG1",
                "description": "Ingress Match and Mask register for altertive VLAN tag VIDs.",
                "name": "IgVlanMatchReg1",
                "ptr": "mac_csr.VlanMatchReg1",
                "type": "reg"
            },
            "0x000001f8": {
                "altname": "MISC_STATUS_CTRL",
                "description": "Ingress Interlaken ctx limit and ig_eq_ctx multibit error lock and linklist frozen.",
                "name": "MiscStatusCtrl",
                "ptr": "mac_csr.MiscStatusCtrl",
                "type": "reg"
            },
            "0x00000200": {
                "altname": "EG_CMD_PREPEND_EN0_LO",
                "description": "Enable bits for egress cmd prepend handling on channels 31-0. If bit set, parser will strip 1st 4 bytes from every packet to the associated channel.",
                "name": "EgCmdPrependEn0Lo",
                "ptr": "mac_csr.EgCmdPrependEn",
                "type": "reg"
            },
            "0x00000204": {
                "altname": "EG_CMD_PREPEND_EN0_HI",
                "description": "Enable bits for egress cmd prepend handling on channels 63-32. If bit set, parser will strip 1st 4 bytes from every packet to the associated channel.",
                "name": "EgCmdPrependEn0Hi",
                "ptr": "mac_csr.EgCmdPrependEn",
                "type": "reg"
            },
            "0x00000208": {
                "altname": "EG_CMD_PREPEND_EN1_LO",
                "description": "Enable bits for egress cmd prepend handling on channels 95-64. If bit set, parser will strip 1st 4 bytes from every packet to the associated channel.",
                "name": "EgCmdPrependEn1Lo",
                "ptr": "mac_csr.EgCmdPrependEn",
                "type": "reg"
            },
            "0x0000020c": {
                "altname": "EG_CMD_PREPEND_EN1_HI",
                "description": "Enable bits for egress cmd prepend handling on channels 127-96. If bit set, parser will strip 1st 4 bytes from every packet to the associated channel.",
                "name": "EgCmdPrependEn1Hi",
                "ptr": "mac_csr.EgCmdPrependEn",
                "type": "reg"
            },
            "0x00000210": {
                "altname": "PFC_TX_EN",
                "description": "Per-port enable bits for issuing Pause/Pfc frames.",
                "name": "PfcTxEn",
                "ptr": "mac_csr.PfcTxEn",
                "type": "reg"
            },
            "0x00000214": {
                "altname": "EG_TX_STOP_EN",
                "description": "Per-port enable bits for stopping Egress DQs.",
                "name": "EgTxStopEn",
                "ptr": "mac_csr.EgTxStopEn",
                "type": "reg"
            },
            "0x00000218": {
                "altname": "EG_TX_STOP_GPIO_SEL",
                "description": "GPIO (RXOOB) enable bits for stopping Egress DQs.",
                "name": "EgTxStopGpioSel",
                "ptr": "mac_csr.EgTxStopGpioSel",
                "type": "reg"
            },
            "0x00000240": {
                "altname": "MAC_EG_PORT_2_TO_0_CHAN_ASSIGN",
                "description": "Mac EG Hydra0 Ports 2-0 Channel Assignment Register.",
                "name": "MacEgPort2to0ChanAssign",
                "ptr": "mac_csr.MacPortChanAssign",
                "type": "reg"
            },
            "0x00000244": {
                "altname": "MAC_EG_PORT_5_TO_3_CHAN_ASSIGN",
                "description": "Mac EG Hydra0 Ports 5-3 Channel Assignment Register.",
                "name": "MacEgPort5to3ChanAssign",
                "ptr": "mac_csr.MacPortChanAssign",
                "type": "reg"
            },
            "0x00000248": {
                "altname": "MAC_EG_PORT_8_TO_6_CHAN_ASSIGN",
                "description": "Mac EG Hydra0 Ports 8-6 Channel Assignment Register.",
                "name": "MacEgPort8to6ChanAssign",
                "ptr": "mac_csr.MacPortChanAssign",
                "type": "reg"
            },
            "0x0000024c": {
                "altname": "MAC_EG_PORT_11_TO_9_CHAN_ASSIGN",
                "description": "Mac EG Hydra0 Ports 11-9 Channel Assignment Register.",
                "name": "MacEgPort11to9ChanAssign",
                "ptr": "mac_csr.MacPortChanAssign",
                "type": "reg"
            },
            "0x00000250": {
                "altname": "MAC_EG_PORT_14_TO_12_CHAN_ASSIGN",
                "description": "Mac EG Hydra1 Ports 2-0 Channel Assignment Register.",
                "name": "MacEgPort14to12ChanAssign",
                "ptr": "mac_csr.MacPortChanAssign",
                "type": "reg"
            },
            "0x00000254": {
                "altname": "MAC_EG_PORT_17_TO_15_CHAN_ASSIGN",
                "description": "Mac EG Hydra1 Port 3 Channel Assignment Register.",
                "name": "MacEgPort17to15ChanAssign",
                "ptr": "mac_csr.MacPortChanAssign1",
                "type": "reg"
            },
            "0x00000260": {
                "altname": "MAC_EG_ILK_CHAN_ASSIGN",
                "description": "Mac ILK EG Channel Assignment Register.",
                "name": "MacEgIlkChanAssign",
                "ptr": "mac_csr.MacEgIlkChanAssign",
                "type": "reg"
            },
            "0x00000264": {
                "altname": "MAC_EG_PORT_RR",
                "description": "Mac EG Port Round Robin DQ direct-access Enable Register.",
                "name": "MacEgPortRR",
                "ptr": "mac_csr.MacEgPortRR",
                "type": "reg"
            },
            "0x00000268": {
                "altname": "MAC_OOB_FC_TM_CNTL",
                "description": "Mac TM OOB control.",
                "name": "MacOobFcTmCntl",
                "ptr": "mac_csr.MacOobFcTmCntl",
                "type": "reg"
            },
            "0x0000026c": {
                "altname": "MAC_OOB_FC_TM_REMAP",
                "description": "Mac TM OOB 1024 vector remap register.",
                "name": "MacOobFcTmReMap",
                "ptr": "mac_csr.MacOobFcTmReMap",
                "type": "reg"
            },
            "0x00000278": {
                "altname": "EQ_INH",
                "description": "Mac Rx Enqueue inhibit control.",
                "name": "MacEqInh",
                "ptr": "mac_csr.MacEqInh",
                "type": "reg"
            },
            "0x0000027c": {
                "altname": "EQ_INH_DONE",
                "description": "Mac Rx Enqueue inhibit state.",
                "name": "MacEqInhDone",
                "ptr": "mac_csr.MacEqInhDone",
                "type": "reg"
            },
            "0x00000280": {
                "altname": "MAC_HY0_ETH_IG_PKT_HEAD_DROP_CNTR_%d",
                "description": "Mac Hydra0 Ethernet Per-port head drop count due to overskid, exceed, or free buffer underrun.",
                "name": "MacHy0EthIgPktHeadDropCntr%d",
                "offinc1": "0x00000004",
                "ptr": "mac_csr.MacHeadDropCounter",
                "repeat1": 12,
                "type": "reg"
            },
            "0x000002b0": {
                "altname": "MAC_HY1_ETH_IG_PKT_HEAD_DROP_CNTR_%d",
                "description": "Mac Hydra1 Ethernet per-port head drop count due to overskid, exceed, or free buffer underrun.",
                "name": "MacHy1EthIgPktHeadDropCntr%d",
                "offinc1": "0x00000004",
                "ptr": "mac_csr.MacHeadDropCounter",
                "repeat1": 4,
                "type": "reg"
            },
            "0x000002c0": {
                "altname": "MAC_ILK_IG_PKT_HEAD_DROP_CNTR",
                "description": "Mac Interlaken head drop count due to overskid, exceed, or free buffer underrun.",
                "name": "MacILKIgPktHeadDropCntr",
                "ptr": "mac_csr.MacHeadDropCounter",
                "type": "reg"
            },
            "0x00000400": {
                "altname": "MAC_ETH_FIFO_IF_ERR_0",
                "description": "Mac Hydra0 Fifo Interface Errors.",
                "name": "MacEthFifoIfErr0",
                "ptr": "mac_csr.MacEthFifoIfErr",
                "type": "reg"
            },
            "0x00000404": {
                "altname": "MAC_ETH_FIFO_IF_ERR_1",
                "description": "Mac Hydra1 Fifo Interface Errors.",
                "name": "MacEthFifoIfErr1",
                "ptr": "mac_csr.MacEthFifoIfErr",
                "type": "reg"
            },
            "0x00000408": {
                "altname": "MAC_ETH_AN_STATUS_0",
                "description": "Mac Hydra0 AutoNegotiate Status.",
                "name": "MacEthAnStatus0",
                "ptr": "mac_csr.MacEthAnStatus",
                "type": "reg"
            },
            "0x0000040c": {
                "altname": "MAC_ETH_AN_STATUS_1",
                "description": "Mac Hydra1 AutoNegotiate Status.",
                "name": "MacEthAnStatus1",
                "ptr": "mac_csr.MacEthAnStatus",
                "type": "reg"
            },
            "0x00000410": {
                "altname": "MAC_OOB_FC_ILK_STATUS",
                "description": "Mac RX OOB 512 error status 0 and 1 and LK 0 and 1 interrupts.",
                "name": "MacOobFcIlkStatus",
                "ptr": "mac_csr.MacOobFcIlkStatus",
                "type": "reg"
            },
            "0x00000414": {
                "altname": "MAC_HI_BER_STATUS",
                "description": "Mac Per_port High Bit Error rate indication. ",
                "name": "MacHiBerStatus",
                "ptr": "mac_csr.MacHiBerStatus",
                "type": "reg"
            },
            "0x00000418": {
                "altname": "MAC_PAUSE_STATE_CHANGE",
                "description": "Mac Per_port indication of a change in Pause/Pfc state. ",
                "name": "MacPauseStateChange",
                "ptr": "mac_csr.MacPauseStateChange",
                "type": "reg"
            },
            "0x00000420": {
                "altname": "MAC_STATS_HALF_FULL_PORT_00_11",
                "description": "Mac Stats Half Full Alert Port0-11 RX/TX.",
                "name": "MacStatsHalfFullPort0011",
                "ptr": "mac_csr.MacStatsHalfFull",
                "type": "reg"
            },
            "0x00000424": {
                "altname": "MAC_STATS_HALF_FULL_PORT_12_23",
                "description": "Mac Stats Half Full Alert Port12-23 RX/TX.",
                "name": "MacStatsHalfFullPort1223",
                "ptr": "mac_csr.MacStatsHalfFull",
                "type": "reg"
            },
            "0x00000428": {
                "altname": "MAC_STATS_HALF_FULL_CHAN_00_63",
                "description": "Mac Stats Half Full Alert Channel 00-63 RX/TX.",
                "name": "MacStatsHalfFullChan0063",
                "ptr": "mac_csr.MacStatsHalfFull",
                "type": "reg"
            },
            "0x0000042c": {
                "altname": "MAC_STATS_HALF_FULL_CHAN_63_127",
                "description": "Mac Stats Half Full Alert Channel 63-127 RX/TX.",
                "name": "MacStatsHalfFullChan63127",
                "ptr": "mac_csr.MacStatsHalfFull",
                "type": "reg"
            },
            "0x00000500": {
                "altname": "MAC_IG_PORT_ERR_STATUS%d",
                "description": "Mac Ingress Port Error Status.",
                "name": "MacIgPortErrStatus%d",
                "offinc1": "0x00000004",
                "ptr": "mac_csr.MacIgPortErrStatus",
                "repeat1": 16,
                "type": "reg"
            },
            "0x00000540": {
                "altname": "MAC_EG_TIME_STAMP_INSERTED%d",
                "description": "Mac Egress Port Timestamp Inserted Value.",
                "name": "MacEgTimeStampInserted%d",
                "offinc1": "0x00000004",
                "ptr": "mac_csr.MacEgTimeStampInserted",
                "repeat1": 16,
                "type": "reg"
            },
            "0x00000580": {
                "altname": "MAC_IG_PORT_ERR",
                "description": "Mac Ingress Port Error Captured.",
                "name": "MacIgPortErr",
                "ptr": "mac_csr.MacIgPortErr",
                "type": "reg"
            },
            "0x000005b4": {
                "altname": "MAC_EG_DROP_CTRL",
                "description": "Mac Egress Drop control.",
                "name": "MacEgDropCtrl",
                "ptr": "mac_csr.MacEgDropCtrl",
                "type": "reg"
            },
            "0x000005b8": {
                "altname": "MAC_SERIAL_LED_COUNT",
                "description": "Mac counter register for serial LED port state info.",
                "name": "MacSerialLedCount",
                "ptr": "mac_csr.MacSerialCount",
                "type": "reg"
            },
            "0x000005bc": {
                "altname": "MAC_SERIAL_LED_CTRL",
                "description": "Mac control register for serial LED port state info.",
                "name": "MacSerialLedCtrl",
                "ptr": "mac_csr.MacSerialCtrl",
                "type": "reg"
            },
            "0x000005c0": {
                "altname": "MAC_PFC_GEN_1SHOT_%d",
                "description": "Per-port(4), per-PFC(8) Pause generate 1-shot (self clearing for ports 0-11,TBD on ports 12-15). When written to 1, a pause/pfc will be set to that port:level and the bit will be cleared on the pfc_ack returned by the IP.  0:ports 3-0...3:ports 15-12.",
                "name": "MacPfcGen1Shot%d",
                "offinc1": "0x00000004",
                "ptr": "mac_csr.MacPfcGen1Shot",
                "repeat1": 4,
                "type": "reg"
            },
            "0x000005d0": {
                "altname": "MAC_TX_PFC_INH_EN_%d",
                "description": "Per-port(4), per-PFC(8) Pause/PFC generate Inhibit. When set, the ingress enqueue logic will be inhibited from generating a Pause/PFC for that port:level under any condition except SW 1-shot. PFC_TX_EN must be set for a port for a port to issue any Pause PFC. This set of registers can allow mixed lossy and and lossless PFC levels on a single port. The drop_on_exceed registers must be used to limit the buffers consumed by the lossy PFC levels. 0:ports 3-0...3:ports 15-12.",
                "name": "MacTxPfcInhEn%d",
                "offinc1": "0x00000004",
                "ptr": "mac_csr.MacTxPfcInhEn",
                "repeat1": 4,
                "type": "reg"
            },
            "0x000005e0": {
                "altname": "MAC_IG_CH_DROP_ON_EXCD_%d",
                "description": "Per-channel(32).  When set, the ingress high-water mark becomes a drop_on_exceed level rather than a Pause/Pfc generation flag. Any packet SOP received to a channel where the HWM is exceeded and the drop_on_exceed bit is set will be head dropped and counted in the head-drop counter for that port. Any packet already in progress when the HWM is exceeded and the drop_on_exceed bit is set will be allowed to complete. 0:channels 31-0...3:channels 127-96.",
                "name": "MacIgChDropOnExcd%d",
                "offinc1": "0x00000004",
                "ptr": "mac_csr.MacIgChDropOnExcd",
                "repeat1": 4,
                "type": "reg"
            },
            "0x000005f0": {
                "altname": "MAC_EG_PFC_IGN_EN_%d",
                "description": "Per-port(4), per-PFC(8) Pause/PFC ignore. When set, the egress dequeue logic will ignore the Pause/PFC for that port:level and transmits to that port:level will continue. 0:ports 3-0...3:ports 15-12.",
                "name": "MacPfcIgnEn%d",
                "offinc1": "0x00000004",
                "ptr": "mac_csr.MacPfcIgnEn",
                "repeat1": 4,
                "type": "reg"
            },
            "0x00000600": {
                "altname": "MAC_PFC_REMAP%d",
                "description": "PFC support which Remaps PFC_xoff to Eg channel for channel compression support.",
                "name": "MacPfcReMap%d",
                "offinc1": "0x00000004",
                "ptr": "mac_csr.MacPfcReMap",
                "repeat1": 16,
                "type": "reg"
            },
            "0x00000680": {
                "altname": "MAC_PCP_REMAP%d",
                "description": "PFC support which Remaps VLan-PCP for channel compression and channel for untagged.",
                "name": "MacPcpReMap%d",
                "offinc1": "0x00000004",
                "ptr": "mac_csr.MacPcpReMap",
                "repeat1": 16,
                "type": "reg"
            },
            "0x000006c0": {
                "altname": "MAC_HY0_ETH_EG_PKT_FLUSH_DROP_CNTR_%d",
                "description": "Mac Hydra0 Ethernet Per-port egress flush drop count due to DropAll or DropErr being set.",
                "name": "MacHy0EthEgPktFlushDropCntr%d",
                "offinc1": "0x00000004",
                "ptr": "mac_csr.MacFlushDropCounter",
                "repeat1": 6,
                "type": "reg"
            },
            "0x000006d8": {
                "altname": "MAC_HY1_ETH_EG_PKT_FLUSH_DROP_CNTR_%d",
                "description": "Mac Hydra1 Ethernet Per-port egress flush drop count due to DropAll or DropErr begin set.",
                "name": "MacHy1EthEgPktFlushDropCntr%d",
                "offinc1": "0x00000004",
                "ptr": "mac_csr.MacFlushDropCounter",
                "repeat1": 2,
                "type": "reg"
            },
            "0x00000700": {
                "altname": "MAC_PORT_HWM%d",
                "description": "Port HWMs and Skid before dropping for ports 2n+1 and 2n.",
                "name": "MacPortHwm%d",
                "offinc1": "0x00000004",
                "ptr": "mac_csr.MacPortHwm",
                "repeat1": 8,
                "type": "reg"
            },
            "0x00000730": {
                "altname": "MAC_PORT_HWM_LK1_LK0",
                "description": "Port HWMs and Skid before dropping for LK1 and LK0.",
                "name": "MacPortHwmLk1Lk0",
                "ptr": "mac_csr.MacPortHwm1",
                "type": "reg"
            },
            "0x000007b0": {
                "altname": "EG_LNKLST_RDDATA",
                "description": "Mac read return data for Egress linklist memory.",
                "name": "EgLnkLstRdData",
                "ptr": "mac_csr.LLMemRdData",
                "type": "reg"
            },
            "0x000007b4": {
                "altname": "IG_LNKLST_RDDATA",
                "description": "Mac read return data for Igress linklist memory.",
                "name": "IgLnkLstRdData",
                "ptr": "mac_csr.LLMemRdData",
                "type": "reg"
            },
            "0x000007b8": {
                "altname": "EG_LNKLST_RDWR",
                "description": "Mac Read/Write port to Egress link list memory",
                "name": "EgLnkLstRdWr",
                "ptr": "mac_csr.LLMemRdWr",
                "type": "reg"
            },
            "0x000007bc": {
                "altname": "IG_LNKLST_RDWR",
                "description": "Mac Read/Write port to Ingress link list memory",
                "name": "IgLnkLstRdWr",
                "ptr": "mac_csr.LLMemRdWr",
                "type": "reg"
            },
            "0x000007c0": {
                "altname": "SERDES4_RDWR_03_00",
                "description": "Mac Write port to serdes lanes 3 to 0.",
                "name": "SerDes4RdWr03To00",
                "ptr": "mac_csr.SerDes4RdWr",
                "type": "reg"
            },
            "0x000007c4": {
                "altname": "SERDES4_RDWR_07_04",
                "description": "Mac Write port to serdes lanes 7 to 4.",
                "name": "SerDes4RdWr07To04",
                "ptr": "mac_csr.SerDes4RdWr",
                "type": "reg"
            },
            "0x000007c8": {
                "altname": "SERDES4_RDWR_11_08",
                "description": "Mac Write port to serdes lanes 11 to 8.",
                "name": "SerDes4RdWr11To08",
                "ptr": "mac_csr.SerDes4RdWr",
                "type": "reg"
            },
            "0x000007cc": {
                "altname": "SERDES4_RDWR_15_12",
                "description": "Mac Write port to serdes lanes 15 to 12.",
                "name": "SerDes4RdWr15To12",
                "ptr": "mac_csr.SerDes4RdWr",
                "type": "reg"
            },
            "0x000007d0": {
                "altname": "SERDES4_RDWR_19_16",
                "description": "Mac Write port to serdes lanes 19 to 16.",
                "name": "SerDes4RdWr19To16",
                "ptr": "mac_csr.SerDes4RdWr",
                "type": "reg"
            },
            "0x000007d8": {
                "altname": "TDM_MEM_RDWR",
                "description": "Ingress DQ DWRR Weights RW Access port.",
                "name": "IgDqTdmMemoryRW",
                "ptr": "mac_csr.TdmMemRdWr",
                "type": "reg"
            },
            "0x000007e0": {
                "altname": "SERDES4_RDDATA_03_00",
                "description": "Mac read return data for serdes lanes 3 to 0.",
                "name": "SerDes4RdData03To00",
                "ptr": "mac_csr.SerDes4RdData",
                "type": "reg"
            },
            "0x000007e4": {
                "altname": "SERDES4_RDDATA_07_04",
                "description": "Mac read return data for serdes lanes 7 to 4.",
                "name": "SerDes4RdData07To04",
                "ptr": "mac_csr.SerDes4RdData",
                "type": "reg"
            },
            "0x000007e8": {
                "altname": "SERDES4_RDDATA_11_08",
                "description": "Mac read return data for serdes lanes 11 to 8.",
                "name": "SerDes4RdData11To08",
                "ptr": "mac_csr.SerDes4RdData",
                "type": "reg"
            },
            "0x000007ec": {
                "altname": "SERDES4_RDDATA_15_12",
                "description": "Mac read return data for serdes lanes 15 to 12.",
                "name": "SerDes4RdData15To12",
                "ptr": "mac_csr.SerDes4RdData",
                "type": "reg"
            },
            "0x000007f0": {
                "altname": "SERDES4_RDDATA_19_16",
                "description": "Mac read return data for serdes lanes 19 to 16.",
                "name": "SerDes4RdData19To16",
                "ptr": "mac_csr.SerDes4RdData",
                "type": "reg"
            },
            "0x000007f8": {
                "altname": "TDM_MEM_RDDATA",
                "description": "IG DQ DWRR Weights read return data.",
                "name": "IgDqTdmMemoryRdData",
                "ptr": "mac_csr.TdmMemRdData",
                "type": "reg"
            },
            "0x000007fc": {
                "altname": "SERDES_CK_MUX_SEL_CDR",
                "description": "SerDes local TX clock mux select.",
                "name": "SerDesCkMuxSelCdr",
                "ptr": "mac_csr.SerDesCkMuxSel2",
                "type": "reg"
            },
            "0x00000800": {
                "altname": "SERDES_PD_RX",
                "description": "SerDes per-lane RX Power Down - active low.",
                "name": "SerDesPdRx",
                "ptr": "mac_csr.SerDesPdLn",
                "type": "reg"
            },
            "0x00000804": {
                "altname": "SERDES_PD_TX",
                "description": "SerDes per-lane TX Power Down - active low.",
                "name": "SerDesPdTx",
                "ptr": "mac_csr.SerDesPdLn",
                "type": "reg"
            },
            "0x00000808": {
                "altname": "SERDES_PD_SY",
                "description": "SerDes per-macro Synth Power Down - active low.",
                "name": "SerDesPdSy",
                "ptr": "mac_csr.SerDesPdSy",
                "type": "reg"
            },
            "0x0000080c": {
                "altname": "SERDES_CK_MUX_SEL",
                "description": "SerDes clock mux select.",
                "name": "SerDesCkMuxSel",
                "ptr": "mac_csr.SerDesCkMuxSel",
                "type": "reg"
            },
            "0x00000810": {
                "altname": "SERDES_SIG_DETECT",
                "description": "SerDes per-lane Signal Detect.",
                "name": "SerDesSigDetect",
                "ptr": "mac_csr.SerDesSigDetect",
                "type": "reg"
            },
            "0x00000814": {
                "altname": "SERDES_SIG_DETECT_OVR",
                "description": "SerDes per-lane Signal Detect Override.",
                "name": "SerDesSigDetectOvr",
                "ptr": "mac_csr.SerDesSigDetectOvr",
                "type": "reg"
            },
            "0x00000818": {
                "altname": "SERDES_ETH_RX_ACT_DETECT",
                "description": "SerDes per-port Rx activity detect.",
                "name": "SerDesEthRxActDetect",
                "ptr": "mac_csr.SerDesActDetect",
                "type": "reg"
            },
            "0x0000081c": {
                "altname": "SERDES_ETH_TX_ACT_DETECT",
                "description": "SerDes per-port Tx activity detect.",
                "name": "SerDesEthTxActDetect",
                "ptr": "mac_csr.SerDesActDetect",
                "type": "reg"
            },
            "0x00000820": {
                "altname": "SERDES_LINK_UP",
                "description": "SerDes Link Up. A '1' indicates the Lane is Block-Locked or comma-sync'd, depending on mode. For a multi-lane port, all associated lanes must be block-locked AND aligned. These bits are just an indication of block_lock.",
                "name": "SerDesLinkUp",
                "ptr": "mac_csr.SerDesLinkUp",
                "type": "reg"
            },
            "0x00000824": {
                "altname": "PARITY_ERR_INJECT",
                "description": "Setting a bit in this register will force a 1-shot error to be written into the parity field of the corresponding memory on the next write. To re-set the 1-shot, write the register to 0.",
                "name": "ParityErrInject",
                "ptr": "mac_csr.ParityErrInject",
                "type": "reg"
            },
            "0x0000082c": {
                "altname": "BLOCK_LOCK",
                "description": "IP Core1 BlockLock. 20 bits of status encoded as per register detail.",
                "name": "BlockLock",
                "ptr": "mac_csr.BlockLock",
                "type": "reg"
            },
            "0x00000840": {
                "altname": "IG_PARITY_ERR_STATUS",
                "description": "Ingress parity error status. Clear on read. A non-zero type-field indicates a captured error at the address field location.",
                "name": "IgParityErrStatus",
                "ptr": "mac_csr.IgParityErrStatus",
                "type": "reg"
            },
            "0x00000844": {
                "altname": "EG_PARITY_ERR_STATUS",
                "description": "Egress parity error status. Clear on read. A non-zero type-field indicates a captured error at the address field location.",
                "name": "EgParityErrStatus",
                "ptr": "mac_csr.EgParityErrStatus",
                "type": "reg"
            },
            "0x00000848": {
                "altname": "MEM_ERR_DROP_COUNTS",
                "description": "Packet drop counts due to Mem read errors. Clear on read. Each counter saturates at 255.",
                "name": "MemErrDropCounts",
                "ptr": "mac_csr.MemErrDropCounts",
                "type": "reg"
            },
            "0x0000084c": {
                "altname": "ASSERT_CONFIG_CSR0",
                "description": "Assert config reg 0.",
                "name": "AssertConfig0",
                "ptr": "mac_csr.AssertConfig0",
                "type": "reg"
            },
            "0x00000850": {
                "altname": "ASSERT_CONFIG_CSR1",
                "description": "Assert config reg 1.",
                "name": "AssertConfig1",
                "ptr": "mac_csr.AssertConfig1",
                "type": "reg"
            }
        }
    },
    "regs": {
        "mac_csr.AssertConfig0": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ASSERT_CONFIG_CSR0",
                    "bit_lsb": 0,
                    "bit_msb": 31,
                    "description": "Assertion Config Register0: disable assertion 31:0.",
                    "mode": "RW",
                    "name": "AssertConfigCsr0"
                }
            ]
        },
        "mac_csr.AssertConfig1": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ASSERT_CONFIG_CSR1_DISABLE",
                    "bit_lsb": 18,
                    "bit_msb": 31,
                    "description": "Assertion Config Register1: disable assertion 45:32.",
                    "mode": "RW",
                    "name": "AssertConfigCsr1Disable"
                },
                {
                    "altname": "ASSERT_CONFIG_CSR1_ENA_FSM1",
                    "bit_lsb": 17,
                    "bit_msb": 17,
                    "description": "Assertion Config Register1: enable FSM1.",
                    "mode": "RW",
                    "name": "AssertConfigCsr1EnaFsm1"
                },
                {
                    "altname": "ASSERT_CONFIG_CSR1_ENA_FSM0",
                    "bit_lsb": 16,
                    "bit_msb": 16,
                    "description": "Assertion Config Register1: enable FSM0.",
                    "mode": "RW",
                    "name": "AssertConfigCsr1EnaFsm0"
                },
                {
                    "altname": "ASSERT_CONFIG_CSR1_FSM_CFG1",
                    "bit_lsb": 8,
                    "bit_msb": 15,
                    "description": "Assertion Config Register1: FSM config1.",
                    "mode": "RW",
                    "name": "AssertConfigCsr1FsmCfg1"
                },
                {
                    "altname": "ASSERT_CONFIG_CSR1_FSM_CFG0",
                    "bit_lsb": 0,
                    "bit_msb": 7,
                    "description": "Assertion Config Register1: FSM config0.",
                    "mode": "RW",
                    "name": "AssertConfigCsr1FsmCfg0"
                }
            ]
        },
        "mac_csr.BlockLock": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "BLOCK_LOCK",
                    "bit_lsb": 0,
                    "bit_msb": 19,
                    "description": "Active Hi Block Lock when EMac lanes as indicated by the EthMACs in core1. Block synchronization indication for each (virtual) lane. When asserted (1) the block sync SM could successfully lock onto 66-bit block boundaries. The signals stay asserted as long as block lock is maintained. All 20 bits are relevant when the 100G PCS operates in normal mode indicating lock per Virtual Lane. They are not relevant in RS-FEC mode. When the 100G PCS is not used the following bits per serdes lane are valid: When the Serdes If 0 operates in 25/10G mode then Bit 0 is used. When the Serdes If 1 operates in 25/10G mode then Bit 5 is used. When the Serdes If 2 operates in 25/10G mode then Bit 10 is used. When the Serdes If 3 operates in 25/10G mode then Bit 15 is used. When the Serdes If 1 and 0 operates in 2-Lane 50G with no RS-FEC mode then Bits 6, 5, 1, 0 are used. When the Serdes If 3 and 2 operates in 2-Lane 50G with no RS-FEC mode then Bits 16, 15, 11, 10 are used. When the Serdes If 3, 2, 1 and 0 operates in 4-Lane 40G with no RS-FEC mode then Bits 6, 5, 1, 0 are used.",
                    "mode": "RO",
                    "name": "BlockLock"
                }
            ]
        },
        "mac_csr.BufferCounterRdData": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "COUNTER_ADDR",
                    "bit_lsb": 24,
                    "bit_msb": 31,
                    "description": "Read/Write address to buffer-counter array",
                    "mode": "RO",
                    "name": "CounterAddr"
                },
                {
                    "altname": "BUFFER_COUNTER_RD_DATA_VALID",
                    "bit_lsb": 21,
                    "bit_msb": 21,
                    "description": "Set to '1' when read complete and counter rd data is valid. Cleared when next read register is initiated",
                    "mode": "RO",
                    "name": "BufferCounterRdDataValid"
                },
                {
                    "altname": "COUNTER_RD_DATA",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "16 bit counter read value",
                    "mode": "RO",
                    "name": "CounterRdData"
                }
            ]
        },
        "mac_csr.BufferCounterRw": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "COUNTER_ADDR",
                    "bit_lsb": 24,
                    "bit_msb": 31,
                    "description": "Read/Write address to buffer-counter array",
                    "mode": "RW",
                    "name": "CounterAddr"
                },
                {
                    "altname": "RFU2",
                    "bit_lsb": 22,
                    "bit_msb": 23,
                    "description": "Reserved for Use2.",
                    "mode": "RW",
                    "name": "Rfu2"
                },
                {
                    "altname": "COUNTER_RD_BUSY",
                    "bit_lsb": 21,
                    "bit_msb": 21,
                    "description": "write to 1 to start read op. Self clears when read complete. read data in corresponding read register.",
                    "mode": "RW",
                    "name": "CounterRdBusy"
                },
                {
                    "altname": "RFU",
                    "bit_lsb": 0,
                    "bit_msb": 20,
                    "description": "Reserved for Use.",
                    "mode": "RW",
                    "name": "Rfu"
                }
            ]
        },
        "mac_csr.EgBufferCreditPoolCount": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "EG_BUFFER_LINKLIST_READY",
                    "bit_lsb": 31,
                    "bit_msb": 31,
                    "description": "Indicates the IG Linklist has completed initalization.",
                    "mode": "RO",
                    "name": "EgBufferLinklistReady"
                },
                {
                    "altname": "EG_BUFFER_CREDIT_COUNT1",
                    "bit_lsb": 16,
                    "bit_msb": 29,
                    "description": "Live value of egress buffer free pool for core-pair 1 in split-mode only.",
                    "mode": "RO",
                    "name": "EgBufferCreditCount1"
                },
                {
                    "altname": "EG_BUFFER_CREDIT_COUNT",
                    "bit_lsb": 0,
                    "bit_msb": 13,
                    "description": "Live value of egress buffer free pool for core-pair 0 in non-split or split-mem modes.",
                    "mode": "RO",
                    "name": "EgBufferCreditCount"
                }
            ]
        },
        "mac_csr.EgCmdPrependEn": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "EG_CMD_PREPEND_EN",
                    "bit_lsb": 0,
                    "bit_msb": 31,
                    "description": "Egress Per-channel bit that enables the stripping of the 4-byte CMD PREPEND.",
                    "mode": "RW",
                    "name": "EgCmdPrependEn"
                }
            ]
        },
        "mac_csr.EgParityErrStatus": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "EG_PAR_ERR_TYPE1",
                    "bit_lsb": 28,
                    "bit_msb": 30,
                    "description": "If non-zero, indicates a parity err occurred. Read to clear. 001=rslt0_mem. 010=rslt1_mem, 100=desc_mem.",
                    "mode": "RO",
                    "name": "EgParErrType1"
                },
                {
                    "altname": "EG_PAR_ERR_ADDR1",
                    "bit_lsb": 16,
                    "bit_msb": 25,
                    "description": "Address of parity error in memory indicated by a non-zero type field.",
                    "mode": "RO",
                    "name": "EgParErrAddr1"
                },
                {
                    "altname": "EG_PAR_ERR_TYPE0",
                    "bit_lsb": 12,
                    "bit_msb": 14,
                    "description": "If non-zero, indicates a parity err occurred. Read to clear. 001=rslt0_mem. 010=rslt1_mem, 100=desc_mem.",
                    "mode": "RO",
                    "name": "EgParErrType0"
                },
                {
                    "altname": "EG_PAR_ERR_ADDR0",
                    "bit_lsb": 0,
                    "bit_msb": 9,
                    "description": "Address of parity error in memory indicated by a non-zero type field.",
                    "mode": "RO",
                    "name": "EgParErrAddr0"
                }
            ]
        },
        "mac_csr.EgTxStopEn": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "PORT_EG_TX_STOP_EN",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "Per-port enable for Stopping all Egress dequeues on a packet boundary.",
                    "mode": "RW",
                    "name": "PortEgTxStopEn"
                }
            ]
        },
        "mac_csr.EgTxStopGpioSel": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "EG_TX_STOP_GPIO_EN",
                    "bit_lsb": 16,
                    "bit_msb": 19,
                    "description": "Enable for each bit of GPIO (RX OOB) to stop dq on selected port.",
                    "mode": "RW",
                    "name": "EgTxStopGpioEn"
                },
                {
                    "altname": "EG_TX_STOP_GPIO_PORT_SEL_3",
                    "bit_lsb": 12,
                    "bit_msb": 15,
                    "description": "Port number to stop dqing when bit 3 of GpioEn is set. Stop dequeues on a packet boundary.",
                    "mode": "RW",
                    "name": "EgTxStopGpioPortSel3"
                },
                {
                    "altname": "EG_TX_STOP_GPIO_PORT_SEL_2",
                    "bit_lsb": 8,
                    "bit_msb": 11,
                    "description": "Port number to stop dqing when bit 2 of GpioEn is set. Stop dequeues on a packet boundary.",
                    "mode": "RW",
                    "name": "EgTxStopGpioPortSel2"
                },
                {
                    "altname": "EG_TX_STOP_GPIO_PORT_SEL_1",
                    "bit_lsb": 4,
                    "bit_msb": 7,
                    "description": "Port number to stop dqing when bit 1 of GpioEn is set. Stop dequeues on a packet boundary.",
                    "mode": "RW",
                    "name": "EgTxStopGpioPortSel1"
                },
                {
                    "altname": "EG_TX_STOP_GPIO_PORT_SEL_0",
                    "bit_lsb": 0,
                    "bit_msb": 3,
                    "description": "Port number to stop dqing when bit 0 of GpioEn is set. Stop dequeues on a packet boundary.",
                    "mode": "RW",
                    "name": "EgTxStopGpioPortSel0"
                }
            ]
        },
        "mac_csr.EthActCtlSeg": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_ACTIVATE_SEGMENT",
                    "bit_lsb": 0,
                    "bit_msb": 11,
                    "description": "Active segment control (1 bit per segment). '1' = Active.Bit0=Seg0...Bit11=Seg11",
                    "mode": "RW",
                    "name": "EthActivateSegment"
                }
            ]
        },
        "mac_csr.EthAnBpEthStatus": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_AN_100G_CR10",
                    "bit_lsb": 8,
                    "bit_msb": 8,
                    "description": "100G CR10.",
                    "mode": "RO",
                    "name": "EthAn100GCr10"
                },
                {
                    "altname": "ETH_AN_40G_CR4",
                    "bit_lsb": 6,
                    "bit_msb": 6,
                    "description": "40G CR4.",
                    "mode": "RO",
                    "name": "EthAn40GCr4"
                },
                {
                    "altname": "ETH_AN_40G_KR4",
                    "bit_lsb": 5,
                    "bit_msb": 5,
                    "description": "40G KR4.",
                    "mode": "RO",
                    "name": "EthAn40GKr4"
                },
                {
                    "altname": "ETH_AN_FEC",
                    "bit_lsb": 4,
                    "bit_msb": 4,
                    "description": "FEC.",
                    "mode": "RO",
                    "name": "EthAnFec"
                },
                {
                    "altname": "ETH_AN_10G_KR",
                    "bit_lsb": 3,
                    "bit_msb": 3,
                    "description": "10G KR.",
                    "mode": "RO",
                    "name": "EthAn10GKr"
                },
                {
                    "altname": "ETH_AN_10G_KX4",
                    "bit_lsb": 2,
                    "bit_msb": 2,
                    "description": "10G KX4. NOT SUPPORTED",
                    "mode": "RO",
                    "name": "EthAn10GKx4"
                },
                {
                    "altname": "ETH_AN_1G_KX",
                    "bit_lsb": 1,
                    "bit_msb": 1,
                    "description": "1G KX.",
                    "mode": "RO",
                    "name": "EthAn1GKx"
                },
                {
                    "altname": "ETH_AN_1",
                    "bit_lsb": 0,
                    "bit_msb": 0,
                    "description": "Always '1'.",
                    "mode": "RO",
                    "name": "EthAlways1"
                }
            ]
        },
        "mac_csr.EthAnKxAnAdvAbility0": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_AN_NEXT_PAGE",
                    "bit_lsb": 15,
                    "bit_msb": 15,
                    "description": "If the device does not have any Next Pages to send, the NP bit shall be set to logical zero. If a device wishes to engage in Next Page exchange, it shall set the NP bit to logical one.",
                    "mode": "RW",
                    "name": "EthAnNextPage"
                },
                {
                    "altname": "ETH_AN_ACK",
                    "bit_lsb": 14,
                    "bit_msb": 14,
                    "description": "Acknowledge (Ack) is used by the auto-negotiation function to indicate that a device has successfully received its link partner's Link Codeword.",
                    "mode": "RW",
                    "name": "EthAnAck"
                },
                {
                    "altname": "ETH_AN_REM_FAULT",
                    "bit_lsb": 13,
                    "bit_msb": 13,
                    "description": "The Remote Fault bit provides a standard transport mechanism for the transmission of simple fault information.",
                    "mode": "RW",
                    "name": "EthAnRemFault"
                },
                {
                    "altname": "ETH_AN_C_PAUSE_ABILITY",
                    "bit_lsb": 10,
                    "bit_msb": 12,
                    "description": "C2 (bit-12) is reserved. a) The C0 bit (bit-10) is the PAUSE bit indicating that the device is capable of providing the symmetric PAUSE functions. b) The C1 bit (bit-11) indicates that asymmetric PAUSE is supported. The value of the PAUSE bit (C0) when the C1 is set indicates the direction the PAUSE frames are supported for flow across the link.",
                    "mode": "RW",
                    "name": "EthAnCPauseAbility"
                },
                {
                    "altname": "ETH_AN_E_NONCE",
                    "bit_lsb": 5,
                    "bit_msb": 9,
                    "description": "Echoed Nonce field contains the nonce received from the link partner. When Acknowledge is set to logical zero, the bits in this field shall contain logical zeros. When Acknowledge is set to logical one, the bits in this field shall contain the value received in the Transmitted Nonce field from the link partner.",
                    "mode": "RW",
                    "name": "EthAnENonce"
                },
                {
                    "altname": "ETH_AN_SELECTOR",
                    "bit_lsb": 0,
                    "bit_msb": 4,
                    "description": "The selector field is a constant value defining 802.3ap support. The suggested value is 0x01.",
                    "mode": "RW",
                    "name": "EthAnSelector"
                }
            ]
        },
        "mac_csr.EthAnKxAnAdvAbility1": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_AN_TECH_RESERVED",
                    "bit_lsb": 11,
                    "bit_msb": 15,
                    "description": "Advertised ability Reserved bits.",
                    "mode": "RW",
                    "name": "EthAnTechAbleReserved"
                },
                {
                    "altname": "ETH_AN_TECH_ABLE_100GBASE_CR10",
                    "bit_lsb": 10,
                    "bit_msb": 10,
                    "description": "Advertised ability 100GBASE-CR10.",
                    "mode": "RW",
                    "name": "EthAnTechAble100GBaseCr10"
                },
                {
                    "altname": "ETH_AN_TECH_ABLE_40GBASE_CR4",
                    "bit_lsb": 9,
                    "bit_msb": 9,
                    "description": "Advertised ability 40GBASE-CR4.",
                    "mode": "RW",
                    "name": "EthAnTechAble40GBaseCr4"
                },
                {
                    "altname": "ETH_AN_TECH_ABLE_40GBASE_KR4",
                    "bit_lsb": 8,
                    "bit_msb": 8,
                    "description": "Advertised ability 40GBASE-KR4.",
                    "mode": "RW",
                    "name": "EthAnTechAble40GBaseKr4"
                },
                {
                    "altname": "ETH_AN_TECH_ABLE_10GBASE_KR",
                    "bit_lsb": 7,
                    "bit_msb": 7,
                    "description": "Advertised ability 10GBASE-KR.",
                    "mode": "RW",
                    "name": "EthAnTechAble10GBaseKr"
                },
                {
                    "altname": "ETH_AN_TECH_ABLE_10GBASE_KX4",
                    "bit_lsb": 6,
                    "bit_msb": 6,
                    "description": "Advertised ability 10GBASE-KX4. (NOT SUPPORT DO NOT SET)",
                    "mode": "RW",
                    "name": "EthAnTechAble10GBaseKx4"
                },
                {
                    "altname": "ETH_AN_TECH_ABLE_1GBASE_KX",
                    "bit_lsb": 5,
                    "bit_msb": 5,
                    "description": "Advertised ability 1GBASE-KX.",
                    "mode": "RW",
                    "name": "EthAnTechAble1GBaseKx"
                },
                {
                    "altname": "ETH_AN_ADV_T_NONCE",
                    "bit_lsb": 0,
                    "bit_msb": 4,
                    "description": "Transmitted Nonce field contains a random or pseudo-random number. A new value shall be generated for each entry to the Ability Detect state.",
                    "mode": "RW",
                    "name": "EthAnAdvTNonce"
                }
            ]
        },
        "mac_csr.EthAnKxAnAdvAbility2": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_AN_FEC_REQUESTED",
                    "bit_lsb": 15,
                    "bit_msb": 15,
                    "description": "FEC capability F1: FEC requested.",
                    "mode": "RW",
                    "name": "EthAnFecRequested"
                },
                {
                    "altname": "ETH_AN_FEC_ABILITY",
                    "bit_lsb": 14,
                    "bit_msb": 14,
                    "description": "FEC capability F0: FEC ability.",
                    "mode": "RW",
                    "name": "EthAnFecAbility"
                },
                {
                    "altname": "ETH_AN_TECH_ABILITY_A24_A11",
                    "bit_lsb": 0,
                    "bit_msb": 13,
                    "description": "Bit-13 to Bit-0 are reserved.",
                    "mode": "RW",
                    "name": "EthAnTechAbilityA24A11"
                }
            ]
        },
        "mac_csr.EthAnKxAnCtl": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_AN_RESET",
                    "bit_lsb": 15,
                    "bit_msb": 15,
                    "description": "Self Clearing bit should be set to '1' to reset the auto-negotiation process.",
                    "mode": "RW",
                    "name": "EthAnReset"
                },
                {
                    "altname": "ETH_AN_EXT_NEXT_PAGE_CTL",
                    "bit_lsb": 13,
                    "bit_msb": 13,
                    "description": "When set to '1', extended next pages are enabled. When set to '0', extended next pages are disabled. When enabled (1) transmission of next page with non-null code field is possible. The next page registers should be initialized and must be set (handshaking) every time a next page is received. When disabled (0) only null next page is transmitted in response to received next pages from link partner. Note: when 0, the registers AN_XNP are not writable (i.e. the 48bit next page message will internally be a null next page, having bit0 and bit13 set to 1, ignoring the values in AN_XNP registers).",
                    "mode": "RW",
                    "name": "EthAnExtNPCtl"
                },
                {
                    "altname": "ETH_AN_AUTO_NEG_ENABLE",
                    "bit_lsb": 12,
                    "bit_msb": 12,
                    "description": "Should be set to '1' to enable the auto-negotiation process. Should be set to '0' (Reset value) to disable the auto-negotiation process.",
                    "mode": "RW",
                    "name": "EthAnAutoNegEnable"
                },
                {
                    "altname": "ETH_AN_RESTART_AUTO_NEG",
                    "bit_lsb": 9,
                    "bit_msb": 9,
                    "description": "Self Clearing bit should be set to '1' to restart the auto-negotiation process.",
                    "mode": "RW",
                    "name": "EthAnRestartAutoNeg"
                }
            ]
        },
        "mac_csr.EthAnKxAnMsCnt": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_AN_MS_COUNT",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "Number of 6.4ns steps required for counting 1ms. Upper 16 bits of 18-bit counter value. The lower 2 bits are fixed to \"01\" internally. Defaults to 0x9896 representing a timer value of 156249, which defines 1 millisecond",
                    "mode": "RW",
                    "name": "EthAnMsCnt"
                }
            ]
        },
        "mac_csr.EthAnKxAnRemAbility0": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_AN_NEXT_PAGE",
                    "bit_lsb": 15,
                    "bit_msb": 15,
                    "description": "If the device does not have any Next Pages to send, the NP bit shall be set to logical zero. If a device wishes to engage in Next Page exchange, it shall set the NP bit to logical one.",
                    "mode": "RO",
                    "name": "EthAnNextPage"
                },
                {
                    "altname": "ETH_AN_ACK",
                    "bit_lsb": 14,
                    "bit_msb": 14,
                    "description": "Acknowledge (Ack) is used by the auto-negotiation function to indicate that a device has successfully received its link partner's Link Codeword.",
                    "mode": "RO",
                    "name": "EthAnAck"
                },
                {
                    "altname": "ETH_AN_REM_FAULT",
                    "bit_lsb": 13,
                    "bit_msb": 13,
                    "description": "The Remote Fault bit provides a standard transport mechanism for the transmission of simple fault information.",
                    "mode": "RO",
                    "name": "EthAnRemFault"
                },
                {
                    "altname": "ETH_AN_C_PAUSE_ABILITY",
                    "bit_lsb": 10,
                    "bit_msb": 12,
                    "description": "C2 (bit-12) is reserved. a) The C0 bit (bit-10) is the PAUSE bit indicating that the device is capable of providing the symmetric PAUSE functions. b) The C1 bit (bit-11) indicates that asymmetric PAUSE is supported. The value of the PAUSE bit (C0) when the C1 is set indicates the direction the PAUSE frames are supported for flow across the link.",
                    "mode": "RO",
                    "name": "EthAnCPauseAbility"
                },
                {
                    "altname": "ETH_AN_E_NONCE",
                    "bit_lsb": 5,
                    "bit_msb": 9,
                    "description": "Echoed Nonce field contains the nonce received from the link partner. When Acknowledge is set to logical zero, the bits in this field shall contain logical zeros. When Acknowledge is set to logical one, the bits in this field shall contain the value received in the Transmitted Nonce field from the link partner.",
                    "mode": "RO",
                    "name": "EthAnENonce"
                },
                {
                    "altname": "ETH_AN_SELECTOR",
                    "bit_lsb": 0,
                    "bit_msb": 4,
                    "description": "The selector field is a constant value defining 802.3ap support. The suggested value is 0x01.",
                    "mode": "RO",
                    "name": "EthAnSelector"
                }
            ]
        },
        "mac_csr.EthAnKxAnRemAbility1": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_AN_TECH_ABLE_100GBASE_CR10",
                    "bit_lsb": 10,
                    "bit_msb": 10,
                    "description": "Remote ability 100GBASE-CR10.",
                    "mode": "RO",
                    "name": "EthAnTechAble100GBaseCr10"
                },
                {
                    "altname": "ETH_AN_TECH_ABLE_40GBASE_CR4",
                    "bit_lsb": 9,
                    "bit_msb": 9,
                    "description": "Remote ability 40GBASE-CR4.",
                    "mode": "RO",
                    "name": "EthAnTechAble40GBaseCr4"
                },
                {
                    "altname": "ETH_AN_TECH_ABLE_40GBASE_KR4",
                    "bit_lsb": 8,
                    "bit_msb": 8,
                    "description": "Remote ability 40GBASE-KR4.",
                    "mode": "RO",
                    "name": "EthAnTechAble40GBaseKr4"
                },
                {
                    "altname": "ETH_AN_TECH_ABLE_10GBASE_KR",
                    "bit_lsb": 7,
                    "bit_msb": 7,
                    "description": "Remote ability 10GBASE-KR.",
                    "mode": "RO",
                    "name": "EthAnTechAble10GBaseKr"
                },
                {
                    "altname": "ETH_AN_TECH_ABLE_10GBASE_KX4",
                    "bit_lsb": 6,
                    "bit_msb": 6,
                    "description": "Remote ability 10GBASE-KX4. (NOT SUPPORT DO NOT SET)",
                    "mode": "RO",
                    "name": "EthAnTechAble10GBaseKx4"
                },
                {
                    "altname": "ETH_AN_TECH_ABLE_1GBASE_KX",
                    "bit_lsb": 5,
                    "bit_msb": 5,
                    "description": "Remote ability 1GBASE-KX.",
                    "mode": "RO",
                    "name": "EthAnTechAble1GBaseKx"
                },
                {
                    "altname": "ETH_AN_REM_T_NONCE",
                    "bit_lsb": 0,
                    "bit_msb": 4,
                    "description": "Transmitted Nonce field contains a random or pseudo-random number. A new value shall be generated for each entry to the Ability Detect state.",
                    "mode": "RO",
                    "name": "EthAnRemTNonce"
                }
            ]
        },
        "mac_csr.EthAnKxAnRemAbility2": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_AN_FEC_REQUESTED",
                    "bit_lsb": 15,
                    "bit_msb": 15,
                    "description": "FEC capability F1: FEC requested.",
                    "mode": "RO",
                    "name": "EthAnFecRequested"
                },
                {
                    "altname": "ETH_AN_FEC_ABILITY",
                    "bit_lsb": 14,
                    "bit_msb": 14,
                    "description": "FEC capability F0: FEC ability.",
                    "mode": "RO",
                    "name": "EthAnFecAbility"
                },
                {
                    "altname": "ETH_AN_TECH_ABILITY_A24_A11",
                    "bit_lsb": 0,
                    "bit_msb": 13,
                    "description": "Bit-13 to Bit-0 are reserved.",
                    "mode": "RO",
                    "name": "EthAnTechAbilityA24A11"
                }
            ]
        },
        "mac_csr.EthAnKxAnStatus": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_AN_PAR_DET_FAULT",
                    "bit_lsb": 9,
                    "bit_msb": 9,
                    "description": "Error with parallel detection. When the remote device does not support autonegotiation the autonegotiation module function falls back to parallel detection only monitoring the sync indications from the PCS layers. If none or more than one sync is detected the error is asserted.",
                    "mode": "RO",
                    "name": "EthAnParDetFault"
                },
                {
                    "altname": "ETH_AN_EXT_NEXT_PAGE_STATUS",
                    "bit_lsb": 7,
                    "bit_msb": 7,
                    "description": "Set to '1' to indicate that the Extended next pages are enabled.",
                    "mode": "RO",
                    "name": "EthAnExtNPStatus"
                },
                {
                    "altname": "ETH_AN_PAGE_RCVD",
                    "bit_lsb": 6,
                    "bit_msb": 6,
                    "description": "Latch High bit set to '1' to indicate that a page has been received. Set to '0' to indicate that a page has not been received.",
                    "mode": "RO",
                    "name": "EthAnPageRcvd"
                },
                {
                    "altname": "ETH_AN_COMPLETE",
                    "bit_lsb": 5,
                    "bit_msb": 5,
                    "description": "Set to '1' to indicate that the Auto-Negotiation process is completed. Set to '0' to indicate that the Auto-Negotiation process is not completed.",
                    "mode": "RO",
                    "name": "EthAnComplete"
                },
                {
                    "altname": "ETH_AN_REM_FAULT",
                    "bit_lsb": 4,
                    "bit_msb": 4,
                    "description": "Latch High bit set to '1' to indicate that a remote fault condition is detected. Set to '0' to indicate that a remote fault condition is not detected.",
                    "mode": "RO",
                    "name": "EthAnRemFault"
                },
                {
                    "altname": "ETH_AN_ABILITY",
                    "bit_lsb": 3,
                    "bit_msb": 3,
                    "description": "Always set to '1' to indicate that the Core is able to perform Auto-Negotiation.",
                    "mode": "RO",
                    "name": "EthAnAbility"
                },
                {
                    "altname": "ETH_AN_LINK_STATUS",
                    "bit_lsb": 2,
                    "bit_msb": 2,
                    "description": "Latched Low bit set to '1' to indicate that the PMA link is up. Set to '0' to indicate that the link is/was down. Note: this is a direct result of activity on the external pin phy_los.",
                    "mode": "RO",
                    "name": "EthAnLinkStatus"
                },
                {
                    "altname": "ETH_AN_LP_AN_ABILITY",
                    "bit_lsb": 0,
                    "bit_msb": 0,
                    "description": "Set to '1' to indicate that the Link Partner is able to perform Auto-Negotiation. Set to '0' to indicate that the Link Partner is not able to perform Auto-Negotiation.",
                    "mode": "RO",
                    "name": "EthAnLpAnAbility"
                }
            ]
        },
        "mac_csr.EthAnLpXnp0": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_AN_LP_XNP_NEXT_PAGE",
                    "bit_lsb": 15,
                    "bit_msb": 15,
                    "description": "If the device does not have any Next Pages to send, the NP bit shall be set to logical zero. If the Link Partner wishes to engage in Next Page exchange, it shall set the NP bit to logical one.",
                    "mode": "RO",
                    "name": "EthAnLpXnpNextPage"
                },
                {
                    "altname": "ETH_AN_LP_XNP_ACK",
                    "bit_lsb": 14,
                    "bit_msb": 14,
                    "description": "Acknowledge (Ack) is used by the auto-negotiation function to indicate that the link partner has successfully received the Link Codeword.",
                    "mode": "RO",
                    "name": "EthAnLpXnpAck"
                },
                {
                    "altname": "ETH_AN_LP_XNP_MP",
                    "bit_lsb": 13,
                    "bit_msb": 13,
                    "description": "Message page bit. There are two types of Next page word. Message page=(1)/Unformatted page=(0). For the Message Next Pages, the MP bit shall be set to logical one and for the Unformatted Next Pages, the MP bit shall be set to logical zero.",
                    "mode": "RO",
                    "name": "EthAnLpXnpMP"
                },
                {
                    "altname": "ETH_AN_LP_XNP_ACK_2",
                    "bit_lsb": 12,
                    "bit_msb": 12,
                    "description": "Acknowledge 2 (Ack2) is used to indicate that the Link Partner receiver is able to act on the information (or perform the task) defined in the message.",
                    "mode": "RO",
                    "name": "EthAnLpXnpAck2"
                },
                {
                    "altname": "ETH_AN_LP_XNP_TOGGLE_BIT",
                    "bit_lsb": 11,
                    "bit_msb": 11,
                    "description": "Flag to keep track of the state of the Link Partner device's Toggle bit.",
                    "mode": "RO",
                    "name": "EthAnLpXnpToggleBit"
                },
                {
                    "altname": "ETH_AN_LP_XNP_MU",
                    "bit_lsb": 0,
                    "bit_msb": 10,
                    "description": "These bits can be used as Message code field or Unformatted code field. When bit-13 is logical one, these bits represent message code field. Predefined message code field should be used as specified in the standard 802.3ap. For the null message code the value is 0x01.",
                    "mode": "RO",
                    "name": "EthAnLpXnpMU"
                }
            ]
        },
        "mac_csr.EthAnLpXnp12": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_AN_LP_XNP_UNFORMATTED",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "Unformatted code field. Message code defines how the Unformatted codes will be interpreted.",
                    "mode": "RO",
                    "name": "EthAnLPXnpUnformatted"
                }
            ]
        },
        "mac_csr.EthAnXnp0": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_AN_XNP_NEXT_PAGE",
                    "bit_lsb": 15,
                    "bit_msb": 15,
                    "description": "If the device does not have any Next Pages to send, the NP bit shall be set to logical zero. If a device wishes to engage in Next Page exchange, it shall set the NP bit to logical one.",
                    "mode": "RW",
                    "name": "EthAnXnpNextPage"
                },
                {
                    "altname": "ETH_AN_XNP_ACK",
                    "bit_lsb": 14,
                    "bit_msb": 14,
                    "description": "Acknowledge (Ack) is used by the auto-negotiation function to indicate that a device has successfully received its link partner's Link Codeword.",
                    "mode": "RW",
                    "name": "EthAnXnpAck"
                },
                {
                    "altname": "ETH_AN_XNP_MP",
                    "bit_lsb": 13,
                    "bit_msb": 13,
                    "description": "Message page bit. There are two types of Next page word. Message page=(1)/Unformatted page=(0). For the Message Next Pages, the MP bit shall be set to logical one and for the Unformatted Next Pages, the MP bit shall be set to logical zero.",
                    "mode": "RW",
                    "name": "EthAnXnpMP"
                },
                {
                    "altname": "ETH_AN_XNP_ACK_2",
                    "bit_lsb": 12,
                    "bit_msb": 12,
                    "description": "Acknowledge 2 (Ack2) is used to indicate that the receiver is able to act on the information (or perform the task) defined in the message.",
                    "mode": "RW",
                    "name": "EthAnXnpAck2"
                },
                {
                    "altname": "ETH_AN_XNP_TOGGLE_BIT",
                    "bit_lsb": 11,
                    "bit_msb": 11,
                    "description": "Flag to keep track of the state of the local device's Toggle bit. Initial value is taken from base page.",
                    "mode": "RW",
                    "name": "EthAnXnpToggleBit"
                },
                {
                    "altname": "ETH_AN_XNP_MU",
                    "bit_lsb": 0,
                    "bit_msb": 10,
                    "description": "These bits can be used as Message code field or Unformatted code field. When bit-13 is logical one, these bits represent message code field. Predefined message code field should be used as specified in the standard 802.3ap. For the null message code the value is 0x01.",
                    "mode": "RW",
                    "name": "EthAnXnpMU"
                }
            ]
        },
        "mac_csr.EthAnXnp1": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_AN_XNP_UNFORMATTED",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "Unformatted code field. Message code defines how the Unformatted codes will be interpreted.",
                    "mode": "RW",
                    "name": "EthAnXnpUnformatted"
                }
            ]
        },
        "mac_csr.EthAnXnp2": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_AN_XNP_UNFORMATTED",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "Unformatted code field. Message code defines how the Unformatted codes will be interpreted.",
                    "mode": "RW",
                    "name": "EthAnXnpUnformatted"
                }
            ]
        },
        "mac_csr.EthChPcsBaseRStatus1": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_PCS_RCV_LINK_STATUS",
                    "bit_lsb": 12,
                    "bit_msb": 12,
                    "description": "Receive link status. 1=Link up, 0=link down.",
                    "mode": "RO",
                    "name": "EthPcsRcvLinkStatus"
                },
                {
                    "altname": "ETH_PCS_PRBS9_ABLE",
                    "bit_lsb": 3,
                    "bit_msb": 3,
                    "description": "10GBASE-R PRBS9 pattern testing ability.",
                    "mode": "RO",
                    "name": "EthPcsPrbs9Able"
                },
                {
                    "altname": "ETH_PCS_PRBS31_ABLE",
                    "bit_lsb": 2,
                    "bit_msb": 2,
                    "description": "10GBASE-R PRBS31 pattern testing ability.",
                    "mode": "RO",
                    "name": "EthPcsPrbs31Able"
                },
                {
                    "altname": "ETH_PCS_HIGH_BER",
                    "bit_lsb": 1,
                    "bit_msb": 1,
                    "description": "High BER. 1=PCS reporting a high BER.",
                    "mode": "RO",
                    "name": "EthPcsHighBer"
                },
                {
                    "altname": "ETH_PCS_BLOCK_LOCKED",
                    "bit_lsb": 0,
                    "bit_msb": 0,
                    "description": "Block lock. 1=PCS locked to received blocks.",
                    "mode": "RO",
                    "name": "EthPcsBlockLocked"
                }
            ]
        },
        "mac_csr.EthChPcsBaseRStatus2": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_PCS_LATCHED_BLOCK_LOCK",
                    "bit_lsb": 15,
                    "bit_msb": 15,
                    "description": "Latched block lock. (LatchedLow cleared on read).",
                    "mode": "RO",
                    "name": "EthPcsLatchedBlockLock"
                },
                {
                    "altname": "ETH_PCS_LATCHED_HIGH_BER",
                    "bit_lsb": 14,
                    "bit_msb": 14,
                    "description": "Latched high BER. (LatchedHi cleared on read).",
                    "mode": "RO",
                    "name": "EthPcsLatchedHighBerr"
                },
                {
                    "altname": "ETH_PCS_BER_COUNTER",
                    "bit_lsb": 8,
                    "bit_msb": 13,
                    "description": "BER counter (non-rollover cleared on read).",
                    "mode": "RO",
                    "name": "EthPcsBerCounter"
                },
                {
                    "altname": "ETH_PCS_ERRORED_BLOCK_COUNTER",
                    "bit_lsb": 0,
                    "bit_msb": 7,
                    "description": "Errored block counter (non-rollover cleared on read).",
                    "mode": "RO",
                    "name": "EthPcsErrorBlockCounter"
                }
            ]
        },
        "mac_csr.EthChPcsBaseRTestCtl": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_PCS_PRBS9_TRANSMIT_PAT_EN",
                    "bit_lsb": 6,
                    "bit_msb": 6,
                    "description": "10GBASE-R PRBS9 transmit test-pattern enable. NOT AVAILABLE",
                    "mode": "RO",
                    "name": "EthPcsPrbs9TransmitPatEn"
                },
                {
                    "altname": "ETH_PCS_PRBS31_RECEIVE_PAT_EN",
                    "bit_lsb": 5,
                    "bit_msb": 5,
                    "description": "10GBASE-R PRBS31 receive test-pattern enable. NOT AVAILABLE",
                    "mode": "RO",
                    "name": "EthPcsPrbs31ReceivePatEn"
                },
                {
                    "altname": "ETH_PCS_PRBS31_TRANSMIT_PAT_EN",
                    "bit_lsb": 4,
                    "bit_msb": 4,
                    "description": "10GBASE-R PRBS31 transmit test-pattern enable. NOT AVAILABLE",
                    "mode": "RO",
                    "name": "EthPcsPrbs31TransmitPatEn"
                },
                {
                    "altname": "ETH_PCS_TRANSMIT_TEST_PAT_EN",
                    "bit_lsb": 3,
                    "bit_msb": 3,
                    "description": "Transmit test-pattern enable. When bits 3:2 are enabled, test pattern according to bits 1:0 are generated for 10GBASE-R, or scrambled idle test pattern are generated for 100GBASE-R and 40GBASE-R.",
                    "mode": "RW",
                    "name": "EthPcsTransmitTestPatEn"
                },
                {
                    "altname": "ETH_PCS_RECEIVE_TEST_PAT_EN",
                    "bit_lsb": 2,
                    "bit_msb": 2,
                    "description": "Receive test-pattern enable. When bits 3:2 are enabled, test pattern according to bits 1:0 are generated for 10GBASE-R, or scrambled idle test pattern are generated for 100GBASE-R and 40GBASE-R.",
                    "mode": "RW",
                    "name": "EthPcsReceiveTestPatEn"
                },
                {
                    "altname": "ETH_PCS_TEST_PAT_SEL",
                    "bit_lsb": 1,
                    "bit_msb": 1,
                    "description": "Test pattern select. 1=Square wave, 0=pseudo random. Must be '0' for 100GBASE-R and 40GBASE-R.",
                    "mode": "RW",
                    "name": "EthPcsTestPatSel"
                },
                {
                    "altname": "ETH_PCS_DATA_PAT_SEL",
                    "bit_lsb": 0,
                    "bit_msb": 0,
                    "description": "Data pattern select. 1=Zeros data pattern, 0=LF data. Must be '0' for 100GBASE-R and 40GBASE-R",
                    "mode": "RW",
                    "name": "EthPcsDataPatSel"
                }
            ]
        },
        "mac_csr.EthChPcsBerHiOrderCnt": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_PCS_BER_HI_ORDER_CNT",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "Bits 21:6 of BER counter. (Non-Rollover clear on read) ",
                    "mode": "RO",
                    "name": "EthPcsBerHiOrderCnt"
                }
            ]
        },
        "mac_csr.EthChPcsBipErrCnt": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_PCS_BIP_ERR_CNT",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "BIP error counter lane x (Non-Rollover clear on read). ",
                    "mode": "RO",
                    "name": "EthPcsBipErrCnt"
                }
            ]
        },
        "mac_csr.EthChPcsCtl1": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_PCS_RESET",
                    "bit_lsb": 15,
                    "bit_msb": 15,
                    "description": "Reset. 1=PCS reset (see FIXME), 0=normal operation. Self clearing.",
                    "mode": "RW",
                    "name": "EthPcsReset"
                },
                {
                    "altname": "ETH_PCS_LOOPBACK",
                    "bit_lsb": 14,
                    "bit_msb": 14,
                    "description": "Loopback. 1=Enable loopback (see FIXME), 0=normal.",
                    "mode": "RW",
                    "name": "EthPcsLoopback"
                },
                {
                    "altname": "ETH_PCS_SPEED_SELECTION13",
                    "bit_lsb": 13,
                    "bit_msb": 13,
                    "description": "Speed selection. (13,6)=11=bits 5:2 select speed.",
                    "mode": "RO",
                    "name": "EthPcsSpeedSelection13"
                },
                {
                    "altname": "ETH_PCS_LOW_POWER",
                    "bit_lsb": 11,
                    "bit_msb": 11,
                    "description": "Low power. 1=Low power mode, 0=normal. NOT SUPPORTED",
                    "mode": "RO",
                    "name": "EthPcsLowPower"
                },
                {
                    "altname": "ETH_PCS_SPEED_SELECTION6",
                    "bit_lsb": 6,
                    "bit_msb": 6,
                    "description": "Speed selection. (13,6)=11=bits 5:2 select speed.",
                    "mode": "RO",
                    "name": "EthPcsSpeedSelection6"
                },
                {
                    "altname": "ETH_PCS_SPEED_SEL",
                    "bit_lsb": 2,
                    "bit_msb": 5,
                    "description": "PCS Speed Select.Speed Bits (13,6:2) are set to 110100 for 100GBASE-R, 110011 for 40GBASE-R, or 110000 for 10GBASE-R inherited from global configuration.",
                    "mode": "RO",
                    "name": "EthPcsSpeedSel"
                }
            ]
        },
        "mac_csr.EthChPcsCtl2": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_PCS_TYPE_SELECTION",
                    "bit_lsb": 0,
                    "bit_msb": 2,
                    "description": "Bits 2:0 are set 101=100GBASE-R, 100=40GBASE-R, or 000=10GBASE-R, inherited from global configuration.",
                    "mode": "RO",
                    "name": "EthPcsTypeSelection"
                }
            ]
        },
        "mac_csr.EthChPcsDevId0": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_PCS_DEV_ID",
                    "bit_lsb": 0,
                    "bit_msb": 3,
                    "description": "Bits 3..0 are used and equal to the segment number of the PCS. All other bits are 0.",
                    "mode": "RO",
                    "name": "EthPcsDevId"
                }
            ]
        },
        "mac_csr.EthChPcsDevId1": {
            "bit_length": 32,
            "fields": []
        },
        "mac_csr.EthChPcsDevInPkg1": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_PCS_TC_PRESENT",
                    "bit_lsb": 6,
                    "bit_msb": 6,
                    "description": "TC Present.",
                    "mode": "RO",
                    "name": "EthPcsTcPresent"
                },
                {
                    "altname": "ETH_PCS_DTE_XS_PRESENT",
                    "bit_lsb": 5,
                    "bit_msb": 5,
                    "description": "DTE XS Present.",
                    "mode": "RO",
                    "name": "EthPcsDteXsPresent"
                },
                {
                    "altname": "ETH_PCS_PHY_XS_PRESENT",
                    "bit_lsb": 4,
                    "bit_msb": 4,
                    "description": "PHY XS Present.",
                    "mode": "RO",
                    "name": "EthPcsPhyXsPresent"
                },
                {
                    "altname": "ETH_PCS_PCS_PRESENT",
                    "bit_lsb": 3,
                    "bit_msb": 3,
                    "description": "PCS Present.",
                    "mode": "RO",
                    "name": "EthPcsPCSPresent"
                },
                {
                    "altname": "ETH_PCS_WIS_PRESENT",
                    "bit_lsb": 2,
                    "bit_msb": 2,
                    "description": "WIS Present.",
                    "mode": "RO",
                    "name": "EthPcsWisPresent"
                },
                {
                    "altname": "ETH_PCS_PMD_PMA_PRESENT",
                    "bit_lsb": 1,
                    "bit_msb": 1,
                    "description": "PMD/PMAPresent.",
                    "mode": "RO",
                    "name": "EthPcsPmdPmaPresent"
                },
                {
                    "altname": "ETH_PCS_CLAUSE22_REGS_PRESENT",
                    "bit_lsb": 0,
                    "bit_msb": 0,
                    "description": "Clause 22 registers Present.",
                    "mode": "RO",
                    "name": "EthPcsClause22RegsPresent"
                }
            ]
        },
        "mac_csr.EthChPcsDevInPkg2": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_PCS_VENDOR_DEV2_PRESENT",
                    "bit_lsb": 15,
                    "bit_msb": 15,
                    "description": "Vendor specific device 2 Present.",
                    "mode": "RO",
                    "name": "EthPcsVndrDev2Present"
                },
                {
                    "altname": "ETH_PCS_VENDOR_DEV1_PRESENT",
                    "bit_lsb": 14,
                    "bit_msb": 14,
                    "description": "Vendor specific device 1 Present.",
                    "mode": "RO",
                    "name": "EthPcsVndrDev1Present"
                },
                {
                    "altname": "ETH_PCS_CLAUSE22_EXT_PRESENT",
                    "bit_lsb": 13,
                    "bit_msb": 13,
                    "description": "Clause 22 extension Present.",
                    "mode": "RO",
                    "name": "EthPcsClause22ExtPresent"
                }
            ]
        },
        "mac_csr.EthChPcsErrBlkHiOrderCnt": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_PCS_HI_ORDER_CNT_PRESENT",
                    "bit_lsb": 15,
                    "bit_msb": 15,
                    "description": "High order counter present. Always 1, writes ignored. ",
                    "mode": "RO",
                    "name": "EthPcsHiOrderCntPresent"
                },
                {
                    "altname": "ETH_PCS_ERR_BLK_HI_ORDER_CNT",
                    "bit_lsb": 0,
                    "bit_msb": 13,
                    "description": "Bits 21:8 of Errored blocks counter. (Non-Rollover clear on read) ",
                    "mode": "RO",
                    "name": "EthPcsErrBlkHiOrderCnt"
                }
            ]
        },
        "mac_csr.EthChPcsLaneAlignStat1": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_PCS_LANE_ALIGNMENT_STATUS",
                    "bit_lsb": 12,
                    "bit_msb": 12,
                    "description": "Lane alignment status. 1=All Receive lanes locked and aligned. ",
                    "mode": "RO",
                    "name": "EthPcsLaneAlignmentStatus"
                },
                {
                    "altname": "ETH_PCS_LANE_BLOCK_LOCK",
                    "bit_lsb": 0,
                    "bit_msb": 7,
                    "description": "Bit 0 = Lane0 lock... bit 7 = Lane 7 lock etc. Note: Bits 7:4 are reserved for 40GBASE-R.",
                    "mode": "RO",
                    "name": "EthPcsLaneBlockLock"
                }
            ]
        },
        "mac_csr.EthChPcsLaneAlignStat2": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_PCS_LANE_BLOCK_LOCK",
                    "bit_lsb": 0,
                    "bit_msb": 11,
                    "description": "Bit 0 = Lane8 lock, ... bit 11 = lane19 lock. Note: Bits 11:0 are reserved for 40GBASE-R. ",
                    "mode": "RO",
                    "name": "EthPcsLaneBlockLock"
                }
            ]
        },
        "mac_csr.EthChPcsLaneAlignStat3": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_PCS_LANE_ALIGN_MARKER_LOCK",
                    "bit_lsb": 0,
                    "bit_msb": 7,
                    "description": "Bit 0 = Lane0 alingment marker lock... bit 7 = Lane 7 alignment marker lock. Note: Bits 7:4 are reserved for 40GBASE-R.",
                    "mode": "RO",
                    "name": "EthPcsLaneAlignMkrLock"
                }
            ]
        },
        "mac_csr.EthChPcsLaneAlignStat4": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_PCS_LANE_ALIGN_MARKER_LOCK",
                    "bit_lsb": 0,
                    "bit_msb": 11,
                    "description": "Bit 0 = Lane8 alignment marker lock, ... bit 11 = lane19 alignment marker lock. Note: Bits 11:0 are reserved for 40GBASE-R. ",
                    "mode": "RO",
                    "name": "EthPcsLaneAlignMkrLock"
                }
            ]
        },
        "mac_csr.EthChPcsLaneMap": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_PCS_LANE_MAP",
                    "bit_lsb": 0,
                    "bit_msb": 4,
                    "description": "Lane Mapping register for PCS lane x. ",
                    "mode": "RO",
                    "name": "EthPcsLaneMap"
                }
            ]
        },
        "mac_csr.EthChPcsSpeedAbility": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_PCS_SPEED_100G_CAPABLE",
                    "bit_lsb": 8,
                    "bit_msb": 8,
                    "description": "Only bit 8 is set for 100GBASE-R, inherited from global configuration.",
                    "mode": "RO",
                    "name": "EthPcsSpeed100GCapable"
                },
                {
                    "altname": "ETH_PCS_SPEED_40G_CAPABLE",
                    "bit_lsb": 7,
                    "bit_msb": 7,
                    "description": "Only bit 7 is set for 40GBASE-R, inherited from global configuration.",
                    "mode": "RO",
                    "name": "EthPcsSpeed40GCapable"
                },
                {
                    "altname": "ETH_PCS_SPEED_10PASS_TS_2BASE_TL_CAPABLE",
                    "bit_lsb": 1,
                    "bit_msb": 1,
                    "description": "Inherited from global configuration.",
                    "mode": "RO",
                    "name": "EthPcsSpeed10PassTs2BaseTlCapable"
                },
                {
                    "altname": "ETH_PCS_SPEED_10G_CAPABLE",
                    "bit_lsb": 0,
                    "bit_msb": 0,
                    "description": "Only bit 0 is set for 10GBASE-R, inherited from global configuration.",
                    "mode": "RO",
                    "name": "EthPcsSpeed10GCapable"
                }
            ]
        },
        "mac_csr.EthChPcsStatus1": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_PCS_FAULT",
                    "bit_lsb": 7,
                    "bit_msb": 7,
                    "description": "Fault detected. not available, always 0.",
                    "mode": "RO",
                    "name": "EthPcsFault"
                },
                {
                    "altname": "ETH_PCS_RCV_LINK_STATUS",
                    "bit_lsb": 2,
                    "bit_msb": 2,
                    "description": "Receive link status. 1=Link up, 0=link down. Latched Low, cleared on read.",
                    "mode": "RO",
                    "name": "EthPcsRcvLinkStatus"
                },
                {
                    "altname": "ETH_PCS_LOW_POWER_ABILITY",
                    "bit_lsb": 1,
                    "bit_msb": 1,
                    "description": "Low power ability. not available, always 0.",
                    "mode": "RO",
                    "name": "EthPcsLowPowerAble"
                }
            ]
        },
        "mac_csr.EthChPcsStatus2": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_PCS_DEV_PRESENT",
                    "bit_lsb": 14,
                    "bit_msb": 15,
                    "description": "Device present. 10=device responding at this address.",
                    "mode": "RO",
                    "name": "EthPcsDevPresent"
                },
                {
                    "altname": "ETH_PCS_100GBASE_R_CAPABLE",
                    "bit_lsb": 5,
                    "bit_msb": 5,
                    "description": "100GBASE-R capable.",
                    "mode": "RO",
                    "name": "EthPcs100GBaseRCapable"
                },
                {
                    "altname": "ETH_PCS_40GBASE_R_CAPABLE",
                    "bit_lsb": 4,
                    "bit_msb": 4,
                    "description": "40GBASE-R capable.",
                    "mode": "RO",
                    "name": "EthPcs40GBaseRCapable"
                },
                {
                    "altname": "ETH_PCS_10GBASE_T_CAPABLE",
                    "bit_lsb": 3,
                    "bit_msb": 3,
                    "description": "10GBASE-T capable.",
                    "mode": "RO",
                    "name": "EthPcs10GBaseTCapable"
                },
                {
                    "altname": "ETH_PCS_10GBASE_W_CAPABLE",
                    "bit_lsb": 2,
                    "bit_msb": 2,
                    "description": "10GBASE-W capable.",
                    "mode": "RO",
                    "name": "EthPcs10GBaseWCapable"
                },
                {
                    "altname": "ETH_PCS_10GBASE_X_CAPABLE",
                    "bit_lsb": 1,
                    "bit_msb": 1,
                    "description": "10GBASE-X capable.",
                    "mode": "RO",
                    "name": "EthPcs10GBaseXCapable"
                },
                {
                    "altname": "ETH_PCS_10GBASE_R_CAPABLE",
                    "bit_lsb": 0,
                    "bit_msb": 0,
                    "description": "10GBASE-R capable.",
                    "mode": "RO",
                    "name": "EthPcs10GBaseRCapable"
                }
            ]
        },
        "mac_csr.EthChPcsTestErrCnt": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_PCS_TEST_ERR_CNT",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "Test-pattern error counter. (Non-Rollover clear on read) ",
                    "mode": "RO",
                    "name": "EthPcsTestErrCnt"
                }
            ]
        },
        "mac_csr.EthChPcsTestPatSeedData": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_PCS_TEST_PAT_SEED_DATA",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "16 bits of Test Pattern Seed data.",
                    "mode": "RW",
                    "name": "EthPcsTestPatSeedData"
                }
            ]
        },
        "mac_csr.EthChPcsTestPatSeedDataH": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_PCS_TEST_PAT_SEED_DATA_H",
                    "bit_lsb": 0,
                    "bit_msb": 9,
                    "description": "Upper 10 bits of Test Pattern Seed data.",
                    "mode": "RW",
                    "name": "EthPcsTestPatSeedDataH"
                }
            ]
        },
        "mac_csr.EthCmdConfig": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_FORCE_SEND_RF",
                    "bit_lsb": 29,
                    "bit_msb": 29,
                    "description": "Force send remote fault. (FIXME: undocumented, need description from MTIP)",
                    "mode": "RW",
                    "name": "EthForceSendRf"
                },
                {
                    "altname": "ETH_FORCE_SEND_LF",
                    "bit_lsb": 28,
                    "bit_msb": 28,
                    "description": "Force send local fault. (FIXME: undocumented, need description from MTIP)",
                    "mode": "RW",
                    "name": "EthForceSendLf"
                },
                {
                    "altname": "ETH_DISABLE_FLT_HDL",
                    "bit_lsb": 27,
                    "bit_msb": 27,
                    "description": "Disable default fault handling. (FIXME: undocumented, need description from MTIP)",
                    "mode": "RW",
                    "name": "EthDisableFltHdl"
                },
                {
                    "altname": "ETH_TX_FLUSH",
                    "bit_lsb": 22,
                    "bit_msb": 22,
                    "description": "Egress Flush Enable. If set to '1', the Core reads out the Tx FIFO and drops the data (data is not sent out on the line). The associated pause signals (link pause or priority flow control) are masked.",
                    "mode": "RW",
                    "name": "EthTxFlush"
                },
                {
                    "altname": "ETH_RX_SFD_ANY",
                    "bit_lsb": 21,
                    "bit_msb": 21,
                    "description": "Enables, when set, that any character is allowed at the SFD position of the preamble and the frame will be accepted. Note that when this bit is set, no alignment error can occur. If cleared (default) the frame is accepted only if the 8th byte of the preamble contains the SFD value 0xd5. If another value is received, the frame is discarded and the alignment error counter increments.",
                    "mode": "RW",
                    "name": "EthRxSfdAny"
                },
                {
                    "altname": "ETH_PAUSE_PFC_COMP",
                    "bit_lsb": 20,
                    "bit_msb": 20,
                    "description": "Link Pause Compatibility with PFC Mode. If set to '1', Pause frames in legacy pause mode are processed similar to PFC frames in PFC mode, i.e. the transmit path is not paused by incoming Pause frames, only the pause status ff_rx_pfc_xoff<n>(0) is asserted as long as the internal pause timer has not expired. If set to '0' (Reset value), Pause frames are processed as described in FIXME on page FIXME. This bit is relevant only when PFC_MODE=0.",
                    "mode": "RW",
                    "name": "EthPausePfcComp"
                },
                {
                    "altname": "ETH_PFC_MODE",
                    "bit_lsb": 19,
                    "bit_msb": 19,
                    "description": "Priority Flow Control Mode. If set to '1', the Core generates and processes PFC control frames according to the Priority Flow Control Interface signals. If set to'0' (Reset Value), the Core operates in legacy Pause Frame mode and generates and processes standard Pause Frames (see FIXME).",
                    "mode": "RW",
                    "name": "EthPfcMode"
                },
                {
                    "altname": "ETH_RS_COL_CNT_EXT",
                    "bit_lsb": 18,
                    "bit_msb": 18,
                    "description": "If set to '1', sets the reconciliation sublayer parameter col_cnt to the value set in the global register WAN_RS_COL_CNT. When disabled (0), the col_cnt is set as defined by the IEEE 802.3ae standard (128) ignoring the global setting.",
                    "mode": "RW",
                    "name": "EthRsColCntExt"
                },
                {
                    "altname": "ETH_NO_LENGTH_CHECK",
                    "bit_lsb": 17,
                    "bit_msb": 17,
                    "description": "Disable Payload Length Check. If set to '0' (Reset value), the Core checks the frame's payload length with the frame's Length/Type field. If set to '1', the payload length check is disabled.",
                    "mode": "RW",
                    "name": "EthNoLgthCheck"
                },
                {
                    "altname": "ETH_SEND_IDLE",
                    "bit_lsb": 16,
                    "bit_msb": 16,
                    "description": "Force Idle Generation. If set to '1', the MAC permanently sends XL/CGMII Idle sequences even when faults are received.",
                    "mode": "RW",
                    "name": "EthSendIdle"
                },
                {
                    "altname": "ETH_PHY_TX_ENABLE",
                    "bit_lsb": 15,
                    "bit_msb": 15,
                    "description": "Enable PHY Transmit. If set to '1', the signal phy_txena<n> is set to '1'. If set to '0' (Reset value), the signal phy_txena<n> is set to '0'.",
                    "mode": "RW",
                    "name": "EthPhyTxEna"
                },
                {
                    "altname": "ETH_RX_ERR_DISCARD",
                    "bit_lsb": 14,
                    "bit_msb": 14,
                    "description": "Enable Receive Errored Frame Discard. If set to '1', any frame received with an error is discarded in the Core and not forwarded to the client interface. If set to '0' (Reset value), errored frames are forwarded to the client interface with ff_rx_err asserted. Note: Not available in this implementation.",
                    "mode": "RW",
                    "name": "EthRxErrDiscard"
                },
                {
                    "altname": "ETH_CMD_FRAME_ENA",
                    "bit_lsb": 13,
                    "bit_msb": 13,
                    "description": "Enable Reception of all Command Frames. If set to '1', all command frames are accepted. If set to '0' (Reset Value), only Pause frames are accepted and all other command frames are rejected. A command or control frame is defined as having a type of 0x8808 and an opcode field that does not match the pause opcode.",
                    "mode": "RW",
                    "name": "EthCmdFrameEna"
                },
                {
                    "altname": "ETH_SW_RESET",
                    "bit_lsb": 12,
                    "bit_msb": 12,
                    "description": "Self-Clearing Software Reset. When written with '1', all Statistics Counters are reset to 0.",
                    "mode": "RW",
                    "name": "EthSwReset"
                },
                {
                    "altname": "ETH_TX_PAD_EN",
                    "bit_lsb": 11,
                    "bit_msb": 11,
                    "description": "Enable Transmit Padding. If set to '1' (Reset value), the MAC transmit logic inserts padding bytes to always generate frames with a minimum length of 64 bytes with CRC or 60 bytes without CRC. If set to '0', the MAC transmit logic can send unpadded frames. Note: If TX_PAD_EN=0 in 40G and 100G mode of operation, the MAC does not insert padding bytes for frames equal or larger than 32 bytes, frames smaller than 32 bytes are always padded. If TX_PAD_EN=0 in 10G mode of operation, the MAC can send short unpadded frames of any size.",
                    "mode": "RW",
                    "name": "EthTxPadEn"
                },
                {
                    "altname": "ETH_LOOPBACK_EN",
                    "bit_lsb": 10,
                    "bit_msb": 10,
                    "description": "Enable PHY Interface Loopback. If set to '1', the signal loop_ena<n> is set to '1'. If set to '0' (Reset value), the signal loop_ena<n> is set to '0'.",
                    "mode": "RW",
                    "name": "EthLoopBackEn"
                },
                {
                    "altname": "ETH_TX_ADDR_INSERT",
                    "bit_lsb": 9,
                    "bit_msb": 9,
                    "description": "Set Source MAC Address on Transmit. If set to '1', the MAC overwrites the source MAC address received from the client interface with the MAC address programmed in registers MAC_ADDR_0 and MAC_ADDR_1 . If set to '0' (Reset value), the source MAC address from the client interface is transmitted unmodified to the line.",
                    "mode": "RW",
                    "name": "EthTxAddrIns"
                },
                {
                    "altname": "ETH_PAUSE_IGNORE",
                    "bit_lsb": 8,
                    "bit_msb": 8,
                    "description": "Ignore Pause Frame Quanta. If set to '1', received pause frames are ignored by the MAC. If set to '0' (Reset value), the transmit process is stopped for the amount of time specified in the pause quanta received within a pause frame.\nThis bit is relevant only when PFC_MODE=0.",
                    "mode": "RW",
                    "name": "EthPauseIgnore"
                },
                {
                    "altname": "ETH_PAUSE_FWD",
                    "bit_lsb": 7,
                    "bit_msb": 7,
                    "description": "Terminate / Forward Pause Frames. If set to '1', pause frames are forwarded to the user application. If set to '0' (Reset value), pause frames are terminated and discarded within the MAC.",
                    "mode": "RW",
                    "name": "EthPauseFwd"
                },
                {
                    "altname": "ETH_CRC_FWD",
                    "bit_lsb": 6,
                    "bit_msb": 6,
                    "description": "Terminate / Forward Received CRC. If set to '1', the CRC field of received frames is forwarded with the frame to the user application. If set to '0' (Reset value), the CRC field is stripped from the frame.\nNote: If padding (Bit PAD_EN set to '1') is enabled, CRC_FWD is ignored.",
                    "mode": "RW",
                    "name": "EthCrcFwd"
                },
                {
                    "altname": "ETH_PAD_EN",
                    "bit_lsb": 5,
                    "bit_msb": 5,
                    "description": "Enable Frame Padding Removal in receive path. If set to '1', padding is removed before the frame is conveyed to the MAC client application. If set to '0' (Reset value), no padding is removed on receive by the MAC.\nNote: Not available in this implementation.",
                    "mode": "RW",
                    "name": "EthPadEn"
                },
                {
                    "altname": "ETH_PROMISCUOUS_EN",
                    "bit_lsb": 4,
                    "bit_msb": 4,
                    "description": "Enable MAC Promiscuous Operation. If set to '1', all frames are received without any MAC address filtering. If set to '0' (Reset value), unicast frames with a destination address not matching the Core MAC address (programmed in registers MAC_ADDR_0 and MAC_ADDR_1) are rejected.",
                    "mode": "RW",
                    "name": "EthPromisEn"
                },
                {
                    "altname": "ETH_WAN_MODE",
                    "bit_lsb": 3,
                    "bit_msb": 3,
                    "description": "Enable WAN Mode. Sets WAN mode (1) or LAN mode (0, default) of operation.\nNote: When changing the mode, verify correct setting of the transmit Inter-Packet-Gap (IPG) in register TX_IPG_LENGTH.\nNote: This bit is only available in 10G mode of operation. It is reserved in 40G and 100G mode of operation.",
                    "mode": "RW",
                    "name": "EthWanMode"
                },
                {
                    "altname": "ETH_RX_ENA",
                    "bit_lsb": 1,
                    "bit_msb": 1,
                    "description": "MAC Receive Path Enable. Should be set to '1' to enable the MAC receive path, should be set to '0' (Reset value) to disable the MAC receive path.",
                    "mode": "RW",
                    "name": "EthRxEna"
                },
                {
                    "altname": "ETH_TX_ENA",
                    "bit_lsb": 0,
                    "bit_msb": 0,
                    "description": "MAC Transmit Path Enable. Should be set to '1' to enable the MAC transmit path, should be set to '0' (Reset value) to disable the MAC transmit path.",
                    "mode": "RW",
                    "name": "EthTxEna"
                }
            ]
        },
        "mac_csr.EthCreditReg": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_CREDIT_REG",
                    "bit_lsb": 0,
                    "bit_msb": 7,
                    "description": "Current credit register value (for debug purpose only).",
                    "mode": "RO",
                    "name": "EthCreditReg"
                }
            ]
        },
        "mac_csr.EthCreditTrigger": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_CREDIT_TRIGGER",
                    "bit_lsb": 0,
                    "bit_msb": 0,
                    "description": "Self-clearing Credit Reset. When written with a '1', this bit will trigger a reset of the RX application FIFO and will cause the INIT_CREDIT value to be loaded into the credit register. This bit should be programmed before enabling the MAC and after writing the initial credit value.",
                    "mode": "RW",
                    "name": "EthCreditTrigger"
                }
            ]
        },
        "mac_csr.EthFecAbility": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_FEC_ERR_INDICATION_ABLE",
                    "bit_lsb": 1,
                    "bit_msb": 1,
                    "description": "Set to '1' when the Core implements the FEC functions to indicate that the FEC is able to report FEC decoding errors to the PCS Layer. Set to '0' when the Core does not implement the FEC functions.",
                    "mode": "RO",
                    "name": "EthFecErrIndicationAble"
                },
                {
                    "altname": "ETH_FEC_ABLE",
                    "bit_lsb": 0,
                    "bit_msb": 0,
                    "description": "Set to '1' when the Core implements the FEC functions, set to '0' when the Core does not implement the FEC functions.",
                    "mode": "RO",
                    "name": "EthFecAble"
                }
            ]
        },
        "mac_csr.EthFecBlkCntHi": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_FEC_BLOCKS_COUNT_HI",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "Bits 15:0 of the register are bits 31:16 of the counter.(clear on read)",
                    "mode": "RO",
                    "name": "EthFecBlocksCountHi"
                }
            ]
        },
        "mac_csr.EthFecBlkCntLo": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_FEC_BLOCKS_COUNT_LO",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "Bits 15:0 of the register are bits 15:0 of the counter.(clear on read)",
                    "mode": "RO",
                    "name": "EthFecBlocksCountLo"
                }
            ]
        },
        "mac_csr.EthFecControl": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_FEC_ERR_INDICATION_ENABLE",
                    "bit_lsb": 1,
                    "bit_msb": 1,
                    "description": "Should be set to '1' to configure the FEC decoder to indicate errors to the PCS layer. Should be set to '0' (Reset value) to configure the FEC decoder to not indicate errors to the PCS layer.",
                    "mode": "RW",
                    "name": "EthFecErrIndicationEnble"
                },
                {
                    "altname": "ETH_FEC_ENABLE",
                    "bit_lsb": 0,
                    "bit_msb": 0,
                    "description": "Should be set to '1' to force the Core FEC functions. Should be set to '0' (Reset value) to control the Core FEC functions by the autonegotiation core.",
                    "mode": "RW",
                    "name": "EthFecEnable"
                }
            ]
        },
        "mac_csr.EthFecKRCtl": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_FEC_TRAINING_ENABLE",
                    "bit_lsb": 1,
                    "bit_msb": 1,
                    "description": "Should be set to '1' to enable the Base-R startup protocol. Should be set to '0' (Reset value) to disable the Base-R startup protocol.",
                    "mode": "RW",
                    "name": "EthFecTrainingEnable"
                },
                {
                    "altname": "ETH_FEC_RESTART_TRAINING",
                    "bit_lsb": 0,
                    "bit_msb": 0,
                    "description": "Self Clearing Bit, should be set to '1' to restart the Base-R startup protocol. When '0' (Reset value) normal operation is enabled.",
                    "mode": "RW",
                    "name": "EthFecRestartTraining"
                }
            ]
        },
        "mac_csr.EthFecKRLdCoef": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_FEC_LD_PRESET",
                    "bit_lsb": 13,
                    "bit_msb": 13,
                    "description": "Set '1' to preset the device transmitter coefficients, set to '0' to enable normal operation.",
                    "mode": "RW",
                    "name": "EthFecLdPreset"
                },
                {
                    "altname": "ETH_FEC_LD_INITIALIZE",
                    "bit_lsb": 12,
                    "bit_msb": 12,
                    "description": "Set '1' to initialize the device transmitter coefficients, set to '0' to enable normal operation.",
                    "mode": "RW",
                    "name": "EthFecLdInitialize"
                },
                {
                    "altname": "ETH_FEC_LD_COEF_P1_UPDATE",
                    "bit_lsb": 4,
                    "bit_msb": 5,
                    "description": "Coef (+1) Update: 11 = reserved, 01 = increment, 10 = decrement, 00 = hold.",
                    "mode": "RW",
                    "name": "EthFecLdCoefP1Update"
                },
                {
                    "altname": "ETH_FEC_LD_COEF_0_UPDATE",
                    "bit_lsb": 2,
                    "bit_msb": 3,
                    "description": "Coef (0) Update: 11 = reserved, 01 = increment, 10 = decrement, 00 = hold.",
                    "mode": "RW",
                    "name": "EthFecLdCoef0Update"
                },
                {
                    "altname": "ETH_FEC_LD_COEF_M1_UPDATE",
                    "bit_lsb": 0,
                    "bit_msb": 1,
                    "description": "Coef (-1) Update: 11 = reserved, 01 = increment, 10 = decrement, 00 = hold.",
                    "mode": "RW",
                    "name": "EthFecLdCoefM1Update"
                }
            ]
        },
        "mac_csr.EthFecKRLpCoef": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_FEC_LP_PRESET",
                    "bit_lsb": 13,
                    "bit_msb": 13,
                    "description": "Should be set '1' to preset the transmitter coefficients, should be to '0' to enable normal operation.",
                    "mode": "RO",
                    "name": "EthFecLpPreset"
                },
                {
                    "altname": "ETH_FEC_LP_INITIALIZE",
                    "bit_lsb": 12,
                    "bit_msb": 12,
                    "description": "Should be set '1' to initialize the transmitter coefficients, should be to '0' to enable normal operation.",
                    "mode": "RO",
                    "name": "EthFecLpInitialize"
                },
                {
                    "altname": "ETH_FEC_LP_COEF_P1_UPDATE",
                    "bit_lsb": 4,
                    "bit_msb": 5,
                    "description": "Coef (+1) Update: 11 = reserved, 01 = increment, 10 = decrement, 00 = hold.",
                    "mode": "RO",
                    "name": "EthFecLpCoefP1Update"
                },
                {
                    "altname": "ETH_FEC_LP_COEF_0_UPDATE",
                    "bit_lsb": 2,
                    "bit_msb": 3,
                    "description": "Coef (0) Update: 11 = reserved, 01 = increment, 10 = decrement, 00 = hold.",
                    "mode": "RO",
                    "name": "EthFecLpCoef0Update"
                },
                {
                    "altname": "ETH_FEC_LP_COEF_M1_UPDATE",
                    "bit_lsb": 0,
                    "bit_msb": 1,
                    "description": "Coef (-1) Update: 11 = reserved, 01 = increment, 10 = decrement, 00 = hold.",
                    "mode": "RO",
                    "name": "EthFecLpCoefM1Update"
                }
            ]
        },
        "mac_csr.EthFecKRStatus": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_FEC_SIGNAL_DETECTION",
                    "bit_lsb": 15,
                    "bit_msb": 15,
                    "description": "When set to '1', indicates that the training process is complete.",
                    "mode": "RO",
                    "name": "EthFecSignalDetection"
                },
                {
                    "altname": "ETH_FEC_TRAINING_FAIL",
                    "bit_lsb": 3,
                    "bit_msb": 3,
                    "description": "When set to '0', indicates that Training failure has not been detected. When set to '1', indicates that Training failure has been detected.",
                    "mode": "RO",
                    "name": "EthFecTrainingFail"
                },
                {
                    "altname": "ETH_FEC_START_UP_STATUS",
                    "bit_lsb": 2,
                    "bit_msb": 2,
                    "description": "When set to '0', indicates that the startup protocol is completed. When set to '1', indicates that the startup protocol is in progress.",
                    "mode": "RO",
                    "name": "EthFecStartUpStatus"
                },
                {
                    "altname": "ETH_FEC_FRAME_LOCK",
                    "bit_lsb": 1,
                    "bit_msb": 1,
                    "description": "When set to '0', indicates that Training frame delineation is not detected. When set to '1', indicates that Training frame delineation is detected.",
                    "mode": "RO",
                    "name": "EthFecFrameLock"
                },
                {
                    "altname": "ETH_FEC_RCVR_STATUS",
                    "bit_lsb": 0,
                    "bit_msb": 0,
                    "description": "When set to '0', indicates that the Receiver training is proceeding. When set to '1' by the application, indicates that the Receiver is trained and is ready to receive data. Note: this bit is writable, which differs from the corresponding notion in IEEE 802.3 Clause 45.2.1.77 for MMD register 1.151) as the application has to decide when the local device is trained. Writing this bit sets the mr_trained variable allowing the training statemachine to proceed (see IEEE 802.3 Clause 72.6.10.3.1).",
                    "mode": "RW",
                    "name": "EthFecRcvrStatus"
                }
            ]
        },
        "mac_csr.EthFecStatus": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_FEC_LOCKED_ODD",
                    "bit_lsb": 1,
                    "bit_msb": 1,
                    "description": "Set to '1' when the FEC decoder has locked on the block boundary on virtual lane 1. Set to '0' otherwise. Note: This bit is only valid in 100G mode of operation.",
                    "mode": "RO",
                    "name": "EthFecLockedOdd"
                },
                {
                    "altname": "ETH_FEC_LOCKED",
                    "bit_lsb": 0,
                    "bit_msb": 0,
                    "description": "Set to '1' when the FEC decoder has locked on the block boundary. Set to '0' otherwise. Note: In 100G mode of operation, this bit refers to virtual lane 0.",
                    "mode": "RO",
                    "name": "EthFecLocked"
                }
            ]
        },
        "mac_csr.EthFrmLength": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_FRAME_LENGTH",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "Maximum supported frame length. The MAC supports any frame size up to 16352 bytes (0x3fe0). Typical settings are 1518 for standard. Set to 1536 after Reset. Bits 31:16 are unused and always set to '0'.",
                    "mode": "RW",
                    "name": "EthFrmLength"
                }
            ]
        },
        "mac_csr.EthHashTableLoad": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_HASH_TABLE_MC_EN",
                    "bit_lsb": 8,
                    "bit_msb": 8,
                    "description": "Bit 8 enables (1) or disables (0) multicast frame reception for the entry.",
                    "mode": "WO",
                    "name": "EthHashTableMcEn"
                },
                {
                    "altname": "ETH_HASH_TABLE_ADDR",
                    "bit_lsb": 0,
                    "bit_msb": 5,
                    "description": "Bits 5:0 specify the hash table address (code).",
                    "mode": "WO",
                    "name": "EthHashTableAddr"
                }
            ]
        },
        "mac_csr.EthInitCredit": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_INIT_CREDIT",
                    "bit_lsb": 0,
                    "bit_msb": 7,
                    "description": "Specifies the initial/max credit value to be loaded. Note: The initial credit value must be set to '8' when operating in 10G mode of operation, '7' when operating in 40G mode of operation, and '2' when operating in 100G mode of operation.",
                    "mode": "RW",
                    "name": "EthInitCredit"
                }
            ]
        },
        "mac_csr.EthMacAddr0": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_MAC_ADDR_0",
                    "bit_lsb": 0,
                    "bit_msb": 31,
                    "description": "The lower 32-Bit of the 48-Bit MAC Address. Bit 0 is LSB.",
                    "mode": "RW",
                    "name": "EthMacAddr0"
                }
            ]
        },
        "mac_csr.EthMacAddr1": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_MAC_ADDR_1",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "The upper 16-Bit of the 48-Bit MAC Address. Bit 0 is Bit 32 of MAC address. Bits 31:16 are unused and always set to '0'.",
                    "mode": "RW",
                    "name": "EthMacAddr1"
                }
            ]
        },
        "mac_csr.EthMdioCfgStatus": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_MDIO_CLK_DIVISOR",
                    "bit_lsb": 7,
                    "bit_msb": 15,
                    "description": "MDIO clock divisor. A value of 5 to 511 can be set. The frequency is reg_clk/((2*divisor)+1). The reset default is defined by the synthesis package setting MDIO_CLK_DIV. Setting the divisor to 0 disables MDC.",
                    "mode": "RW",
                    "name": "EthMdioClkDivisor"
                },
                {
                    "altname": "ETH_ENABLE_CLAUSE_45",
                    "bit_lsb": 6,
                    "bit_msb": 6,
                    "description": "Enable Clause 45 support. If '0', Clause 22 transactions are used. If '1' (default), Clause 45 transactions are used.",
                    "mode": "RW",
                    "name": "EthEnableClause45"
                },
                {
                    "altname": "ETH_MDIO_DISABLE_PREAMBLE",
                    "bit_lsb": 5,
                    "bit_msb": 5,
                    "description": "Disable Preamble (if '1').",
                    "mode": "RW",
                    "name": "EthDisPreamble"
                },
                {
                    "altname": "ETH_MDIO_HOLD_TIME",
                    "bit_lsb": 2,
                    "bit_msb": 4,
                    "description": "MDIO hold time setting as per table.",
                    "mode": "RW",
                    "name": "EthMdioHoldTime"
                },
                {
                    "altname": "ETH_MDIO_READ_ERROR",
                    "bit_lsb": 1,
                    "bit_msb": 1,
                    "description": "MDIO read error (read only bit). If '1', the last read transaction had no response from a PHY and the data read could be invalid. This can happen, if the PHY address does not match any PHY that is available on the MDIO bus.",
                    "mode": "RO",
                    "name": "EthMdioRdError"
                },
                {
                    "altname": "ETH_MDIO_BUSY",
                    "bit_lsb": 0,
                    "bit_msb": 0,
                    "description": "MDIO busy (read only bit). If '1' an MDIO transaction is currently ongoing. If '0' the application can access the other registers.",
                    "mode": "RO",
                    "name": "EthMdioBusy"
                }
            ]
        },
        "mac_csr.EthMdioCommand": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_MDIO_READ_CMD",
                    "bit_lsb": 15,
                    "bit_msb": 15,
                    "description": "If written with '1', a read transaction is initiated..",
                    "mode": "RW",
                    "name": "EthMdioRdCmd"
                },
                {
                    "altname": "ETH_MDIO_READ_CMD_CL45",
                    "bit_lsb": 14,
                    "bit_msb": 14,
                    "description": "If written with '1', a read with address post-increment transaction is initiated. Only for Clause 45 transactions.",
                    "mode": "RW",
                    "name": "EthMdioRdCmdCl45"
                },
                {
                    "altname": "ETH_MDIO_PORTPHY_ADDR",
                    "bit_lsb": 5,
                    "bit_msb": 9,
                    "description": "Port address(clause 45) || PHY address(clause 22).",
                    "mode": "RW",
                    "name": "EthMdioPortPhyAddr"
                },
                {
                    "altname": "ETH_MDIO_DEVREG_ADDR",
                    "bit_lsb": 0,
                    "bit_msb": 4,
                    "description": "Device address(clause 45) || Register address(clause 22).",
                    "mode": "RW",
                    "name": "EthMdioDevRegAddr"
                }
            ]
        },
        "mac_csr.EthMdioData": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_MDIO_BUSY",
                    "bit_lsb": 31,
                    "bit_msb": 31,
                    "description": "MDIO busy as found in MDIO_STATUS.0. The value read is invalid as long as Bit 31 is '1'. (read only bit).",
                    "mode": "RO",
                    "name": "EthMdioBusy"
                },
                {
                    "altname": "ETH_MDIO_DATA",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "16 bit data word When written: Initiates a write transaction to the PHY. The COMMAND register must have been initialized. The busy status bit will be set immediately and cleared when the write transaction has finished. When read: Returns the data read from the PHY register after a read transaction has been completed (initiated by writing a '1' to Bit 15 or Bit 14 of the COMMAND register).",
                    "mode": "RW",
                    "name": "EthMdioData"
                }
            ]
        },
        "mac_csr.EthMdioRegAddr": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_MDIO_REG_ADDR",
                    "bit_lsb": 0,
                    "bit_msb": 31,
                    "description": "Address of register within Clause 45 PHY device to read from or write to. After writing this register an address-write transaction will be initiated to set the PHY's internal address register to the value given. The COMMAND register must have been initialized before the first write to this register. Note: When a read post increment access is issued this register will not change, only the register inside the PHY device is incremented. The register is relevant only when Clause 45 mode has been enabled. It should not be used when Clause 22 mode is active.",
                    "mode": "WO",
                    "name": "EthMdioRegAddr"
                }
            ]
        },
        "mac_csr.EthModeCtlSeg": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_SEGMENT_MODE_CTL",
                    "bit_lsb": 0,
                    "bit_msb": 23,
                    "description": "Segment mode control (2 bits per segment) SEG0=1:0, SEG1=3:2...",
                    "mode": "RW",
                    "name": "EthSegmentModeCtl"
                }
            ]
        },
        "mac_csr.EthPauseQuantaCL01": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_PAUSE_QUANTA_CL1",
                    "bit_lsb": 16,
                    "bit_msb": 31,
                    "description": "CL1_PAUSE_QUANTA. Value to be sent for the PFC quanta value for that class when a class XOFF is triggered.",
                    "mode": "RW",
                    "name": "EthPauseQuantaCL1"
                },
                {
                    "altname": "ETH_PAUSE_QUANTA_CL0",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "CL0_PAUSE_QUANTA. Value to be sent for the PFC quanta value for that class when a class XOFF is triggered. When normal pause mode is enabled, CL0_PAUSE_QUANTA is used.",
                    "mode": "RW",
                    "name": "EthPauseQuantaCL0"
                }
            ]
        },
        "mac_csr.EthPauseQuantaCL23": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_PAUSE_QUANTA_CL3",
                    "bit_lsb": 16,
                    "bit_msb": 31,
                    "description": "CL3_PAUSE_QUANTA. Value to be sent for the PFC quanta value for that class when a class XOFF is triggered.",
                    "mode": "RW",
                    "name": "EthPauseQuantaCL3"
                },
                {
                    "altname": "ETH_PAUSE_QUANTA_CL2",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "CL2_PAUSE_QUANTA. Value to be sent for the PFC quanta value for that class when a class XOFF is triggered.",
                    "mode": "RW",
                    "name": "EthPauseQuantaCL2"
                }
            ]
        },
        "mac_csr.EthPauseQuantaCL45": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_PAUSE_QUANTA_CL5",
                    "bit_lsb": 16,
                    "bit_msb": 31,
                    "description": "CL5_PAUSE_QUANTA. Value to be sent for the PFC quanta value for that class when a class XOFF is triggered.",
                    "mode": "RW",
                    "name": "EthPauseQuantaCL5"
                },
                {
                    "altname": "ETH_PAUSE_QUANTA_CL4",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "CL4_PAUSE_QUANTA. Value to be sent for the PFC quanta value for that class when a class XOFF is triggered.",
                    "mode": "RW",
                    "name": "EthPauseQuantaCL4"
                }
            ]
        },
        "mac_csr.EthPauseQuantaCL67": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_PAUSE_QUANTA_CL7",
                    "bit_lsb": 16,
                    "bit_msb": 31,
                    "description": "CL7_PAUSE_QUANTA. Value to be sent for the PFC quanta value for that class when a class XOFF is triggered.",
                    "mode": "RW",
                    "name": "EthPauseQuantaCL7"
                },
                {
                    "altname": "ETH_PAUSE_QUANTA_CL6",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "CL6_PAUSE_QUANTA. Value to be sent for the PFC quanta value for that class when a class XOFF is triggered.",
                    "mode": "RW",
                    "name": "EthPauseQuantaCL6"
                }
            ]
        },
        "mac_csr.EthPrbsEnable": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_PRBS9_EN_SEG11",
                    "bit_lsb": 23,
                    "bit_msb": 23,
                    "description": "Enable PRBS9 generator on lane 11.",
                    "mode": "RW",
                    "name": "EthPrbs9EnSeg11"
                },
                {
                    "altname": "ETH_PRBS9_EN_SEG10",
                    "bit_lsb": 22,
                    "bit_msb": 22,
                    "description": "Enable PRBS9 generator on lane 10.",
                    "mode": "RW",
                    "name": "EthPrbs9EnSeg10"
                },
                {
                    "altname": "ETH_PRBS9_EN_SEG9",
                    "bit_lsb": 21,
                    "bit_msb": 21,
                    "description": "Enable PRBS9 generator on lane 9.",
                    "mode": "RW",
                    "name": "EthPrbs9EnSeg9"
                },
                {
                    "altname": "ETH_PRBS9_EN_SEG8",
                    "bit_lsb": 20,
                    "bit_msb": 20,
                    "description": "Enable PRBS9 generator on lane 8.",
                    "mode": "RW",
                    "name": "EthPrbs9EnSeg8"
                },
                {
                    "altname": "ETH_PRBS9_EN_SEG7",
                    "bit_lsb": 19,
                    "bit_msb": 19,
                    "description": "Enable PRBS9 generator on lane 7.",
                    "mode": "RW",
                    "name": "EthPrbs9EnSeg7"
                },
                {
                    "altname": "ETH_PRBS9_EN_SEG6",
                    "bit_lsb": 18,
                    "bit_msb": 18,
                    "description": "Enable PRBS9 generator on lane 6.",
                    "mode": "RW",
                    "name": "EthPrbs9EnSeg6"
                },
                {
                    "altname": "ETH_PRBS9_EN_SEG5",
                    "bit_lsb": 17,
                    "bit_msb": 17,
                    "description": "Enable PRBS9 generator on lane 5.",
                    "mode": "RW",
                    "name": "EthPrbs9EnSeg5"
                },
                {
                    "altname": "ETH_PRBS9_EN_SEG4",
                    "bit_lsb": 16,
                    "bit_msb": 16,
                    "description": "Enable PRBS9 generator on lane 4.",
                    "mode": "RW",
                    "name": "EthPrbs9EnSeg4"
                },
                {
                    "altname": "ETH_PRBS9_EN_SEG3",
                    "bit_lsb": 15,
                    "bit_msb": 15,
                    "description": "Enable PRBS9 generator on lane 3.",
                    "mode": "RW",
                    "name": "EthPrbs9EnSeg3"
                },
                {
                    "altname": "ETH_PRBS9_EN_SEG2",
                    "bit_lsb": 14,
                    "bit_msb": 14,
                    "description": "Enable PRBS9 generator on lane 2.",
                    "mode": "RW",
                    "name": "EthPrbs9EnSeg2"
                },
                {
                    "altname": "ETH_PRBS9_EN_SEG1",
                    "bit_lsb": 13,
                    "bit_msb": 13,
                    "description": "Enable PRBS9 generator on lane 1.",
                    "mode": "RW",
                    "name": "EthPrbs9EnSeg1"
                },
                {
                    "altname": "ETH_PRBS9_EN_SEG0",
                    "bit_lsb": 12,
                    "bit_msb": 12,
                    "description": "Enable PRBS9 generator on lane 0.",
                    "mode": "RW",
                    "name": "EthPrbs9EnSeg0"
                },
                {
                    "altname": "ETH_PRBS31_EN_SEG11",
                    "bit_lsb": 11,
                    "bit_msb": 11,
                    "description": "Enable PRBS31 generator on lane 11.",
                    "mode": "RW",
                    "name": "EthPrbs31EnSeg11"
                },
                {
                    "altname": "ETH_PRBS31_EN_SEG10",
                    "bit_lsb": 10,
                    "bit_msb": 10,
                    "description": "Enable PRBS31 generator on lane 10.",
                    "mode": "RW",
                    "name": "EthPrbs31EnSeg10"
                },
                {
                    "altname": "ETH_PRBS31_EN_SEG9",
                    "bit_lsb": 9,
                    "bit_msb": 9,
                    "description": "Enable PRBS31 generator on lane 9.",
                    "mode": "RW",
                    "name": "EthPrbs31EnSeg9"
                },
                {
                    "altname": "ETH_PRBS31_EN_SEG8",
                    "bit_lsb": 8,
                    "bit_msb": 8,
                    "description": "Enable PRBS31 generator on lane 8.",
                    "mode": "RW",
                    "name": "EthPrbs31EnSeg8"
                },
                {
                    "altname": "ETH_PRBS31_EN_SEG7",
                    "bit_lsb": 7,
                    "bit_msb": 7,
                    "description": "Enable PRBS31 generator on lane 7.",
                    "mode": "RW",
                    "name": "EthPrbs31EnSeg7"
                },
                {
                    "altname": "ETH_PRBS31_EN_SEG6",
                    "bit_lsb": 6,
                    "bit_msb": 6,
                    "description": "Enable PRBS31 generator on lane 6.",
                    "mode": "RW",
                    "name": "EthPrbs31EnSeg6"
                },
                {
                    "altname": "ETH_PRBS31_EN_SEG5",
                    "bit_lsb": 5,
                    "bit_msb": 5,
                    "description": "Enable PRBS31 generator on lane 5.",
                    "mode": "RW",
                    "name": "EthPrbs31EnSeg5"
                },
                {
                    "altname": "ETH_PRBS31_EN_SEG4",
                    "bit_lsb": 4,
                    "bit_msb": 4,
                    "description": "Enable PRBS31 generator on lane 4.",
                    "mode": "RW",
                    "name": "EthPrbs31EnSeg4"
                },
                {
                    "altname": "ETH_PRBS31_EN_SEG3",
                    "bit_lsb": 3,
                    "bit_msb": 3,
                    "description": "Enable PRBS31 generator on lane 3.",
                    "mode": "RW",
                    "name": "EthPrbs31EnSeg3"
                },
                {
                    "altname": "ETH_PRBS31_EN_SEG2",
                    "bit_lsb": 2,
                    "bit_msb": 2,
                    "description": "Enable PRBS31 generator on lane 2.",
                    "mode": "RW",
                    "name": "EthPrbs31EnSeg2"
                },
                {
                    "altname": "ETH_PRBS31_EN_SEG1",
                    "bit_lsb": 1,
                    "bit_msb": 1,
                    "description": "Enable PRBS31 generator on lane 1.",
                    "mode": "RW",
                    "name": "EthPrbs31EnSeg1"
                },
                {
                    "altname": "ETH_PRBS31_EN_SEG0",
                    "bit_lsb": 0,
                    "bit_msb": 0,
                    "description": "Enable PRBS31 generator on lane 0.",
                    "mode": "RW",
                    "name": "EthPrbs31EnSeg0"
                }
            ]
        },
        "mac_csr.EthPrbsErrCnt": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_PRBS_ERR_COUNT",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "Bits 15:0 of the register are the count.(clear on read)",
                    "mode": "RO",
                    "name": "EthPrbsErrCnt"
                }
            ]
        },
        "mac_csr.EthPrmblCtlSeg": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_SEGMENT_PREAMBLE_CTL",
                    "bit_lsb": 0,
                    "bit_msb": 23,
                    "description": "User defined Tx preamble control (2 bits per segment) SEG0=1:0, SEG1=3:2....",
                    "mode": "RW",
                    "name": "EthSegmentPrmblCtl"
                }
            ]
        },
        "mac_csr.EthQuantaThreshCL01": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_QUANTA_THRESH_CL1",
                    "bit_lsb": 16,
                    "bit_msb": 31,
                    "description": "CL1_QUANTA_THRESH. When a PFC quanta timer counts down and reaches this value, a refresh pause frame should be sent with the programmed full quanta value if the input level indicates that a pause condition still exists.",
                    "mode": "RW",
                    "name": "EthQuantaThreshCL1"
                },
                {
                    "altname": "ETH_QUANTA_THRESH_CL0",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "CL0_QUANTA_THRESH. When a PFC quanta timer counts down and reaches this value, a refresh pause frame should be sent with the programmed full quanta value if the input level indicates that a pause condition still exists. Note: Only a value >1 enables this function.When normal pause mode is enabled, CL0_QUANTA_THRESH is used for refreshing pause frames.",
                    "mode": "RW",
                    "name": "EthQuantaThreshCL0"
                }
            ]
        },
        "mac_csr.EthQuantaThreshCL23": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_QUANTA_THRESH_CL3",
                    "bit_lsb": 16,
                    "bit_msb": 31,
                    "description": "CL3_QUANTA_THRESH. When a PFC quanta timer counts down and reaches this value, a refresh pause frame should be sent with the programmed full quanta value if the input level indicates that a pause condition still exists.",
                    "mode": "RW",
                    "name": "EthQuantaThreshCL3"
                },
                {
                    "altname": "ETH_QUANTA_THRESH_CL2",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "CL2_QUANTA_THRESH. When a PFC quanta timer counts down and reaches this value, a refresh pause frame should be sent with the programmed full quanta value if the input level indicates that a pause condition still exists. Note: Only a value >1 enables this function.",
                    "mode": "RW",
                    "name": "EthQuantaThreshCL2"
                }
            ]
        },
        "mac_csr.EthQuantaThreshCL45": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_QUANTA_THRESH_CL5",
                    "bit_lsb": 16,
                    "bit_msb": 31,
                    "description": "CL5_QUANTA_THRESH. When a PFC quanta timer counts down and reaches this value, a refresh pause frame should be sent with the programmed full quanta value if the input level indicates that a pause condition still exists.",
                    "mode": "RW",
                    "name": "EthQuantaThreshCL5"
                },
                {
                    "altname": "ETH_QUANTA_THRESH_CL4",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "CL4_QUANTA_THRESH. When a PFC quanta timer counts down and reaches this value, a refresh pause frame should be sent with the programmed full quanta value if the input level indicates that a pause condition still exists. Note: Only a value >1 enables this function.",
                    "mode": "RW",
                    "name": "EthQuantaThreshCL4"
                }
            ]
        },
        "mac_csr.EthQuantaThreshCL67": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_QUANTA_THRESH_CL7",
                    "bit_lsb": 16,
                    "bit_msb": 31,
                    "description": "CL7_QUANTA_THRESH. When a PFC quanta timer counts down and reaches this value, a refresh pause frame should be sent with the programmed full quanta value if the input level indicates that a pause condition still exists.",
                    "mode": "RW",
                    "name": "EthQuantaThreshCL7"
                },
                {
                    "altname": "ETH_QUANTA_THRESH_CL6",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "CL6_QUANTA_THRESH. When a PFC quanta timer counts down and reaches this value, a refresh pause frame should be sent with the programmed full quanta value if the input level indicates that a pause condition still exists. Note: Only a value >1 enables this function.",
                    "mode": "RW",
                    "name": "EthQuantaThreshCL6"
                }
            ]
        },
        "mac_csr.EthRevision": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_CUST_VER",
                    "bit_lsb": 16,
                    "bit_msb": 31,
                    "description": "Indicates the customer version of the ETH Mac RTL.",
                    "mode": "RO",
                    "name": "EthCustVer"
                },
                {
                    "altname": "ETH_CORE_VER",
                    "bit_lsb": 8,
                    "bit_msb": 15,
                    "description": "Indicates the core version of the ETH Mac RTL.",
                    "mode": "RO",
                    "name": "EthCoreVer"
                },
                {
                    "altname": "ETH_CORE_REV",
                    "bit_lsb": 0,
                    "bit_msb": 7,
                    "description": "Indicates the core revision of the ETH Mac RTL.",
                    "mode": "RO",
                    "name": "EthCoreRev"
                }
            ]
        },
        "mac_csr.EthRxFifoAlmostFE": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_RX_FIFO_ALMOST_FULL_WM",
                    "bit_lsb": 16,
                    "bit_msb": 31,
                    "description": "RX FIFO almost full threshold Read Only Fixed thresholds set with a Core configuration parameter (see User Guide document for details).",
                    "mode": "RO",
                    "name": "EthRxFifoAlmostFullWm"
                },
                {
                    "altname": "ETH_RX_FIFO_ALMOST_EMPTY_WM",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "RX FIFO almost empty threshold. Read Only Fixed thresholds set with a Core configuration parameter (see User Guide document for details).",
                    "mode": "RO",
                    "name": "EthRxFifoAlmostEmptyWm"
                }
            ]
        },
        "mac_csr.EthRxFifoSections": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_RX_SECTION_EMPTY_WM",
                    "bit_lsb": 16,
                    "bit_msb": 31,
                    "description": "RX section empty threshold, reset value is 0x0. All threshold values are in steps of segment data words (10G: 32-bit, 40G: 128-bit, 100G: 384-bit). See also FIXME.",
                    "mode": "RW",
                    "name": "EthRxSectionEmptyWm"
                },
                {
                    "altname": "ETH_RX_SECTION_AVAIL_WM",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "RX section available threshold, reset value is 0x3.",
                    "mode": "RW",
                    "name": "EthRxSectionAvailWm"
                }
            ]
        },
        "mac_csr.EthRxPauseStatus": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_RX_PAUSE_STATUS",
                    "bit_lsb": 0,
                    "bit_msb": 7,
                    "description": "Status bit for software to read the pause status. One bit for each of the 8 classes.",
                    "mode": "RO",
                    "name": "EthRxPauseStatus"
                }
            ]
        },
        "mac_csr.EthScratch": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_SCRATCH",
                    "bit_lsb": 0,
                    "bit_msb": 31,
                    "description": "The Scratch Register provides a memory location to test the register access.",
                    "mode": "RW",
                    "name": "EthScratch"
                }
            ]
        },
        "mac_csr.EthSgmiiAnExpansion": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_LATCHED_PAGE_RCVD",
                    "bit_lsb": 1,
                    "bit_msb": 1,
                    "description": "Latched high page received indication (cleared on read).",
                    "mode": "RO",
                    "name": "EthLatchedHiPageRcvd"
                },
                {
                    "altname": "ETH_REAL_TIME_PAGE_RCVD",
                    "bit_lsb": 0,
                    "bit_msb": 0,
                    "description": "Real-time page receive indication.",
                    "mode": "RO",
                    "name": "EthRealTimePageRcvd"
                }
            ]
        },
        "mac_csr.EthSgmiiDevAbility": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_NP",
                    "bit_lsb": 15,
                    "bit_msb": 15,
                    "description": "Next page capable. Set to '1' to indicate next page capability.",
                    "mode": "RW",
                    "name": "EthNextPageCapable"
                },
                {
                    "altname": "ETH_ACK",
                    "bit_lsb": 14,
                    "bit_msb": 14,
                    "description": "Acknowledgement bit used during autonegotiation. Setting of the bit in the device ability advertisement register is not relevant to the operation of the autonegotiation function. The bit is typically set in the received partner ability register upon successful completion of autonegotiation.",
                    "mode": "RO",
                    "name": "EthACK"
                },
                {
                    "altname": "ETH_REMOTE_FAULT",
                    "bit_lsb": 12,
                    "bit_msb": 13,
                    "description": "Remote fault condition advertise",
                    "mode": "RW",
                    "name": "EthRemoteFault"
                },
                {
                    "altname": "ETH_PAUSE_SUPPORT2",
                    "bit_lsb": 8,
                    "bit_msb": 8,
                    "description": "Advertise that the PCS supports pause on both transmit and receive. PS2 (ASM_DIR) indicates pause asymmetry. Refer to IEEE802.3 Clause 37.2.4.2 for pause resolution.",
                    "mode": "RW",
                    "name": "EthPS2"
                },
                {
                    "altname": "ETH_PAUSE_SUPPORT1",
                    "bit_lsb": 7,
                    "bit_msb": 7,
                    "description": "Advertise that the PCS supports pause on both transmit and receive. PS1 (Pause) indicates pause capability.Refer to IEEE802.3 Clause 37.2.4.2 for pause resolution. The device-ability register reset to 1 indicating full pause support in both directions",
                    "mode": "RW",
                    "name": "EthPS1"
                },
                {
                    "altname": "ETH_HALF_DUPLEX",
                    "bit_lsb": 6,
                    "bit_msb": 6,
                    "description": "Half Duplex Support. Set to '1' when the device advertises that is supports Half Duplex Mode of operation.",
                    "mode": "RW",
                    "name": "EthHalfDuplex"
                },
                {
                    "altname": "ETH_FULL_DUPLEX",
                    "bit_lsb": 5,
                    "bit_msb": 5,
                    "description": "Full Duplex Support. Set to '1' when the device advertises that it supports Full Duplex Mode of operation.\nThe device-ability (advertisement) register reset value sets the bit to 1 indicating full duplex operation.",
                    "mode": "RW",
                    "name": "EthFullDuplex"
                }
            ]
        },
        "mac_csr.EthSgmiiIfMode": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_SGMII_PCS_ENABLE",
                    "bit_lsb": 5,
                    "bit_msb": 5,
                    "description": "Enable SGMII/1000Base-X PCS instead of XGMII/10GBase-R for the 10G MAC.\nWhen set (1) the SGMII PCS layer becomes active and the channel is configured for 1G mode of operation. The other bits in this register have no meaning if this bit is not set. When cleared (0, default) the MAC operates in 10G mode with an XGMII (internally) and 10GBase-R PCS Layer. Note: This bit only configures the datapath within the combined MAC and PCS layers. It does not change the PMA/SERDES module, externally to the core. This must be controlled elsewhere to adapt the correct interface width (10-bit) and speed (125MHz).\nNote: After setting this bit=1, a PCS soft reset should be performed by writing bit15 of the PCS control register.",
                    "mode": "RW",
                    "name": "EthSgmiiPcsEnable"
                },
                {
                    "altname": "ETH_SGMII_HDUPLEX",
                    "bit_lsb": 4,
                    "bit_msb": 4,
                    "description": "SGMII Halfduplex Mode: When set (1), halfduplex is enabled, when cleared, fullduplex is enabled (default). Note: halfduplex is NOT supported in this implementation. This bit setting has no effect.",
                    "mode": "RW",
                    "name": "EthSgmiiHDuplex"
                },
                {
                    "altname": "ETH_SGMII_SPEED",
                    "bit_lsb": 2,
                    "bit_msb": 3,
                    "description": "SGMII Speed. When the PCS operates in SGMII mode (SGMII_ENA set to '1') and when the PCS is programmed not to be automatically configured (USE_SGMII_AN set to '0'), sets the PCS speed of operation (Bit 4:0): Bits ignored when SGMII_ENA=0 or USE_SGMII_AN=0..",
                    "mode": "RW",
                    "name": "EthSgmiiSpeed"
                },
                {
                    "altname": "ETH_USE_SGMII_AN",
                    "bit_lsb": 1,
                    "bit_msb": 1,
                    "description": "Use the SGMII Auto-Negotiation Results to Program the PCS Speed. When set to '0' (Reset Value), the PCS operation should be programmed with the register bit SGMII_SPEED and SGMII_DUPLEX. When '1', the PCS operation is automatically set according to the Partner abilities advertised during Auto-Negotiation. Ignored when SGMII_ENA is set to '0'.",
                    "mode": "RW",
                    "name": "EthUseSgmiiAn"
                },
                {
                    "altname": "ETH_SGMII_ENA",
                    "bit_lsb": 0,
                    "bit_msb": 0,
                    "description": "SGMII Mode Enable. When set to '0' (Reset Value), the PCS operates in standard 1000Base-X Gigabit mode, when set to '1', the PCS operates in SGMII Mode. If the bit is '0' the bits 1..4 of this register are ignored.",
                    "mode": "RW",
                    "name": "EthSgmiiEna"
                }
            ]
        },
        "mac_csr.EthSgmiiLinkTimerHi": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_LINK_TIMER_HI",
                    "bit_lsb": 0,
                    "bit_msb": 4,
                    "description": "Auto Negotiation Link Timer (RW). Set the Link Timer value from 0 to 16ms in 8ns steps (125MHz clock periods). The reset value sets the Link Timer to 10ms (1250000). Bits 20:16 are stored in the HI register.",
                    "mode": "RW",
                    "name": "EthLinkTimerHi"
                }
            ]
        },
        "mac_csr.EthSgmiiLinkTimerLo": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_LINK_TIMER_LO",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "Auto Negotiation Link Timer (RW). Set the Link Timer value from 0 to 16ms in 8ns steps (125MHz clock periods). The reset value sets the Link Timer to 10ms (1250000). Bits 15:0 are stored in the LO register.",
                    "mode": "RW",
                    "name": "EthLinkTimerLo"
                }
            ]
        },
        "mac_csr.EthSgmiiNoSupport": {
            "bit_length": 32,
            "fields": []
        },
        "mac_csr.EthSgmiiPartnerAbility": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_COPPER_LINK_STATUS",
                    "bit_lsb": 15,
                    "bit_msb": 15,
                    "description": "Read only bit, used by the SGMII PHY to advertise the Link Partner Copper status: 1=Copper interface link is up 0=Copper interface link is down.",
                    "mode": "RO",
                    "name": "EthCopperLinkStatus"
                },
                {
                    "altname": "ETH_ACK",
                    "bit_lsb": 14,
                    "bit_msb": 14,
                    "description": "Acknowledgement bit used during autonegotiation. Setting of the bit in the device ability advertisement register is not relevant to the operation of the autonegotiation function. The bit is typically set in the received partner ability register upon successful completion of autonegotiation.",
                    "mode": "RO",
                    "name": "EthACK"
                },
                {
                    "altname": "ETH_COPPER_DUPLEX_STATUS",
                    "bit_lsb": 12,
                    "bit_msb": 12,
                    "description": "Read only bit, used by the SGMII PHY to advertise the Link Partner Copper duplex capability: 0=Copper Interface resolved to Half-Duplex 1=Copper Interface resolved to Full-Duplex",
                    "mode": "RO",
                    "name": "EthCopperDuplexStatus"
                },
                {
                    "altname": "ETH_COPPER_SPEED",
                    "bit_lsb": 10,
                    "bit_msb": 11,
                    "description": "Read only bits, used to by the SGMII PHY to advertise the Copper interface speed (Bit 11:10).",
                    "mode": "RO",
                    "name": "EthCopperSpeed"
                }
            ]
        },
        "mac_csr.EthSgmiiPcsCtl": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_PCS_RESET",
                    "bit_lsb": 15,
                    "bit_msb": 15,
                    "description": "Self-Clearing Reset Command Register. When set to '1', a synchronous reset pulse is generated which resets all the PCS state machines, the Comma detection function and the 8b/10b coder / decoder. '0' for normal operation.",
                    "mode": "RW",
                    "name": "EthPcsReset"
                },
                {
                    "altname": "ETH_PHY_LOOPBACK",
                    "bit_lsb": 14,
                    "bit_msb": 14,
                    "description": "When set to '1', a serial loopback is implemented in the PMA. Should be set to '0' (Reset value) during normal operation. (setting not relevant, function not used.)",
                    "mode": "RW",
                    "name": "EthPhyLoopBack"
                },
                {
                    "altname": "ETH_SGMII_SPEED_SEL_0",
                    "bit_lsb": 13,
                    "bit_msb": 13,
                    "description": "Read only bits that define that the PCS only operates in Gigabit mode.",
                    "mode": "RO",
                    "name": "EthSgmiiSpeedSel0"
                },
                {
                    "altname": "ETH_AUTONEG_ENABLE",
                    "bit_lsb": 12,
                    "bit_msb": 12,
                    "description": "When set to 1 (Reset value) Auto Negotiation is enabled, set to 0 to disable Auto Negotiation.",
                    "mode": "RW",
                    "name": "EthAutoNegEnable"
                },
                {
                    "altname": "ETH_POWER_DOWN",
                    "bit_lsb": 11,
                    "bit_msb": 11,
                    "description": "When set to '1', the PCS drives its powerdown output pin.(setting not relevant, function not used.)",
                    "mode": "RW",
                    "name": "EthPowerDown"
                },
                {
                    "altname": "ETH_ISOLATE",
                    "bit_lsb": 10,
                    "bit_msb": 10,
                    "description": "When set to '1', the PCS is isolated from the MAC Layer device. Should be set to '0' (Reset value) to enable normal operation. Note: When set keeps the PCS in reset (equals bit15=1 permanently).",
                    "mode": "RW",
                    "name": "EthIsolate"
                },
                {
                    "altname": "ETH_RESTART_AUTONEG",
                    "bit_lsb": 9,
                    "bit_msb": 9,
                    "description": "Self-clearing command bit: Set to '1' to restart an auto negotiation sequence. Set to '0' (Reset value) in normal operation mode.",
                    "mode": "RW",
                    "name": "EthRestartAutoNeg"
                },
                {
                    "altname": "ETH_DUPLEX_MODE",
                    "bit_lsb": 8,
                    "bit_msb": 8,
                    "description": "Read only bit always set to '1' to indication that the PCS only supports Full Duplex mode of operation and does not support Half Duplex mode of operation.",
                    "mode": "RO",
                    "name": "EthDuplexMode"
                },
                {
                    "altname": "ETH_COLLISION_TEST",
                    "bit_lsb": 7,
                    "bit_msb": 7,
                    "description": "Half duplex not supported by the PCS, read only bit set to '0'.",
                    "mode": "RO",
                    "name": "EthCollisionTest"
                },
                {
                    "altname": "ETH_SGMII_SPEED_SEL_1",
                    "bit_lsb": 6,
                    "bit_msb": 6,
                    "description": "Read only bits that define that the PCS only operates in Gigabit mode.",
                    "mode": "RO",
                    "name": "EthSgmiiSpeedSel1"
                }
            ]
        },
        "mac_csr.EthSgmiiPcsStatus": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_100BASET4",
                    "bit_lsb": 15,
                    "bit_msb": 15,
                    "description": "Read Only bit set to '0' to indicate that the PCS does NOT support 100Base-T4 operation.",
                    "mode": "RO",
                    "name": "Eth100T4"
                },
                {
                    "altname": "ETH_100BASEX_HALF_DUPLEX",
                    "bit_lsb": 13,
                    "bit_msb": 14,
                    "description": "Read Only bit set to '00' to indicate that the PCS does NOT support 100Base-X operation.",
                    "mode": "RO",
                    "name": "Eth100XHalfDuplex"
                },
                {
                    "altname": "ETH_10M_HALF_DUPLEX",
                    "bit_lsb": 11,
                    "bit_msb": 12,
                    "description": "Read Only bit set to '00' to indicate that the PCS does NOT support 10Mbps operation.",
                    "mode": "RO",
                    "name": "Eth10MbHalfDuplex"
                },
                {
                    "altname": "ETH_100BASET2_HALF_DUPLEX",
                    "bit_lsb": 9,
                    "bit_msb": 10,
                    "description": "Read Only bit set to '00' to indicate that the PCS does NOT support 100Base-T2 operation.",
                    "mode": "RO",
                    "name": "Eth100T2HalfDuplex"
                },
                {
                    "altname": "ETH_EXTENDED_STATUS",
                    "bit_lsb": 8,
                    "bit_msb": 8,
                    "description": "Read Only bit always set to '0' to indicate that the PCS does NOT implement an extended status register.",
                    "mode": "RO",
                    "name": "EthExtendedStatus"
                },
                {
                    "altname": "ETH_AUTONEG_COMPLETE",
                    "bit_lsb": 5,
                    "bit_msb": 5,
                    "description": "Read Only Bit set to '1' to indicate that the Auto Negotiation process is completed and that the Auto Negotiation control registers are valid. Set to '0' if the Auto Negotiation process is not completed or if Auto Negotiation is disabled.",
                    "mode": "RO",
                    "name": "EthAutoNegComplete"
                },
                {
                    "altname": "ETH_REMOTE_FAULT",
                    "bit_lsb": 4,
                    "bit_msb": 4,
                    "description": "Read Only Bit always set to '0'. The PCS does not implement a PHY specific remote fault detection optional function.",
                    "mode": "RO",
                    "name": "EthRemoteFault"
                },
                {
                    "altname": "ETH_AUTONEG_ABILITY",
                    "bit_lsb": 3,
                    "bit_msb": 3,
                    "description": "Read Only Bit set to '1' to indicate that the PCS PCS supports Auto-Negotiation.",
                    "mode": "RO",
                    "name": "EthAutoNegAbility"
                },
                {
                    "altname": "ETH_LINK_STATUS",
                    "bit_lsb": 2,
                    "bit_msb": 2,
                    "description": "Read Only Link Status Register. When read as a logic one, indicates that the PCS has determined that a valid link has been established. When read as a logic zero, indicates that the link is not valid.If the link synchronization is lost a '0' is latched which is cleared only after a register read access.",
                    "mode": "RO",
                    "name": "EthLinkStatus"
                },
                {
                    "altname": "ETH_JABBER_DETECT",
                    "bit_lsb": 1,
                    "bit_msb": 1,
                    "description": "Read Only bit always set to '0', the PCS does not support the optional Jabber detection function.",
                    "mode": "RO",
                    "name": "EthJabberDetect"
                },
                {
                    "altname": "ETH_EXT_CAPABLE",
                    "bit_lsb": 0,
                    "bit_msb": 0,
                    "description": "Read Only bit set to '1' to indicate that the PCS supports extended registers.",
                    "mode": "RO",
                    "name": "EthExtCapable"
                }
            ]
        },
        "mac_csr.EthSgmiiPhyIdent0": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_PHY_IDENTIFIER0",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "PHY Identification Register. Read only register programmed with a custom value.",
                    "mode": "RO",
                    "name": "EthPhyIdentifier0"
                }
            ]
        },
        "mac_csr.EthSgmiiPhyIdent1": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_PHY_IDENTIFIER1",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "PHY Identification Register. Read only register programmed with a custom value.",
                    "mode": "RO",
                    "name": "EthPhyIdentifier1"
                }
            ]
        },
        "mac_csr.EthStatus": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_TS_AVAILABLE",
                    "bit_lsb": 3,
                    "bit_msb": 3,
                    "description": "Transmit Timestamp Available. Indicates that the timestamp of the last transmitted 1588 event frame is available in the register TS_TIMESTAMP. To clear TS_AVAIL, the bit must be written with a '1'.",
                    "mode": "RW1C",
                    "name": "EthTsAvail"
                },
                {
                    "altname": "ETH_PHY_LOS",
                    "bit_lsb": 2,
                    "bit_msb": 2,
                    "description": "PHY indicates loss-of-signal. Represents value of pin phy_los<n> when link training is disabled, else the signal detect indication from the Link Training Core when link training is enabled.",
                    "mode": "RO",
                    "name": "EthPhyLos"
                },
                {
                    "altname": "ETH_RX_REMOTE_FAULT",
                    "bit_lsb": 1,
                    "bit_msb": 1,
                    "description": "Latch-High Remote Fault Status. Set to '1' when the MAC detects RX Remote Fault Sequences on the XL/CGMII receive interface. Reset to '0' after read and after reset.",
                    "mode": "RO",
                    "name": "EthRxRemFault"
                },
                {
                    "altname": "ETH_RX_LOCAL_FAULT",
                    "bit_lsb": 0,
                    "bit_msb": 0,
                    "description": "Latch-High Local Fault Status. Set to '1' when the MAC detects RX Local Fault Sequences on the XL/CGMII receive interface. Reset to '0' after read and after reset.",
                    "mode": "RO",
                    "name": "EthRxLocFault"
                }
            ]
        },
        "mac_csr.EthTdmCreditReg0": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_TDM_CREDIT_REG3",
                    "bit_lsb": 24,
                    "bit_msb": 31,
                    "description": "Current credit register value of Segment 3 (for debug purpose only).",
                    "mode": "RO",
                    "name": "EthTdmCredit3"
                },
                {
                    "altname": "ETH_TDM_CREDIT_REG2",
                    "bit_lsb": 16,
                    "bit_msb": 23,
                    "description": "Current credit register value of Segment 2 (for debug purpose only).",
                    "mode": "RO",
                    "name": "EthTdmCredit2"
                },
                {
                    "altname": "ETH_TDM_CREDIT_REG1",
                    "bit_lsb": 8,
                    "bit_msb": 15,
                    "description": "Current credit register value of Segment 1 (for debug purpose only).",
                    "mode": "RO",
                    "name": "EthTdmCredit1"
                },
                {
                    "altname": "ETH_TDM_CREDIT_REG0",
                    "bit_lsb": 0,
                    "bit_msb": 7,
                    "description": "Current credit register value of Segment 0 (for debug purpose only).",
                    "mode": "RO",
                    "name": "EthTdmCredit0"
                }
            ]
        },
        "mac_csr.EthTdmCreditReg1": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_TDM_CREDIT_REG7",
                    "bit_lsb": 24,
                    "bit_msb": 31,
                    "description": "Current credit register value of Segment 7 (for debug purpose only).",
                    "mode": "RO",
                    "name": "EthTdmCredit7"
                },
                {
                    "altname": "ETH_TDM_CREDIT_REG6",
                    "bit_lsb": 16,
                    "bit_msb": 23,
                    "description": "Current credit register value of Segment 6 (for debug purpose only).",
                    "mode": "RO",
                    "name": "EthTdmCredit6"
                },
                {
                    "altname": "ETH_TDM_CREDIT_REG5",
                    "bit_lsb": 8,
                    "bit_msb": 15,
                    "description": "Current credit register value of Segment 5 (for debug purpose only).",
                    "mode": "RO",
                    "name": "EthTdmCredit5"
                },
                {
                    "altname": "ETH_TDM_CREDIT_REG4",
                    "bit_lsb": 0,
                    "bit_msb": 7,
                    "description": "Current credit register value of Segment 4 (for debug purpose only).",
                    "mode": "RO",
                    "name": "EthTdmCredit4"
                }
            ]
        },
        "mac_csr.EthTdmCreditReg2": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_TDM_CREDIT_REG11",
                    "bit_lsb": 24,
                    "bit_msb": 31,
                    "description": "Current credit register value of Segment 11 (for debug purpose only).",
                    "mode": "RO",
                    "name": "EthTdmCredit11"
                },
                {
                    "altname": "ETH_TDM_CREDIT_REG10",
                    "bit_lsb": 16,
                    "bit_msb": 23,
                    "description": "Current credit register value of Segment 10 (for debug purpose only).",
                    "mode": "RO",
                    "name": "EthTdmCredit10"
                },
                {
                    "altname": "ETH_TDM_CREDIT_REG9",
                    "bit_lsb": 8,
                    "bit_msb": 15,
                    "description": "Current credit register value of Segment 9 (for debug purpose only).",
                    "mode": "RO",
                    "name": "EthTdmCredit9"
                },
                {
                    "altname": "ETH_TDM_CREDIT_REG8",
                    "bit_lsb": 0,
                    "bit_msb": 7,
                    "description": "Current credit register value of Segment 8 (for debug purpose only).",
                    "mode": "RO",
                    "name": "EthTdmCredit8"
                }
            ]
        },
        "mac_csr.EthTdmInitCredit0": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_TDM_INIT_CREDIT3",
                    "bit_lsb": 24,
                    "bit_msb": 31,
                    "description": "Specifies the Rx initial/max credit value to be loaded for Segment 3.",
                    "mode": "RW",
                    "name": "EthTdmInitCredit3"
                },
                {
                    "altname": "ETH_TDM_INIT_CREDIT2",
                    "bit_lsb": 16,
                    "bit_msb": 23,
                    "description": "Specifies the Rx initial/max credit value to be loaded for Segment 2.",
                    "mode": "RW",
                    "name": "EthTdmInitCredit2"
                },
                {
                    "altname": "ETH_TDM_INIT_CREDIT1",
                    "bit_lsb": 8,
                    "bit_msb": 15,
                    "description": "Specifies the Rx initial/max credit value to be loaded for Segment 1.",
                    "mode": "RW",
                    "name": "EthTdmInitCredit1"
                },
                {
                    "altname": "ETH_TDM_INIT_CREDIT0",
                    "bit_lsb": 0,
                    "bit_msb": 7,
                    "description": "Specifies the Rx initial/max credit value to be loaded for Segment 0.",
                    "mode": "RW",
                    "name": "EthTdmInitCredit0"
                }
            ]
        },
        "mac_csr.EthTdmInitCredit1": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_TDM_INIT_CREDIT7",
                    "bit_lsb": 24,
                    "bit_msb": 31,
                    "description": "Specifies the Rx initial/max credit value to be loaded for Segment 7.",
                    "mode": "RW",
                    "name": "EthTdmInitCredit7"
                },
                {
                    "altname": "ETH_TDM_INIT_CREDIT6",
                    "bit_lsb": 16,
                    "bit_msb": 23,
                    "description": "Specifies the Rx initial/max credit value to be loaded for Segment 6.",
                    "mode": "RW",
                    "name": "EthTdmInitCredit6"
                },
                {
                    "altname": "ETH_TDM_INIT_CREDIT5",
                    "bit_lsb": 8,
                    "bit_msb": 15,
                    "description": "Specifies the Rx initial/max credit value to be loaded for Segment 5.",
                    "mode": "RW",
                    "name": "EthTdmInitCredit5"
                },
                {
                    "altname": "ETH_TDM_INIT_CREDIT4",
                    "bit_lsb": 0,
                    "bit_msb": 7,
                    "description": "Specifies the Rx initial/max credit value to be loaded for Segment 4.",
                    "mode": "RW",
                    "name": "EthTdmInitCredit4"
                }
            ]
        },
        "mac_csr.EthTdmInitCredit2": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_TDM_INIT_CREDIT11",
                    "bit_lsb": 24,
                    "bit_msb": 31,
                    "description": "Specifies the Rx initial/max credit value to be loaded for Segment 11.",
                    "mode": "RW",
                    "name": "EthTdmInitCredit11"
                },
                {
                    "altname": "ETH_TDM_INIT_CREDIT10",
                    "bit_lsb": 16,
                    "bit_msb": 23,
                    "description": "Specifies the Rx initial/max credit value to be loaded for Segment 10.",
                    "mode": "RW",
                    "name": "EthTdmInitCredit10"
                },
                {
                    "altname": "ETH_TDM_INIT_CREDIT9",
                    "bit_lsb": 8,
                    "bit_msb": 15,
                    "description": "Specifies the Rx initial/max credit value to be loaded for Segment 9.",
                    "mode": "RW",
                    "name": "EthTdmInitCredit9"
                },
                {
                    "altname": "ETH_TDM_INIT_CREDIT8",
                    "bit_lsb": 0,
                    "bit_msb": 7,
                    "description": "Specifies the Rx initial/max credit value to be loaded for Segment 8.",
                    "mode": "RW",
                    "name": "EthTdmInitCredit8"
                }
            ]
        },
        "mac_csr.EthTimestamp": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_TIMESTAMP",
                    "bit_lsb": 0,
                    "bit_msb": 31,
                    "description": "Timestamp of the last frame transmitted with timestamp mark enabled. Valid when the status bit EthStatus[EthTsAvail] is set to '1'.",
                    "mode": "RO",
                    "name": "EthTimestamp"
                }
            ]
        },
        "mac_csr.EthTxClkCtlSeg": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_SEGMENT_TXCLK_CTL",
                    "bit_lsb": 0,
                    "bit_msb": 23,
                    "description": "PMA Transmit Clock Selection (2 bits per segment) SEG0=1:0, SEG1=3:2...This register reflects the setting of the output pins sd_tx_clk_ctrl(23:0).",
                    "mode": "RO",
                    "name": "EthSegmentTxClkCtl"
                }
            ]
        },
        "mac_csr.EthTxFifoAlmostFE": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_TX_FIFO_ALMOST_FULL_WM",
                    "bit_lsb": 16,
                    "bit_msb": 31,
                    "description": "TX FIFO almost full threshold Read Only Fixed thresholds set with a Core configuration parameter (see User Guide document for details).",
                    "mode": "RO",
                    "name": "EthTxFifoAlmostFullWm"
                },
                {
                    "altname": "ETH_TX_FIFO_ALMOST_EMPTY_WM",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "TX FIFO almost empty threshold. Read Only Fixed thresholds set with a Core configuration parameter (see User Guide document for details).",
                    "mode": "RO",
                    "name": "EthTxFifoAlmostEmptyWm"
                }
            ]
        },
        "mac_csr.EthTxFifoSections": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_TX_SECTION_EMPTY_WM",
                    "bit_lsb": 16,
                    "bit_msb": 31,
                    "description": "TX section empty threshold, reset value is 0x0. All threshold values are in steps of segment data words (10G: 32-bit, 40G: 128-bit, 100G: 384-bit). See also FIXME.",
                    "mode": "RW",
                    "name": "EthTxSectionEmptyWm"
                },
                {
                    "altname": "ETH_TX_SECTION_AVAIL_WM",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "TX section available threshold, reset value is 0x3.",
                    "mode": "RW",
                    "name": "EthTxSectionAvailWm"
                }
            ]
        },
        "mac_csr.EthTxIpgLength": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_TX_IPG_LENGTH",
                    "bit_lsb": 0,
                    "bit_msb": 6,
                    "description": "Transmit Inter-Packet-Gap (IPG) value.\nA 7-bit value: Depending on LAN or WAN mode of operation (see COMMAND_CONFIG, the value has the following meaning:LAN Mode: Number of octets in steps of 4. Valid values are 8, 12, 16, ..., 100. DIC is fully supported for any setting. A default of 12 (reset value) must be set to conform to IEEE802.3ae. Warning: When set to 8, PCS layers may not be able to perform clock rate compensation.WAN Mode: Stretch factor. Valid values are 4..15. The stretch factor is calculated as (value+1)*8. A default of 12 (reset value) must be set to conform to IEEE 802.3ae (i.e. 13*8=104). A larger value shrinks the IPG (increasing bandwidth).\nThe reset value 12 leads to IEEE802.3ae conformant behavior in both modes.\nNote: WAN mode is only available in 10G mode of operation.",
                    "mode": "RW",
                    "name": "EthTxIpgLength"
                }
            ]
        },
        "mac_csr.EthTxPreamble0": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_TX_PREAMBLE_0",
                    "bit_lsb": 0,
                    "bit_msb": 31,
                    "description": "The lower 32-Bit of the user defined 56-Bit Transmit Preamble. Bit 0 is LSB.",
                    "mode": "RW",
                    "name": "EthTxPreamble0"
                }
            ]
        },
        "mac_csr.EthTxPreamble1": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_TX_PREAMBLE_1",
                    "bit_lsb": 0,
                    "bit_msb": 23,
                    "description": "The upper 24-Bit of the user defined 56-Bit Transmit Preamble. Bit 0 is bit 32 of the preamble.",
                    "mode": "RW",
                    "name": "EthTxPreamble1"
                }
            ]
        },
        "mac_csr.EthVLIntvl": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_VL_INTERVAL",
                    "bit_lsb": 0,
                    "bit_msb": 0,
                    "description": "Bit 0: Virtual Lane Marker Interval. When set to '0' (reset value), alignment markers are inserted and detected after every 16383 blocks according to IEEE 802.3ba standard specification. For test purposes, setting this bit to '1' will change the interval to 1023 blocks.",
                    "mode": "RW",
                    "name": "EthVLIntvl"
                }
            ]
        },
        "mac_csr.EthVlanTpid": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_VLAN_TPID",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "VLAN Tag TPID.",
                    "mode": "RW",
                    "name": "EthVlanTpid"
                }
            ]
        },
        "mac_csr.EthWanRsColCnt": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_WAN_RS_COL_CNT",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "A 16-bit value used as limit for the column-counter for the 10GBase-R fault statemachine (IEEE802.3ae Clause 46.3.4). Defaults to 127 for IEEE 802.3ae conformant behavior. The setting is relevant only in 12x10G mode of operation and is used by a 10G MAC when it is configured to use the extended column counter (see command_config(RS_COL_CNT_EXT)). Bits 31:16: reserved, write 0 always.",
                    "mode": "RW",
                    "name": "EthWanRsColCnt"
                }
            ]
        },
        "mac_csr.IgBufferCreditPoolCount": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "IG_BUFFER_LINKLIST_READY",
                    "bit_lsb": 31,
                    "bit_msb": 31,
                    "description": "Indicates the IG Linklist has completed initalization.",
                    "mode": "RO",
                    "name": "IgBufferLinklistReady"
                },
                {
                    "altname": "IG_BUFFER_CREDIT_COUNT1",
                    "bit_lsb": 16,
                    "bit_msb": 29,
                    "description": "Live value of ingress buffer free pool for core-pair 1 in split-mode only.",
                    "mode": "RO",
                    "name": "IgBufferCreditCount1"
                },
                {
                    "altname": "IG_BUFFER_CREDIT_COUNT",
                    "bit_lsb": 0,
                    "bit_msb": 13,
                    "description": "Live value of ingress buffer free pool for core-pair 0 in non-split or split-mem modes.",
                    "mode": "RO",
                    "name": "IgBufferCreditCount"
                }
            ]
        },
        "mac_csr.IgL4TotalSel": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "L4_OVERALL_EN",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "Ingress prepend L4 overall checksum enable bits.",
                    "mode": "RW",
                    "name": "L4OverallEn"
                }
            ]
        },
        "mac_csr.IgParityErrStatus": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "IG_PAR_ERR_TYPE",
                    "bit_lsb": 12,
                    "bit_msb": 14,
                    "description": "If non-zero, indicates a parity err occurred. Read to clear. 001=rslt_mem. 010=timestamp_mem, 100=desc_mem.",
                    "mode": "RO",
                    "name": "IgParErrType"
                },
                {
                    "altname": "IG_PAR_ERR_ADDR",
                    "bit_lsb": 0,
                    "bit_msb": 10,
                    "description": "Address of parity error in memory indicated by a non-zero type field.",
                    "mode": "RO",
                    "name": "IgParErrAddr"
                }
            ]
        },
        "mac_csr.IgPrependEn": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "RFU",
                    "bit_lsb": 26,
                    "bit_msb": 31,
                    "description": "Reserved for Use.",
                    "mode": "RW",
                    "name": "Rfu"
                },
                {
                    "altname": "PREPEND_LK",
                    "bit_lsb": 24,
                    "bit_msb": 25,
                    "description": "Ingress Interlaken prepend enable bits.",
                    "mode": "RW",
                    "name": "PrependLk"
                },
                {
                    "altname": "PREPEND_EN11",
                    "bit_lsb": 22,
                    "bit_msb": 23,
                    "description": "Ingress port11 prepend enable bits.",
                    "mode": "RW",
                    "name": "PrependEn11"
                },
                {
                    "altname": "PREPEND_EN10",
                    "bit_lsb": 20,
                    "bit_msb": 21,
                    "description": "Ingress port10 prepend enable bits.",
                    "mode": "RW",
                    "name": "PrependEn10"
                },
                {
                    "altname": "PREPEND_EN9",
                    "bit_lsb": 18,
                    "bit_msb": 19,
                    "description": "Ingress port9 prepend enable bits.",
                    "mode": "RW",
                    "name": "PrependEn9"
                },
                {
                    "altname": "PREPEND_EN8",
                    "bit_lsb": 16,
                    "bit_msb": 17,
                    "description": "Ingress port8 prepend enable bits.",
                    "mode": "RW",
                    "name": "PrependEn8"
                },
                {
                    "altname": "PREPEND_EN7",
                    "bit_lsb": 14,
                    "bit_msb": 15,
                    "description": "Ingress port7 prepend enable bits.",
                    "mode": "RW",
                    "name": "PrependEn7"
                },
                {
                    "altname": "PREPEND_EN6",
                    "bit_lsb": 12,
                    "bit_msb": 13,
                    "description": "Ingress port6 prepend enable bits.",
                    "mode": "RW",
                    "name": "PrependEn6"
                },
                {
                    "altname": "PREPEND_EN5",
                    "bit_lsb": 10,
                    "bit_msb": 11,
                    "description": "Ingress port5 prepend enable bits.",
                    "mode": "RW",
                    "name": "PrependEn5"
                },
                {
                    "altname": "PREPEND_EN4",
                    "bit_lsb": 8,
                    "bit_msb": 9,
                    "description": "Ingress port4 prepend enable bits.",
                    "mode": "RW",
                    "name": "PrependEn4"
                },
                {
                    "altname": "PREPEND_EN3",
                    "bit_lsb": 6,
                    "bit_msb": 7,
                    "description": "Ingress port3 prepend enable bits.",
                    "mode": "RW",
                    "name": "PrependEn3"
                },
                {
                    "altname": "PREPEND_EN2",
                    "bit_lsb": 4,
                    "bit_msb": 5,
                    "description": "Ingress port2 prepend enable bits.",
                    "mode": "RW",
                    "name": "PrependEn2"
                },
                {
                    "altname": "PREPEND_EN1",
                    "bit_lsb": 2,
                    "bit_msb": 3,
                    "description": "Ingress port1 prepend enable bits.",
                    "mode": "RW",
                    "name": "PrependEn1"
                },
                {
                    "altname": "PREPEND_EN0",
                    "bit_lsb": 0,
                    "bit_msb": 1,
                    "description": "Ingress port0 prepend enable bits.",
                    "mode": "RW",
                    "name": "PrependEn0"
                }
            ]
        },
        "mac_csr.LLMemRdData": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "LL_RD_OFFSET_ADDR",
                    "bit_lsb": 18,
                    "bit_msb": 29,
                    "description": "Read offset Address to linklist membus",
                    "mode": "RO",
                    "name": "LLRdOffsetAddr"
                },
                {
                    "altname": "LL_RD_DATA_VALID",
                    "bit_lsb": 17,
                    "bit_msb": 17,
                    "description": "Set to '1' when read complete, cleared when next read initiated",
                    "mode": "RO",
                    "name": "LLRdDataValid"
                },
                {
                    "altname": "LL_RD_DATA",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "16 bit read data from linklist memory",
                    "mode": "RO",
                    "name": "LLRdData"
                }
            ]
        },
        "mac_csr.LLMemRdWr": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "RFU",
                    "bit_lsb": 30,
                    "bit_msb": 31,
                    "description": "Reserved for Use.",
                    "mode": "RW",
                    "name": "Rfu"
                },
                {
                    "altname": "LL_OFFSET_ADDR",
                    "bit_lsb": 18,
                    "bit_msb": 29,
                    "description": "Read/Write offset Address to linklist membus",
                    "mode": "RW",
                    "name": "LLOffsetAddr"
                },
                {
                    "altname": "LL_RD_BUSY",
                    "bit_lsb": 17,
                    "bit_msb": 17,
                    "description": "write to 1 to start read op. Self clears when read complete. read data in corresponding read register. If read and write bits set at same time, operation default to NOP.",
                    "mode": "RW",
                    "name": "LLRdBusy"
                },
                {
                    "altname": "LL_WR_BUSY",
                    "bit_lsb": 16,
                    "bit_msb": 16,
                    "description": "write to 1 to start write op. Self clears when write complete.",
                    "mode": "RW",
                    "name": "LLWrBusy"
                },
                {
                    "altname": "LL_WR_DATA",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "16 bit write data to LinkList. 10 bits for EG, 11 for IG.",
                    "mode": "RW",
                    "name": "LLWrData"
                }
            ]
        },
        "mac_csr.LkBurstConfig": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "INTLKN_BURSTMAX",
                    "bit_lsb": 24,
                    "bit_msb": 26,
                    "description": "Interlaken BurstMax",
                    "mode": "RW",
                    "name": "LkBurstMax"
                },
                {
                    "altname": "INTLKN_BURSTMIN",
                    "bit_lsb": 16,
                    "bit_msb": 18,
                    "description": "Interlaken BurstMin",
                    "mode": "RW",
                    "name": "LkBurstMin"
                },
                {
                    "altname": "INTLKN_BURSTSHORT",
                    "bit_lsb": 8,
                    "bit_msb": 10,
                    "description": "Interlaken BurstShort",
                    "mode": "RW",
                    "name": "LkBurstShort"
                },
                {
                    "altname": "INTLKN_BURSTMAX_CHECK_DISABLE",
                    "bit_lsb": 2,
                    "bit_msb": 2,
                    "description": "Interlaken Burstmax Check Disable",
                    "mode": "RW",
                    "name": "LkBurstMaxChkDisable"
                },
                {
                    "altname": "INTLKN_BURSTMIN_CHECK_DISABLE",
                    "bit_lsb": 1,
                    "bit_msb": 1,
                    "description": "Interlaken Burstmin Check Disable",
                    "mode": "RW",
                    "name": "LkBurstMinChkDisable"
                }
            ]
        },
        "mac_csr.LkCalEnable": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "INTLKN_CAL_LAST",
                    "bit_lsb": 8,
                    "bit_msb": 18,
                    "description": "Interlaken Calendar Last Entry Number",
                    "mode": "RW",
                    "name": "LkCalLast"
                },
                {
                    "altname": "INTLKN_CAL_PROG_ENABLE",
                    "bit_lsb": 0,
                    "bit_msb": 0,
                    "description": "Interlaken Programmable Calendar enable",
                    "mode": "RW",
                    "name": "LkCalProgEnable"
                }
            ]
        },
        "mac_csr.LkCalProgAccess": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "INTLKN_CAL_PROG_CMD",
                    "bit_lsb": 24,
                    "bit_msb": 25,
                    "description": "Interlaken Calendar Access command",
                    "mode": "RW",
                    "name": "LkCalCmd"
                },
                {
                    "altname": "INTLKN_CAL_PROG_ADDR",
                    "bit_lsb": 0,
                    "bit_msb": 10,
                    "description": "Interlaken Prog Calendar Access address",
                    "mode": "RW",
                    "name": "LkCalAddr"
                }
            ]
        },
        "mac_csr.LkCalProgRdData": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "INTLKN_CAL_PROG_RD_DATA",
                    "bit_lsb": 0,
                    "bit_msb": 8,
                    "description": "Interlaken Prog Calendar Read data",
                    "mode": "RO",
                    "name": "LkCalProgRdData"
                }
            ]
        },
        "mac_csr.LkCalProgWrData": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "INTLKN_CAL_PROG_WR_DATA",
                    "bit_lsb": 0,
                    "bit_msb": 8,
                    "description": "Interlaken Prog Calendar Write data",
                    "mode": "RW",
                    "name": "LkCalProgWrData"
                }
            ]
        },
        "mac_csr.LkConfig": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "INTLKN_USER1",
                    "bit_lsb": 19,
                    "bit_msb": 19,
                    "description": "Unused, must be zero.",
                    "mode": "RW",
                    "name": "LkUser1"
                },
                {
                    "altname": "INTLKN_LA_2CHAN",
                    "bit_lsb": 18,
                    "bit_msb": 18,
                    "description": "Select number of channels for lookaside mode.  A value of 1 selects 2 channels, a value of 0 selects 4 channels.",
                    "mode": "RW",
                    "name": "LkLookAside2Chan"
                },
                {
                    "altname": "INTLKN_LA_MODE",
                    "bit_lsb": 17,
                    "bit_msb": 17,
                    "description": "Select lookaside mode when set to 1, else standard mode.",
                    "mode": "RW",
                    "name": "LkLookAsideMode"
                },
                {
                    "altname": "INTLKN_USER0",
                    "bit_lsb": 16,
                    "bit_msb": 16,
                    "description": "Unused, must be zero.",
                    "mode": "RW",
                    "name": "LkUser0"
                },
                {
                    "altname": "INTLKN_OOB_FC_RX2TX_LB",
                    "bit_lsb": 15,
                    "bit_msb": 15,
                    "description": "Enable rx-to-tx loopback on the out-of-band flow control path (internal flow control loopback).",
                    "mode": "RW",
                    "name": "LkFcRxToTxLb"
                },
                {
                    "altname": "INTLKN_DATA_RX2TX_LB",
                    "bit_lsb": 14,
                    "bit_msb": 14,
                    "description": "Enable rx-to-tx loopback data path (external data loopback).",
                    "mode": "RW",
                    "name": "LkDataRxToTxLb"
                },
                {
                    "altname": "INTLKN_OOB_FC_TX2RX_LB",
                    "bit_lsb": 13,
                    "bit_msb": 13,
                    "description": "Enable tx-to-rx loopback on the out-of-band flow control path (external flow control loopback).",
                    "mode": "RW",
                    "name": "LkFcTxToRxLb"
                },
                {
                    "altname": "INTLKN_DATA_TX2RX_LB",
                    "bit_lsb": 12,
                    "bit_msb": 12,
                    "description": "Enable tx-to-rx loopback data path (internal data loopback).",
                    "mode": "RW",
                    "name": "LkDataTxToRxLb"
                },
                {
                    "altname": "INTLKN_MEM_WAIT",
                    "bit_lsb": 8,
                    "bit_msb": 9,
                    "description": "The number of wait states to assume when accessing the memory for the statistics counters.\n0= Read data on the cycle following read enable/address\n1= Read data two cycles after read eanble/address.",
                    "mode": "RW",
                    "name": "LkMemWait"
                },
                {
                    "altname": "INTLKN_OOB_EN",
                    "bit_lsb": 7,
                    "bit_msb": 7,
                    "description": "When set to 1, out-of-band flow control is enabled.INBAND and OUTBAND should not be set to 1 at the same time.",
                    "mode": "RW",
                    "name": "LkOutBandEn"
                },
                {
                    "altname": "INTLKN_INBANDEN",
                    "bit_lsb": 6,
                    "bit_msb": 6,
                    "description": "When set to 1, the inband flow control is enabled. INBAND and OUTBAND should not be set to 1 at the same time.",
                    "mode": "RW",
                    "name": "LkInBandEn"
                },
                {
                    "altname": "INTLKN_MULTIUSE_EXT",
                    "bit_lsb": 5,
                    "bit_msb": 5,
                    "description": "When set to 1, the multiple-use field is used for external use (given by the i_tx_multiple_use[7:0] input). The state of o_rx_chanext_use would be at an unknown state.",
                    "mode": "RW",
                    "name": "LkMultExt"
                },
                {
                    "altname": "INTLKN_MULTIUSE_CHAN_EXT",
                    "bit_lsb": 4,
                    "bit_msb": 4,
                    "description": "When set to 1, the multiple-use field is used for channel number extention given by the i_tx_chanext input. The state of o_rx_multi_use would be at an unknown state.",
                    "mode": "RW",
                    "name": "LkMultCh"
                },
                {
                    "altname": "INTLKN_MULTIUSE_FC_EXT",
                    "bit_lsb": 3,
                    "bit_msb": 3,
                    "description": "When set to 1, the multiple-use field is for flow control extention. If more than one of the MULT_EXT, MULT_CH, and MULT_FC, are enabled the multipe_use field and o_rx_chanext are undefined.",
                    "mode": "RW",
                    "name": "LkMultFc"
                },
                {
                    "altname": "INTLKN_SCRAM_DISABLE",
                    "bit_lsb": 1,
                    "bit_msb": 1,
                    "description": "When 1, the scrambler of the 64/67 code is disabled. See the Miscellaneous Notes section of the User's Guide.",
                    "mode": "RW",
                    "name": "LkScramDis"
                },
                {
                    "altname": "INTLKN_SKIP_DISABLE",
                    "bit_lsb": 0,
                    "bit_msb": 0,
                    "description": "In the TX, when set to 1, the generation of skip words in the metaframe is disabled. In the RX, this bit has no function.",
                    "mode": "RW",
                    "name": "LkSkipDis"
                }
            ]
        },
        "mac_csr.LkControl": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "INTLKN_STATUS_MSG_CONTINUOUS",
                    "bit_lsb": 11,
                    "bit_msb": 11,
                    "description": "When set to 1, and STATUS_MSG_EN is set to a one, the RX send the status messaging on the out of band flow control on every calendar. When set to 0, and STATUS_MSG_EN is set to a one, the RX send the status messaging on the out of band flow control only when one of the enabled lanes identifies a problem. Note: STATUS_MSG_CONT is unused in the TX (0x018).",
                    "mode": "RW",
                    "name": "LkStatusMsgCont"
                },
                {
                    "altname": "INTLKN_STATUS_MSG_ENABLE",
                    "bit_lsb": 10,
                    "bit_msb": 10,
                    "description": "Enable the optional status messaging on the out of band flow control.",
                    "mode": "RW",
                    "name": "LkStatusMsgEn"
                },
                {
                    "altname": "INTLKN_DATA_ALL_ZERO",
                    "bit_lsb": 7,
                    "bit_msb": 7,
                    "description": "When set to 1, the serdes data is forced to all zeros. This is typically used in conjunction with tx_to_rx loopback on the data path which is enabled in registers 0x010, 0x020.",
                    "mode": "RW",
                    "name": "LkDataOutKill"
                },
                {
                    "altname": "INTLKN_FC_OOB_ALL_ZERO",
                    "bit_lsb": 6,
                    "bit_msb": 6,
                    "description": "When set to 1, o_tx_fcob is forced to all zeros, regardless of the out-of-band flow control received from the Interlaken Interface.",
                    "mode": "RW",
                    "name": "LkFcOutKill"
                },
                {
                    "altname": "INTLKN_DISPARITY_DISABLE",
                    "bit_lsb": 4,
                    "bit_msb": 4,
                    "description": "When set to 1, the disparity portion of the 64/67 code is disabled.",
                    "mode": "RW",
                    "name": "LkDispDis"
                },
                {
                    "altname": "INTLKN_CRC24_DISABLE",
                    "bit_lsb": 3,
                    "bit_msb": 3,
                    "description": "When set to 1, the control word crc24 is disabled.",
                    "mode": "RW",
                    "name": "LkCrc24Dis"
                },
                {
                    "altname": "INTLKN_CRC32_DISABLE",
                    "bit_lsb": 2,
                    "bit_msb": 2,
                    "description": "When set to 1, the per serdes lane crc32 is disabled.",
                    "mode": "RW",
                    "name": "LkCrc32Dis"
                },
                {
                    "altname": "INTLKN_UNALIGN_XOFF_DISABLE",
                    "bit_lsb": 1,
                    "bit_msb": 1,
                    "description": "When set to 0, if the receiver is not in the aligned state, XOFF will be sent on the flow control, if enabled. When set to 1, receiver alignment state does not affect flow control.",
                    "mode": "RW",
                    "name": "LkUnalignXoffDis"
                }
            ]
        },
        "mac_csr.LkDebugControl": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "INTLKN_DEBUG_BYTE3",
                    "bit_lsb": 30,
                    "bit_msb": 31,
                    "description": "Interlaken Debug which byte of the selected internal debug bus to use bits[31:24] of the debug output.",
                    "mode": "RW",
                    "name": "LkDebugByte3"
                },
                {
                    "altname": "INTLKN_DEBUG_BUS3",
                    "bit_lsb": 24,
                    "bit_msb": 29,
                    "description": "Interlaken Debug which internal debug busses to use bits[31:24] of the debug output.",
                    "mode": "RW",
                    "name": "LkDebugBus3"
                },
                {
                    "altname": "INTLKN_DEBUG_BYTE2",
                    "bit_lsb": 22,
                    "bit_msb": 23,
                    "description": "Interlaken Debug which byte of the selected internal debug bus to use bits[23:16] of the debug output.",
                    "mode": "RW",
                    "name": "LkDebugByte2"
                },
                {
                    "altname": "INTLKN_DEBUG_BUS2",
                    "bit_lsb": 16,
                    "bit_msb": 21,
                    "description": "Interlaken Debug which internal debug busses to use bits[23:16] of the debug output.",
                    "mode": "RW",
                    "name": "LkDebugBus2"
                },
                {
                    "altname": "INTLKN_DEBUG_BYTE1",
                    "bit_lsb": 14,
                    "bit_msb": 15,
                    "description": "Interlaken Debug which byte of the selected internal debug bus to use bits[15:8] of the debug output.",
                    "mode": "RW",
                    "name": "LkDebugByte1"
                },
                {
                    "altname": "INTLKN_DEBUG_BUS1",
                    "bit_lsb": 8,
                    "bit_msb": 13,
                    "description": "Interlaken Debug which internal debug busses to use bits[15:8] of the debug output.",
                    "mode": "RW",
                    "name": "LkDebugBus1"
                },
                {
                    "altname": "INTLKN_DEBUG_BYTE0",
                    "bit_lsb": 6,
                    "bit_msb": 7,
                    "description": "Interlaken Debug which byte of the selected internal debug bus to use bits[7:0] of the debug output.",
                    "mode": "RW",
                    "name": "LkDebugByte0"
                },
                {
                    "altname": "INTLKN_DEBUG_BUS0",
                    "bit_lsb": 0,
                    "bit_msb": 5,
                    "description": "Interlaken Debug which internal debug busses to use bits[7:0] of the debug output.",
                    "mode": "RW",
                    "name": "LkDebugBus0"
                }
            ]
        },
        "mac_csr.LkDebugHold": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "INTLKN_DEBUG_HOLD",
                    "bit_lsb": 0,
                    "bit_msb": 31,
                    "description": "Debug: For each bit that is set to 1, the corresponding bit in the debug output will latch and hold when it sees a high value on the selected debug bit.",
                    "mode": "RW",
                    "name": "LkDebugHold"
                }
            ]
        },
        "mac_csr.LkDebugObserve": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "INTLKN_DEBUG_RDATA",
                    "bit_lsb": 0,
                    "bit_msb": 31,
                    "description": "The data that is currently on the debug outputs (perhaps after a few clock cycles of latency).",
                    "mode": "RO",
                    "name": "LkDebugRdata"
                }
            ]
        },
        "mac_csr.LkInfo": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "INTLKN_MAX_CHANNEL",
                    "bit_lsb": 24,
                    "bit_msb": 31,
                    "description": "The value of SLE_MAX_CHAN that is set in the rtl defines. This sets the number of per channel statistics counters that are kept.",
                    "mode": "RO",
                    "name": "LkMaxChan"
                },
                {
                    "altname": "INTLKN_MAX_CALENDAR",
                    "bit_lsb": 14,
                    "bit_msb": 23,
                    "description": "The value of SLE_MAX_CAL that is set in the rtl defines. ",
                    "mode": "RO",
                    "name": "LkMaxCal"
                },
                {
                    "altname": "INTLKN_MAX_SERDES",
                    "bit_lsb": 8,
                    "bit_msb": 13,
                    "description": "The value of SLE_MAX_SERDES that is set in the rtl defines. This sets the maximum depth of programmable calculator that will be supported.",
                    "mode": "RO",
                    "name": "LkMaxSerDes"
                },
                {
                    "altname": "INTLKN_MAJOR_REV",
                    "bit_lsb": 4,
                    "bit_msb": 7,
                    "description": "Indicates the major version of the SLE Interlaken RTL.",
                    "mode": "RO",
                    "name": "LkMajorRev"
                },
                {
                    "altname": "INTLKN_MINOR_REV",
                    "bit_lsb": 0,
                    "bit_msb": 3,
                    "description": "Indicates the minor version of the SLE Interlaken RTL.",
                    "mode": "RO",
                    "name": "LkMinorRev"
                }
            ]
        },
        "mac_csr.LkInfo2": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "INTLKN_TX_FIFO_DEPTH",
                    "bit_lsb": 0,
                    "bit_msb": 7,
                    "description": "The value of SLE_TX_FIFO_DEPTH that is set in the rtl defines.",
                    "mode": "RO",
                    "name": "LkTxFifoDepth"
                }
            ]
        },
        "mac_csr.LkLaneDisable": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "INTLKN_LANE_DISABLE",
                    "bit_lsb": 0,
                    "bit_msb": 23,
                    "description": "When set to 1, the logic driving the corresponding serdes lane is disabled. When set to 0, the logic for the corresponding serdes lane is enabled, if it exists.",
                    "mode": "RW",
                    "name": "LkLaneDisable"
                }
            ]
        },
        "mac_csr.LkLaneReMapping11to6": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "INTLKN_LANE11_REMAP",
                    "bit_lsb": 25,
                    "bit_msb": 29,
                    "description": "Interlaken Physical Remap for lane 11",
                    "mode": "RW",
                    "name": "LkLaneReMap11"
                },
                {
                    "altname": "INTLKN_LANE10_REMAP",
                    "bit_lsb": 20,
                    "bit_msb": 24,
                    "description": "Interlaken Physical Remap for lane 10",
                    "mode": "RW",
                    "name": "LkLaneReMap10"
                },
                {
                    "altname": "INTLKN_LANE9_REMAP",
                    "bit_lsb": 15,
                    "bit_msb": 19,
                    "description": "Interlaken Physical Remap for lane 9",
                    "mode": "RW",
                    "name": "LkLaneReMap9"
                },
                {
                    "altname": "INTLKN_LANE8_REMAP",
                    "bit_lsb": 10,
                    "bit_msb": 14,
                    "description": "Interlaken Physical Remap for lane 8",
                    "mode": "RW",
                    "name": "LkLaneReMap8"
                },
                {
                    "altname": "INTLKN_LANE7_REMAP",
                    "bit_lsb": 5,
                    "bit_msb": 9,
                    "description": "Interlaken Physical Remap for lane 7",
                    "mode": "RW",
                    "name": "LkLaneReMap7"
                },
                {
                    "altname": "INTLKN_LANE6_REMAP",
                    "bit_lsb": 0,
                    "bit_msb": 4,
                    "description": "Interlaken Physical Remap for lane 6",
                    "mode": "RW",
                    "name": "LkLaneReMap6"
                }
            ]
        },
        "mac_csr.LkLaneReMapping5to0": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "INTLKN_LANE5_REMAP",
                    "bit_lsb": 25,
                    "bit_msb": 29,
                    "description": "Interlaken Physical Remap for lane 5",
                    "mode": "RW",
                    "name": "LkLaneReMap5"
                },
                {
                    "altname": "INTLKN_LANE4_REMAP",
                    "bit_lsb": 20,
                    "bit_msb": 24,
                    "description": "Interlaken Physical Remap for lane 4",
                    "mode": "RW",
                    "name": "LkLaneReMap4"
                },
                {
                    "altname": "INTLKN_LANE3_REMAP",
                    "bit_lsb": 15,
                    "bit_msb": 19,
                    "description": "Interlaken Physical Remap for lane 3",
                    "mode": "RW",
                    "name": "LkLaneReMap3"
                },
                {
                    "altname": "INTLKN_LANE2_REMAP",
                    "bit_lsb": 10,
                    "bit_msb": 14,
                    "description": "Interlaken Physical Remap for lane 2",
                    "mode": "RW",
                    "name": "LkLaneReMap2"
                },
                {
                    "altname": "INTLKN_LANE1_REMAP",
                    "bit_lsb": 5,
                    "bit_msb": 9,
                    "description": "Interlaken Physical Remap for lane 1",
                    "mode": "RW",
                    "name": "LkLaneReMap1"
                },
                {
                    "altname": "INTLKN_LANE0_REMAP",
                    "bit_lsb": 0,
                    "bit_msb": 4,
                    "description": "Interlaken Physical Remap for lane 0",
                    "mode": "RW",
                    "name": "LkLaneReMap0"
                }
            ]
        },
        "mac_csr.LkMetaFrameSyncPeriod": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "INTLKN_METAFRAME_SYNC_PERIOD",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "Interlaken MetFrame Sync Period",
                    "mode": "RW",
                    "name": "LkMetaFrameSyncPeriod"
                }
            ]
        },
        "mac_csr.LkRxAlignStatus": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "INTLKN_RX_ALIGNED",
                    "bit_lsb": 23,
                    "bit_msb": 23,
                    "description": "Indicates that the interface is in alignment. This signal is also available as the o_rx_align output from both the sle_lake_rx_wrap and sle_interlaken_top modules. When this bit changes, the ALIGN_CHANGE bit gets set in the RX Interrupt Registers.",
                    "mode": "RO",
                    "name": "LkRxAligned"
                },
                {
                    "altname": "INTLKN_RX_ALIGN_ERR",
                    "bit_lsb": 22,
                    "bit_msb": 22,
                    "description": "An invalid synchronization pattern has been found. The status bit is a one shot pulse so it will most likely not be seen on an MMR read.",
                    "mode": "RO",
                    "name": "LkRxAlignErr"
                }
            ]
        },
        "mac_csr.LkRxBadCtlError": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "INTLKN_RX_BAD_CTL_ERROR",
                    "bit_lsb": 0,
                    "bit_msb": 23,
                    "description": "The Bad Control Word Error for the lanes. Bit [0] for lane 0, etc.",
                    "mode": "RW1C",
                    "name": "LkRxBadCtlError"
                }
            ]
        },
        "mac_csr.LkRxCdrError": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "INTLKN_RX_CDR_ERROR",
                    "bit_lsb": 0,
                    "bit_msb": 23,
                    "description": "The Assumed CDR lost status for the lanes. Bit [0] for lane 0, etc.",
                    "mode": "RW1C",
                    "name": "LkRxCdrError"
                }
            ]
        },
        "mac_csr.LkRxCdrLostCntFill": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "INTLKN_RX_CDR_LOST_CNT_FILL",
                    "bit_lsb": 0,
                    "bit_msb": 23,
                    "description": "The half full status for the RX_CDR_Error counters. Bit [0] for lane 0, etc.",
                    "mode": "RO",
                    "name": "LkRxCdrLostCntFill"
                }
            ]
        },
        "mac_csr.LkRxCrc32CntFill": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "INTLKN_RX_CRC32_CNT_FILL",
                    "bit_lsb": 0,
                    "bit_msb": 23,
                    "description": "The half full status for the RX_Lane_CRC_Error counters. Bit [0] for lane 0, etc.",
                    "mode": "RO",
                    "name": "LkRxCrc32CntFill"
                }
            ]
        },
        "mac_csr.LkRxCrc32Error": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "INTLKN_RX_CRC32_ERROR",
                    "bit_lsb": 0,
                    "bit_msb": 23,
                    "description": "The CRC32 Error for the lanes. Bit [0] for lane 0, etc.",
                    "mode": "RW1C",
                    "name": "LkRxCrc32Error"
                }
            ]
        },
        "mac_csr.LkRxDebugObserve": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "INTLKN_DEBUG_RDATA",
                    "bit_lsb": 0,
                    "bit_msb": 31,
                    "description": "The data that is currently on the debug outputs (perhaps after a few clock cycles of latency).",
                    "mode": "RO",
                    "name": "LkDebugRdata"
                }
            ]
        },
        "mac_csr.LkRxInterrupt": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "INTLKN_RXINT_CTLBIT_ERR",
                    "bit_lsb": 31,
                    "bit_msb": 31,
                    "description": "Control Word Bit Error. A control word looked like a valid synchronization or skip word, but bit [55:0] of the word did not match the expected value.",
                    "mode": "RW1C",
                    "name": "LkRxIntCtlBitErr"
                },
                {
                    "altname": "INTLKN_RXINT_MF_ERR",
                    "bit_lsb": 29,
                    "bit_msb": 29,
                    "description": "For one or more of the enabled lanes, a valid synchronization word was not received at the metaframe period. SLE_RX_MF_ERR (0x3AC) must be cleared before MF_ERR will clear.",
                    "mode": "RW1C",
                    "name": "LkRxIntMfErr"
                },
                {
                    "altname": "INTLKN_RXINT_BAD_CTL_ERR",
                    "bit_lsb": 28,
                    "bit_msb": 28,
                    "description": "A control word was received that does not match one of the defined control word types. SLE_RX_BADCTL_ERR MMR (0x3B0) must be cleared before BADCTL_ERR bit[28] will clear.",
                    "mode": "RW1C",
                    "name": "LkRxIntBadCtlErr"
                },
                {
                    "altname": "INTLKN_RXINT_SCRAM_ERR",
                    "bit_lsb": 27,
                    "bit_msb": 27,
                    "description": "For one or more enabled lanes, a scrambler state word did not match its expected value. SLE_RX_SCRAM_ERR (0x3B4) must be cleared before SCRAM_ERR will clear.",
                    "mode": "RW1C",
                    "name": "LkRxIntScRamErr"
                },
                {
                    "altname": "INTLKN_RXINT_CRC32_ERR",
                    "bit_lsb": 26,
                    "bit_msb": 26,
                    "description": "For one or more enabled lanes, a CRC32 error was reported. SLE_RX_CRC32_ERR (0x3B8) must be cleared before CRC32_ERR will clear.",
                    "mode": "RW1C",
                    "name": "LkRxIntCrc32Err"
                },
                {
                    "altname": "INTLKN_RXINT_CDR_ERR",
                    "bit_lsb": 25,
                    "bit_msb": 25,
                    "description": "For one or more enabled lanes, the i_rx_serdes_valid input is low. SLE_RX_CDR_ERR (0x3BC) must be cleared before CDR_ERR will clear.",
                    "mode": "RW1C",
                    "name": "LkRxIntCdrErr"
                },
                {
                    "altname": "INTLKN_RXINT_WRD_SYNC_CHANGE",
                    "bit_lsb": 24,
                    "bit_msb": 24,
                    "description": "For one or more enabled lanes, the 64b/67b synchronization has changed, either from out of sync to in sync or from in sync to out of sync. SLE_RX_WRD SYNC MMR (0x3C0) must be cleared before WRD_SYN_CHANGE bit[24] will clear. A flow diagram for achieving and maintaining 64B/67B word boundary lock is shown in figure 5-10 on page 25 of the Interlaken Protocol Definition. Once we get sync ( the middle64B/67B word lock state in the diagram) we need to get 16 out of 64 words with bad framing bits in order to go out of sync, the upper and lower values are set by 0x218 : Receive Control Register.",
                    "mode": "RW1C",
                    "name": "LkRxIntWdSyncChange"
                },
                {
                    "altname": "INTLKN_RXINT_ALIGN_CHANGE",
                    "bit_lsb": 23,
                    "bit_msb": 23,
                    "description": "The alignment state has changed, either from out of alignment to aligned or from aligned to out of alignment.",
                    "mode": "RW1C",
                    "name": "LkRxIntAlignChange"
                },
                {
                    "altname": "INTLKN_RXINT_ALIGN_ERR",
                    "bit_lsb": 22,
                    "bit_msb": 22,
                    "description": "An alignment error occurred (synchronization word not seen on all lanes at the same time).",
                    "mode": "RW1C",
                    "name": "LkRxIntAlignErr"
                },
                {
                    "altname": "INTLKN_RXINT_BURST_ERR",
                    "bit_lsb": 21,
                    "bit_msb": 21,
                    "description": "A protocol error occurred in the datapath related to the burst delineation logic.",
                    "mode": "RW1C",
                    "name": "LkRxIntBurstErr"
                },
                {
                    "altname": "INTLKN_RXINT_BMIN_ERR",
                    "bit_lsb": 20,
                    "bit_msb": 20,
                    "description": "A BurstMin violation was detected.",
                    "mode": "RW1C",
                    "name": "LkRxIntBminErr"
                },
                {
                    "altname": "INTLKN_RXINT_BMAX_ERR",
                    "bit_lsb": 19,
                    "bit_msb": 19,
                    "description": "A BurstMax violation was detected.",
                    "mode": "RW1C",
                    "name": "LkRxIntBmaxErr"
                },
                {
                    "altname": "INTLKN_RXINT_CRC24_ERR",
                    "bit_lsb": 18,
                    "bit_msb": 18,
                    "description": "A burst CRC24 error was detected.",
                    "mode": "RW1C",
                    "name": "LkRxIntCrc24Err"
                },
                {
                    "altname": "INTLKN_RXINT_FC_ERR",
                    "bit_lsb": 17,
                    "bit_msb": 17,
                    "description": "For one or more enabled lanes, a CRC32 error was reported. SLE_RX_CRC32_ERR (0x3B8) must be cleared before CRC32_ERR will clear.",
                    "mode": "RW1C",
                    "name": "LkRxIntFcErr"
                },
                {
                    "altname": "INTLKN_RXINT_STATUS_MESSAGE_CHANGE",
                    "bit_lsb": 16,
                    "bit_msb": 16,
                    "description": "When this interrupt is set, it indicates that the diagnostics word's status message has changed. The status message can be seen in register 0x3C8 : Status Message Received.",
                    "mode": "RW1C",
                    "name": "LkRxIntStatusMessageChange"
                },
                {
                    "altname": "INTLKN_RXINT_CNT_UNCORRECTABLE",
                    "bit_lsb": 15,
                    "bit_msb": 15,
                    "description": "One of the statistics counters had an uncorrectable parity or ECC error.",
                    "mode": "RW1C",
                    "name": "LkRxIntCntUnCorr"
                },
                {
                    "altname": "INTLKN_RXINT_CNT_CORRECTABLE",
                    "bit_lsb": 14,
                    "bit_msb": 14,
                    "description": "One of the statistics counters had a correctable ECC error.",
                    "mode": "RW1C",
                    "name": "LkRxIntCntCorr"
                },
                {
                    "altname": "INTLKN_RXINT_BAD_CTL_CNT_FILL",
                    "bit_lsb": 13,
                    "bit_msb": 13,
                    "description": "The RX_Bad_Control_Error counter is over half full.",
                    "mode": "RW1C",
                    "name": "LkRxIntBadCtlCntFill"
                },
                {
                    "altname": "INTLKN_RXINT_CRC32_CNT_FILL",
                    "bit_lsb": 10,
                    "bit_msb": 10,
                    "description": "One or more of the per lane RX_Lane_CRC_Error counters is over half full.",
                    "mode": "RW1C",
                    "name": "LkRxIntCrc32CntFill"
                },
                {
                    "altname": "INTLKN_RXINT_CDR_CNT_FILL",
                    "bit_lsb": 9,
                    "bit_msb": 9,
                    "description": "One or more of the per lane RX_CDR_Error counters is over half full.",
                    "mode": "RW1C",
                    "name": "LkRxIntCdrCntFill"
                },
                {
                    "altname": "INTLKN_RXINT_WRD_SYNC_CNT_FILL",
                    "bit_lsb": 8,
                    "bit_msb": 8,
                    "description": "One or more of the per lane RX_Word_Sync_Error counters is over half full.",
                    "mode": "RW1C",
                    "name": "LkRxIntWrdSyncCntFill"
                },
                {
                    "altname": "INTLKN_RXINT_ALIGN_FAIL_CNT_FILL",
                    "bit_lsb": 7,
                    "bit_msb": 7,
                    "description": "The RX_Alignment_Failure counter is over half full.",
                    "mode": "RW1C",
                    "name": "LkRxIntAlignFailCntFill"
                },
                {
                    "altname": "INTLKN_RXINT_ALIGN_CNT_FILL",
                    "bit_lsb": 6,
                    "bit_msb": 6,
                    "description": "The RX_Alignment Error counter is over half full.",
                    "mode": "RW1C",
                    "name": "LkRxIntAliCntFill"
                },
                {
                    "altname": "INTLKN_RXINT_BURST_CNT_FILL",
                    "bit_lsb": 5,
                    "bit_msb": 5,
                    "description": "The RX_Burst_Error counter is over half full.",
                    "mode": "RW1C",
                    "name": "LkRxIntBurstCntFill"
                },
                {
                    "altname": "INTLKN_RXINT_BMIN_CNT_FILL",
                    "bit_lsb": 4,
                    "bit_msb": 4,
                    "description": "The RX_Burst Min error counter is over half full.",
                    "mode": "RW1C",
                    "name": "LkRxIntBminCntFill"
                },
                {
                    "altname": "INTLKN_RXINT_BMAX_CNT_FILL",
                    "bit_lsb": 3,
                    "bit_msb": 3,
                    "description": "The RX_Burst_Max_Error counter is over half full.",
                    "mode": "RW1C",
                    "name": "LkRxIntBmaxCntFill"
                },
                {
                    "altname": "INTLKN_RXINT_CRC24_CNT_FILL",
                    "bit_lsb": 2,
                    "bit_msb": 2,
                    "description": "The RX_CRC24_Error counter is over half full.",
                    "mode": "RW1C",
                    "name": "LkRxIntCrc24CntFill"
                },
                {
                    "altname": "INTLKN_RXINT_FC_CNT_FILL",
                    "bit_lsb": 1,
                    "bit_msb": 1,
                    "description": "The in band flow control error counter is over half full. Note, this error does not occur in Look-Aside mode.",
                    "mode": "RW1C",
                    "name": "LkRxIntFcCntFill"
                },
                {
                    "altname": "INTLKN_RXINT_CHAN_CNT_FILL",
                    "bit_lsb": 0,
                    "bit_msb": 0,
                    "description": "One or more per channel statistics counters (RX_Bytes, RX_Packets, and/or RX_Bad_Packets) are over half full.",
                    "mode": "RW1C",
                    "name": "LkRxIntChanCntFill"
                }
            ]
        },
        "mac_csr.LkRxInterruptForce": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "INTLKN_RXINT_CTLBIT_ERR_FORCE",
                    "bit_lsb": 31,
                    "bit_msb": 31,
                    "description": "Interrupt Force",
                    "mode": "RW",
                    "name": "LkRxIntCtlBitErrForce"
                },
                {
                    "altname": "INTLKN_RXINT_MF_ERR_FORCE",
                    "bit_lsb": 29,
                    "bit_msb": 29,
                    "description": "Interrupt Force.",
                    "mode": "RW",
                    "name": "LkRxIntMfErrForce"
                },
                {
                    "altname": "INTLKN_RXINT_BAD_CTL_ERR_FORCE",
                    "bit_lsb": 28,
                    "bit_msb": 28,
                    "description": "Interrupt Force.",
                    "mode": "RW",
                    "name": "LkRxIntBadCtlErrForce"
                },
                {
                    "altname": "INTLKN_RXINT_SCRAM_ERR_FORCE",
                    "bit_lsb": 27,
                    "bit_msb": 27,
                    "description": "Interrupt Force.",
                    "mode": "RW",
                    "name": "LkRxIntScRamErrForce"
                },
                {
                    "altname": "INTLKN_RXINT_CRC32_ERR_FORCE",
                    "bit_lsb": 26,
                    "bit_msb": 26,
                    "description": "Interrupt Force.",
                    "mode": "RW",
                    "name": "LkRxIntCrc32ErrForce"
                },
                {
                    "altname": "INTLKN_RXINT_CDR_ERR_FORCE",
                    "bit_lsb": 25,
                    "bit_msb": 25,
                    "description": "Interrupt Force.",
                    "mode": "RW",
                    "name": "LkRxIntCdrErrForce"
                },
                {
                    "altname": "INTLKN_RXINT_WRD_SYNC_CHANGE_FORCE",
                    "bit_lsb": 24,
                    "bit_msb": 24,
                    "description": "Interrupt Force.",
                    "mode": "RW",
                    "name": "LkRxIntWdSyncChangeForce"
                },
                {
                    "altname": "INTLKN_RXINT_ALIGN_CHANGE_FORCE",
                    "bit_lsb": 23,
                    "bit_msb": 23,
                    "description": "Interrupt Force.",
                    "mode": "RW",
                    "name": "LkRxIntAlignChangeForce"
                },
                {
                    "altname": "INTLKN_RXINT_ALIGN_ERR_FORCE",
                    "bit_lsb": 22,
                    "bit_msb": 22,
                    "description": "Interrupt Force.",
                    "mode": "RW",
                    "name": "LkRxIntAlignErrForce"
                },
                {
                    "altname": "INTLKN_RXINT_BURST_ERR_FORCE",
                    "bit_lsb": 21,
                    "bit_msb": 21,
                    "description": "Interrupt Force.",
                    "mode": "RW",
                    "name": "LkRxIntBurstErrForce"
                },
                {
                    "altname": "INTLKN_RXINT_BMIN_ERR_FORCE",
                    "bit_lsb": 20,
                    "bit_msb": 20,
                    "description": "Interrupt Force.",
                    "mode": "RW",
                    "name": "LkRxIntBminErrForce"
                },
                {
                    "altname": "INTLKN_RXINT_BMAX_ERR_FORCE",
                    "bit_lsb": 19,
                    "bit_msb": 19,
                    "description": "Interrupt Force.",
                    "mode": "RW",
                    "name": "LkRxIntBmaxErrForce"
                },
                {
                    "altname": "INTLKN_RXINT_CRC24_ERR_FORCE",
                    "bit_lsb": 18,
                    "bit_msb": 18,
                    "description": "Interrupt Force.",
                    "mode": "RW",
                    "name": "LkRxIntCrc24ErrForce"
                },
                {
                    "altname": "INTLKN_RXINT_FC_ERR_FORCE",
                    "bit_lsb": 17,
                    "bit_msb": 17,
                    "description": "Interrupt Force.",
                    "mode": "RW",
                    "name": "LkRxIntFcErrForce"
                },
                {
                    "altname": "INTLKN_RXINT_STATUS_MESSAGE_CHANGE_FORCE",
                    "bit_lsb": 16,
                    "bit_msb": 16,
                    "description": "Interrupt Force.",
                    "mode": "RW",
                    "name": "LkRxIntStatusMessageChangeForce"
                },
                {
                    "altname": "INTLKN_RXINT_CNT_UNCORRECTABLE_FORCE",
                    "bit_lsb": 15,
                    "bit_msb": 15,
                    "description": "Interrupt Force.",
                    "mode": "RW",
                    "name": "LkRxIntCntUnCorrForce"
                },
                {
                    "altname": "INTLKN_RXINT_CNT_CORRECTABLE_FORCE",
                    "bit_lsb": 14,
                    "bit_msb": 14,
                    "description": "Interrupt Force.",
                    "mode": "RW",
                    "name": "LkRxIntCntCorrForce"
                },
                {
                    "altname": "INTLKN_RXINT_BAD_CTL_CNT_FILL_FORCE",
                    "bit_lsb": 13,
                    "bit_msb": 13,
                    "description": "Interrupt Force.",
                    "mode": "RW",
                    "name": "LkRxIntBadCtlCntFillForce"
                },
                {
                    "altname": "INTLKN_RXINT_CRC32_CNT_FILL_FORCE",
                    "bit_lsb": 10,
                    "bit_msb": 10,
                    "description": "Interrupt Force.",
                    "mode": "RW",
                    "name": "LkRxIntCrc32CntFillForce"
                },
                {
                    "altname": "INTLKN_RXINT_CDR_CNT_FILL_FORCE",
                    "bit_lsb": 9,
                    "bit_msb": 9,
                    "description": "Interrupt Force.",
                    "mode": "RW",
                    "name": "LkRxIntCdrCntFillForce"
                },
                {
                    "altname": "INTLKN_RXINT_WRD_SYNC_CNT_FILL_FORCE",
                    "bit_lsb": 8,
                    "bit_msb": 8,
                    "description": "Interrupt Force.",
                    "mode": "RW",
                    "name": "LkRxIntWrdSyncCntFillForce"
                },
                {
                    "altname": "INTLKN_RXINT_ALIGN_FAIL_CNT_FILL_FORCE",
                    "bit_lsb": 7,
                    "bit_msb": 7,
                    "description": "Interrupt Force.",
                    "mode": "RW",
                    "name": "LkRxIntAlignFailCntFillForce"
                },
                {
                    "altname": "INTLKN_RXINT_ALIGN_CNT_FILL_FORCE",
                    "bit_lsb": 6,
                    "bit_msb": 6,
                    "description": "Interrupt Force.",
                    "mode": "RW",
                    "name": "LkRxIntAliCntFillForce"
                },
                {
                    "altname": "INTLKN_RXINT_BURST_CNT_FILL_FORCE",
                    "bit_lsb": 5,
                    "bit_msb": 5,
                    "description": "Interrupt Force.",
                    "mode": "RW",
                    "name": "LkRxIntBurstCntFillForce"
                },
                {
                    "altname": "INTLKN_RXINT_BMIN_CNT_FILL_FORCE",
                    "bit_lsb": 4,
                    "bit_msb": 4,
                    "description": "Interrupt Force.",
                    "mode": "RW",
                    "name": "LkRxIntBminCntFillForce"
                },
                {
                    "altname": "INTLKN_RXINT_BMAX_CNT_FILL_FORCE",
                    "bit_lsb": 3,
                    "bit_msb": 3,
                    "description": "Interrupt Force.",
                    "mode": "RW",
                    "name": "LkRxIntBmaxCntFillForce"
                },
                {
                    "altname": "INTLKN_RXINT_CRC24_CNT_FILL_FORCE",
                    "bit_lsb": 2,
                    "bit_msb": 2,
                    "description": "Interrupt Force.",
                    "mode": "RW",
                    "name": "LkRxIntCrc24CntFillForce"
                },
                {
                    "altname": "INTLKN_RXINT_FC_CNT_FILL_FORCE",
                    "bit_lsb": 1,
                    "bit_msb": 1,
                    "description": "Interrupt Force.",
                    "mode": "RW",
                    "name": "LkRxIntFcCntFillForce"
                },
                {
                    "altname": "INTLKN_RXINT_CHAN_CNT_FILL_FORCE",
                    "bit_lsb": 0,
                    "bit_msb": 0,
                    "description": "Interrupt Force.",
                    "mode": "RW",
                    "name": "LkRxIntChanCntFillForce"
                }
            ]
        },
        "mac_csr.LkRxInterruptMask": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "INTLKN_RXINT_CTLBIT_ERR_MASK",
                    "bit_lsb": 31,
                    "bit_msb": 31,
                    "description": "Interrupt Mask",
                    "mode": "RW",
                    "name": "LkRxIntCtlBitErrMask"
                },
                {
                    "altname": "INTLKN_RXINT_MF_ERR_MASK",
                    "bit_lsb": 29,
                    "bit_msb": 29,
                    "description": "Interrupt Mask.",
                    "mode": "RW",
                    "name": "LkRxIntMfErrMask"
                },
                {
                    "altname": "INTLKN_RXINT_BAD_CTL_ERR_MASK",
                    "bit_lsb": 28,
                    "bit_msb": 28,
                    "description": "Interrupt Mask.",
                    "mode": "RW",
                    "name": "LkRxIntBadCtlErrMask"
                },
                {
                    "altname": "INTLKN_RXINT_SCRAM_ERR_MASK",
                    "bit_lsb": 27,
                    "bit_msb": 27,
                    "description": "Interrupt Mask.",
                    "mode": "RW",
                    "name": "LkRxIntScRamErrMask"
                },
                {
                    "altname": "INTLKN_RXINT_CRC32_ERR_MASK",
                    "bit_lsb": 26,
                    "bit_msb": 26,
                    "description": "Interrupt Mask.",
                    "mode": "RW",
                    "name": "LkRxIntCrc32ErrMask"
                },
                {
                    "altname": "INTLKN_RXINT_CDR_ERR_MASK",
                    "bit_lsb": 25,
                    "bit_msb": 25,
                    "description": "Interrupt Mask.",
                    "mode": "RW",
                    "name": "LkRxIntCdrErrMask"
                },
                {
                    "altname": "INTLKN_RXINT_WRD_SYNC_CHANGE_MASK",
                    "bit_lsb": 24,
                    "bit_msb": 24,
                    "description": "Interrupt Mask.",
                    "mode": "RW",
                    "name": "LkRxIntWdSyncChangeMask"
                },
                {
                    "altname": "INTLKN_RXINT_ALIGN_CHANGE_MASK",
                    "bit_lsb": 23,
                    "bit_msb": 23,
                    "description": "Interrupt Mask.",
                    "mode": "RW",
                    "name": "LkRxIntAlignChangeMask"
                },
                {
                    "altname": "INTLKN_RXINT_ALIGN_ERR_MASK",
                    "bit_lsb": 22,
                    "bit_msb": 22,
                    "description": "Interrupt Mask.",
                    "mode": "RW",
                    "name": "LkRxIntAlignErrMask"
                },
                {
                    "altname": "INTLKN_RXINT_BURST_ERR_MASK",
                    "bit_lsb": 21,
                    "bit_msb": 21,
                    "description": "Interrupt Mask.",
                    "mode": "RW",
                    "name": "LkRxIntBurstErrMask"
                },
                {
                    "altname": "INTLKN_RXINT_BMIN_ERR_MASK",
                    "bit_lsb": 20,
                    "bit_msb": 20,
                    "description": "Interrupt Mask.",
                    "mode": "RW",
                    "name": "LkRxIntBminErrMask"
                },
                {
                    "altname": "INTLKN_RXINT_BMAX_ERR_MASK",
                    "bit_lsb": 19,
                    "bit_msb": 19,
                    "description": "Interrupt Mask.",
                    "mode": "RW",
                    "name": "LkRxIntBmaxErrMask"
                },
                {
                    "altname": "INTLKN_RXINT_CRC24_ERR_MASK",
                    "bit_lsb": 18,
                    "bit_msb": 18,
                    "description": "Interrupt Mask.",
                    "mode": "RW",
                    "name": "LkRxIntCrc24ErrMask"
                },
                {
                    "altname": "INTLKN_RXINT_FC_ERR_MASK",
                    "bit_lsb": 17,
                    "bit_msb": 17,
                    "description": "Interrupt Mask.",
                    "mode": "RW",
                    "name": "LkRxIntFcErrMask"
                },
                {
                    "altname": "INTLKN_RXINT_STATUS_MESSAGE_CHANGE_MASK",
                    "bit_lsb": 16,
                    "bit_msb": 16,
                    "description": "Interrupt Mask.",
                    "mode": "RW",
                    "name": "LkRxIntStatusMessageChangeMask"
                },
                {
                    "altname": "INTLKN_RXINT_CNT_UNCORRECTABLE_MASK",
                    "bit_lsb": 15,
                    "bit_msb": 15,
                    "description": "Interrupt Mask.",
                    "mode": "RW",
                    "name": "LkRxIntCntUnCorrMask"
                },
                {
                    "altname": "INTLKN_RXINT_CNT_CORRECTABLE_MASK",
                    "bit_lsb": 14,
                    "bit_msb": 14,
                    "description": "Interrupt Mask.",
                    "mode": "RW",
                    "name": "LkRxIntCntCorrMask"
                },
                {
                    "altname": "INTLKN_RXINT_BAD_CTL_CNT_FILL_MASK",
                    "bit_lsb": 13,
                    "bit_msb": 13,
                    "description": "Interrupt Mask.",
                    "mode": "RW",
                    "name": "LkRxIntBadCtlCntFillMask"
                },
                {
                    "altname": "INTLKN_RXINT_CRC32_CNT_FILL_MASK",
                    "bit_lsb": 10,
                    "bit_msb": 10,
                    "description": "Interrupt Mask.",
                    "mode": "RW",
                    "name": "LkRxIntCrc32CntFillMask"
                },
                {
                    "altname": "INTLKN_RXINT_CDR_CNT_FILL_MASK",
                    "bit_lsb": 9,
                    "bit_msb": 9,
                    "description": "Interrupt Mask.",
                    "mode": "RW",
                    "name": "LkRxIntCdrCntFillMask"
                },
                {
                    "altname": "INTLKN_RXINT_WRD_SYNC_CNT_FILL_MASK",
                    "bit_lsb": 8,
                    "bit_msb": 8,
                    "description": "Interrupt Mask.",
                    "mode": "RW",
                    "name": "LkRxIntWrdSyncCntFillMask"
                },
                {
                    "altname": "INTLKN_RXINT_ALIGN_FAIL_CNT_FILL_MASK",
                    "bit_lsb": 7,
                    "bit_msb": 7,
                    "description": "Interrupt Mask.",
                    "mode": "RW",
                    "name": "LkRxIntAlignFailCntFillMask"
                },
                {
                    "altname": "INTLKN_RXINT_ALIGN_CNT_FILL_MASK",
                    "bit_lsb": 6,
                    "bit_msb": 6,
                    "description": "Interrupt Mask.",
                    "mode": "RW",
                    "name": "LkRxIntAliCntFillMask"
                },
                {
                    "altname": "INTLKN_RXINT_BURST_CNT_FILL_MASK",
                    "bit_lsb": 5,
                    "bit_msb": 5,
                    "description": "Interrupt Mask.",
                    "mode": "RW",
                    "name": "LkRxIntBurstCntFillMask"
                },
                {
                    "altname": "INTLKN_RXINT_BMIN_CNT_FILL_MASK",
                    "bit_lsb": 4,
                    "bit_msb": 4,
                    "description": "Interrupt Mask.",
                    "mode": "RW",
                    "name": "LkRxIntBminCntFillMask"
                },
                {
                    "altname": "INTLKN_RXINT_BMAX_CNT_FILL_MASK",
                    "bit_lsb": 3,
                    "bit_msb": 3,
                    "description": "Interrupt Mask.",
                    "mode": "RW",
                    "name": "LkRxIntBmaxCntFillMask"
                },
                {
                    "altname": "INTLKN_RXINT_CRC24_CNT_FILL_MASK",
                    "bit_lsb": 2,
                    "bit_msb": 2,
                    "description": "Interrupt Mask.",
                    "mode": "RW",
                    "name": "LkRxIntCrc24CntFillMask"
                },
                {
                    "altname": "INTLKN_RXINT_FC_CNT_FILL_MASK",
                    "bit_lsb": 1,
                    "bit_msb": 1,
                    "description": "Interrupt Mask.",
                    "mode": "RW",
                    "name": "LkRxIntFcCntFillMask"
                },
                {
                    "altname": "INTLKN_RXINT_CHAN_CNT_FILL_MASK",
                    "bit_lsb": 0,
                    "bit_msb": 0,
                    "description": "Interrupt Mask.",
                    "mode": "RW",
                    "name": "LkRxIntChanCntFillMask"
                }
            ]
        },
        "mac_csr.LkRxMfError": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "INTLKN_RX_METAFRAME_ERROR",
                    "bit_lsb": 0,
                    "bit_msb": 23,
                    "description": "The MetaFrame Period Error for the lanes. Bit [0] for lane 0, etc.",
                    "mode": "RW1C",
                    "name": "LkRxMfError"
                }
            ]
        },
        "mac_csr.LkRxScramError": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "INTLKN_RX_SCRAM_ERROR",
                    "bit_lsb": 0,
                    "bit_msb": 23,
                    "description": "The Scrambler State Error for the lanes. Bit [0] for lane 0, etc.",
                    "mode": "RW1C",
                    "name": "LkRxScramError"
                }
            ]
        },
        "mac_csr.LkRxStatusMessage": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "INTLKN_RX_STATUS_MSG_VALID_ALL",
                    "bit_lsb": 31,
                    "bit_msb": 31,
                    "description": "RX (status message from diagnostic words) : The status message was extracted from diagnostic words on ALL enabled serdes lanes.",
                    "mode": "RO",
                    "name": "LkRxStatusMessageValidAll"
                },
                {
                    "altname": "INTLKN_RX_STATUS_MSG_VALID_ANY",
                    "bit_lsb": 30,
                    "bit_msb": 30,
                    "description": "RX (status message from diagnostic words) : The status message was extracted from diagnostic words on ANY enabled serdes lanes.",
                    "mode": "RO",
                    "name": "LkRxStatusMessageValidAny"
                },
                {
                    "altname": "INTLKN_RX_STATUS_MSG_SYNC",
                    "bit_lsb": 26,
                    "bit_msb": 26,
                    "description": "Indicates if we are in sync, based on the SL and SIF bits for the enabled serdes lanes.",
                    "mode": "RO",
                    "name": "LkRxStatusMessageSync"
                },
                {
                    "altname": "INTLKN_RX_STATUS_MSG_SIF_ALL",
                    "bit_lsb": 25,
                    "bit_msb": 25,
                    "description": "RX (status message from diagnostic words) : Bit 0 of the status message was a 1 from ALL enabled lanes.",
                    "mode": "RO",
                    "name": "LkRxStatusMessageSifAll"
                },
                {
                    "altname": "INTLKN_RX_STATUS_MSG_SIF_ANY",
                    "bit_lsb": 24,
                    "bit_msb": 24,
                    "description": "RX (status message from diagnostic words) : Bit 0 of the status message was a 1 from ANY enabled lanes.",
                    "mode": "RO",
                    "name": "LkRxStatusMessageSifAny"
                },
                {
                    "altname": "INTLKN_RX_STATUS_MSG_LANES",
                    "bit_lsb": 0,
                    "bit_msb": 23,
                    "description": "The status message received for the lanes. Bit [0] for lane 0, etc.",
                    "mode": "RO",
                    "name": "LkRxStatusMessageLanes"
                }
            ]
        },
        "mac_csr.LkRxWrdSync": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "INTLKN_RX_WORD_SYNC",
                    "bit_lsb": 0,
                    "bit_msb": 23,
                    "description": "The Word boundary lock status. Bit [0] for lane 0, etc.",
                    "mode": "RO",
                    "name": "LkRxWrdSync"
                }
            ]
        },
        "mac_csr.LkRxWrdSyncChange": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "INTLKN_RX_WORD_SYNC_CHANGE",
                    "bit_lsb": 0,
                    "bit_msb": 23,
                    "description": "The Word boundary lock status changed. Bit [0] for lane 0, etc.",
                    "mode": "RW1C",
                    "name": "LkRxWrdSyncChange"
                }
            ]
        },
        "mac_csr.LkRxWrdSyncCntFill": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "INTLKN_RX_WORD_SYNC_CNT_FILL",
                    "bit_lsb": 0,
                    "bit_msb": 23,
                    "description": "The half full status of the RX_Word_Sync_Error counters. Bit [0] for lane 0, etc.",
                    "mode": "RO",
                    "name": "LkRxWrdSyncCntFill"
                }
            ]
        },
        "mac_csr.LkSerDesRxFifoConfig": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "INTLKN_FC_RXFIFO_HWM",
                    "bit_lsb": 24,
                    "bit_msb": 27,
                    "description": "Interlaken FC RXFIFO HWM",
                    "mode": "RW",
                    "name": "LkFcRxFifoHwm"
                },
                {
                    "altname": "INTLKN_FC_RXFIFO_LWM",
                    "bit_lsb": 16,
                    "bit_msb": 19,
                    "description": "Interlaken FC RXFIFO LWM",
                    "mode": "RW",
                    "name": "LkFcRxFifoLwm"
                },
                {
                    "altname": "INTLKN_SERDES_RXFIFO_HWM",
                    "bit_lsb": 8,
                    "bit_msb": 11,
                    "description": "Interlaken SerDes RXFIFO HWM",
                    "mode": "RW",
                    "name": "LkSerDesRxFifoHwm"
                },
                {
                    "altname": "INTLKN_SERDES_RXFIFO_LWM",
                    "bit_lsb": 0,
                    "bit_msb": 3,
                    "description": "Interlaken SerDes RXFIFO LWM",
                    "mode": "RW",
                    "name": "LkSerDesRxFifoLwm"
                }
            ]
        },
        "mac_csr.LkSerDesTestControl": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "INTLKN_SERDES_TEST_REPC",
                    "bit_lsb": 24,
                    "bit_msb": 31,
                    "description": "The number of times to repeat pattern C when doing programmable pattern. 0 = Disable pattern C.",
                    "mode": "RW",
                    "name": "LkSerDesTestRepC"
                },
                {
                    "altname": "INTLKN_SERDES_TEST_REPB",
                    "bit_lsb": 16,
                    "bit_msb": 23,
                    "description": "The number of times to repeat pattern B when doing programmable pattern. 0 = Disable pattern B.",
                    "mode": "RW",
                    "name": "LkSerDesTestRepB"
                },
                {
                    "altname": "INTLKN_SERDES_TEST_REPA",
                    "bit_lsb": 8,
                    "bit_msb": 15,
                    "description": "The number of times to repeat pattern A when doing programmable pattern. 0 = Disable pattern A.",
                    "mode": "RW",
                    "name": "LkSerDesTestRepA"
                },
                {
                    "altname": "INTLKN_SERDES_TEST_PROG_EN",
                    "bit_lsb": 1,
                    "bit_msb": 1,
                    "description": "Enable programmable pattern.",
                    "mode": "RW",
                    "name": "LkSerDesTestProgEn"
                },
                {
                    "altname": "INTLKN_SERDES_TEST_PRBS_EN",
                    "bit_lsb": 0,
                    "bit_msb": 0,
                    "description": "Enable PRBS (Pseudo Random Bit Stream) pattern.",
                    "mode": "RW",
                    "name": "LkSerDesTestPrbsEn"
                }
            ]
        },
        "mac_csr.LkSerDesTestPatternA": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "INTLKN_SERDES_TEST_PATTERN_A",
                    "bit_lsb": 0,
                    "bit_msb": 31,
                    "description": "When doing programmable patterns, this bit pattern is sent REPA times. When doing PRBS, this value programs the desired polynomial. The recommended Interlaken polynomials are programmed as follows:\nPRBS31 : x^31 + x^28 + 1 : 32'h90000001 (bits 31, 28, and 0 are set)\nPRBS23 : x^23 + x^18 + 1 : 32'h00840001 (bits 23, 18, and 0 are set)\nPRBS7 : x^7 + x^6 + 1 : 32'h000000C1 (bits 7, 6, and 0 are set)\nOther commonly used PRBS polynomials are also supported:\nPRBS9 : x^9 + x^5 + 1 : 32'h00000221 (bits 9, 5, and 0 are set)\nPRBS11 : x^11 + x^9 + 1 : 32'h00000A01 (bits 11, 9, and 0 are set)\nPRBS15 : x^15 + x^14 + 1 : 32'h0000C001 (bits 15, 14, and 0 are set)\nPRBS29 : x^29 + x^27 + 1 : 32'h28000001 (bits 29, 27, and 0 are set)\nPRBS polynomials other than those listed above are not guaranteed to be functional as some logic optimizations may have been done to improve the area and performance of the design.\nWhen doing PRBS, bit[0] is ignored and assumed to be 1'b1..",
                    "mode": "RW",
                    "name": "LkSerDesTestPatternA"
                }
            ]
        },
        "mac_csr.LkSerDesTestPatternB": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "INTLKN_SERDES_TEST_PATTERN_B",
                    "bit_lsb": 0,
                    "bit_msb": 31,
                    "description": "When doing programmable patterns, this bit pattern is sent REPB times.",
                    "mode": "RW",
                    "name": "LkSerDesTestPatternB"
                }
            ]
        },
        "mac_csr.LkSerDesTestPatternC": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "INTLKN_SERDES_TEST_PATTERN_C",
                    "bit_lsb": 0,
                    "bit_msb": 31,
                    "description": "When doing programmable patterns, this bit pattern is sent REPC times.",
                    "mode": "RW",
                    "name": "LkSerDesTestPatternC"
                }
            ]
        },
        "mac_csr.LkSerDesTxFifoConfig": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "INTLKN_SERDES_TXFIFO_HWM",
                    "bit_lsb": 8,
                    "bit_msb": 11,
                    "description": "Interlaken SerDes TXFIFO HWM",
                    "mode": "RW",
                    "name": "LkSerDesTxFifoHwm"
                },
                {
                    "altname": "INTLKN_SERDES_TXFIFO_LWM",
                    "bit_lsb": 0,
                    "bit_msb": 3,
                    "description": "Interlaken SerDes TXFIFO LWM",
                    "mode": "RW",
                    "name": "LkSerDesTxFifoLwm"
                }
            ]
        },
        "mac_csr.LkStatsAcc": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "LK_STATS_ACC_TYPE",
                    "bit_lsb": 16,
                    "bit_msb": 19,
                    "description": "Most of the counter type names match exactly with the recommended statistics from the Interlaken Protocol Definition.   For TX counter types:  0x0 = TX_Packets, TX_Bytes, and TX_Bad_Packets, ADDR field indicates which channel number;  0x1 = RX_FC_Error. The number of out of band Flow Control Errors, either framing or CRC4 errors.  All others: unused.   For Rx counter types:",
                    "mode": "RW",
                    "name": "LkStatsAccType"
                },
                {
                    "altname": "LK_STATS_ACC_ADDR",
                    "bit_lsb": 0,
                    "bit_msb": 7,
                    "description": "When LkStatsAccType field = 0000 then LkStatsAccAddr[7:0] represent channel number. All other combinations of LkStatsAccType does not represent anything and therefore should be set to zeros.",
                    "mode": "RW",
                    "name": "LkStatsAccAddr"
                }
            ]
        },
        "mac_csr.LkStatsFill": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "LK_STATS_FILL_BOVER",
                    "bit_lsb": 31,
                    "bit_msb": 31,
                    "description": "The Byte counter overflowed and started again from zero.",
                    "mode": "RO",
                    "name": "LkStatsFillBOver"
                },
                {
                    "altname": "LK_STATS_FILL_POVER",
                    "bit_lsb": 30,
                    "bit_msb": 30,
                    "description": "The Packet counter overflowed and started again from zero.",
                    "mode": "RO",
                    "name": "LkStatsFillPOver"
                },
                {
                    "altname": "LK_STATS_FILL_EOVER",
                    "bit_lsb": 29,
                    "bit_msb": 29,
                    "description": "The Error counter overflowed and started again from zero.",
                    "mode": "RO",
                    "name": "LkStatsFillEOver"
                },
                {
                    "altname": "LK_STATS_FILL_BHALF",
                    "bit_lsb": 28,
                    "bit_msb": 28,
                    "description": "The Byte counter is over half full based on the SLE_STATS_BYTE_CNT_WIDTH parameter, which is defined as 40.",
                    "mode": "RO",
                    "name": "LkStatsFillBHalf"
                },
                {
                    "altname": "LK_STATS_FILL_PHALF",
                    "bit_lsb": 27,
                    "bit_msb": 27,
                    "description": "The Packet counter is over half full based on the SLE_STATS_PKT_CNT_WIDTH parameter, which is defined as 32.",
                    "mode": "RO",
                    "name": "LkStatsFillPHalf"
                },
                {
                    "altname": "LK_STATS_FILL_EHALF",
                    "bit_lsb": 26,
                    "bit_msb": 26,
                    "description": "The Err counter is over half full based on the SLE_STATS_ERR_CNT_WIDTH parameter, which is defined as 32.",
                    "mode": "RO",
                    "name": "LkStatsFillEHalf"
                },
                {
                    "altname": "LK_STATS_FILL_TYPE",
                    "bit_lsb": 16,
                    "bit_msb": 19,
                    "description": "The type of statistics counter being reported as described in the LkStatsAcc register description. Only the per channel statistics counters are use this register, so the TYPE field will always be 0000",
                    "mode": "RO",
                    "name": "LkStatsFillType"
                },
                {
                    "altname": "LK_STATS_FILL_ADDR",
                    "bit_lsb": 0,
                    "bit_msb": 7,
                    "description": "The address of a statistics counter that is half full or has overflowed. When in Single Channel Stats mode the return value if the LkStatsFillAddr field will always be zero.  NOTE: LkStatsFillAddr is undefined when bits 31-26 are all zeros",
                    "mode": "RO",
                    "name": "LkStatsFillAddr"
                }
            ]
        },
        "mac_csr.LkStatsParity": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "LK_STATS_PAR_UNCORR",
                    "bit_lsb": 31,
                    "bit_msb": 31,
                    "description": "Specifies whether any of the counters had a parity (or uncorrectable ECC) error.",
                    "mode": "RO",
                    "name": "LkStatsParUncorr"
                },
                {
                    "altname": "LK_STATS_PAR_CORR",
                    "bit_lsb": 30,
                    "bit_msb": 30,
                    "description": "Specifies whether any of the counters had a correctable ECC error.",
                    "mode": "RO",
                    "name": "LkStatsParCorr"
                },
                {
                    "altname": "LK_STATS_PAR_TYPE",
                    "bit_lsb": 16,
                    "bit_msb": 19,
                    "description": "The type of statistics counter being reported as described in the LkStatsAcc register description. Only the per channel statistics counters are use the parity protected memory, so the TYPE field will always be 0000",
                    "mode": "RO",
                    "name": "LkStatsParType"
                },
                {
                    "altname": "LK_STATS_PAR_ADDR",
                    "bit_lsb": 0,
                    "bit_msb": 7,
                    "description": "The address of a statistics counter that had the error. When in Single Channel Stats mode the return value of the ADDR field will always be zero.  NOTE: ADDR is undefined when bits 31-30 are all zeros",
                    "mode": "RO",
                    "name": "LkStatsParAddr"
                }
            ]
        },
        "mac_csr.LkStatsRdByteHi": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "LK_STATS_RD_BYTE_HI_OVER",
                    "bit_lsb": 31,
                    "bit_msb": 31,
                    "description": "The counter overflowed and started counting again from zero.",
                    "mode": "RO",
                    "name": "LkStatsRdByteHiOver"
                },
                {
                    "altname": "LK_STATS_RD_BYTE_HI_HALF",
                    "bit_lsb": 30,
                    "bit_msb": 30,
                    "description": "The counter is over half full based on the SLE_STATS_BYTE_CNT_WIDTH parameter, which is defined as 40.",
                    "mode": "RO",
                    "name": "LkStatsRdByteHiHalf"
                },
                {
                    "altname": "LK_STATS_RD_BYTE_HI_UNCORR",
                    "bit_lsb": 29,
                    "bit_msb": 29,
                    "description": "The counter had an uncorrectable ECC error.",
                    "mode": "RO",
                    "name": "LkStatsRdByteHiUncorr"
                },
                {
                    "altname": "LK_STATS_RD_BYTE_HI_CORR",
                    "bit_lsb": 28,
                    "bit_msb": 28,
                    "description": "The counter had a correctable ECC error.",
                    "mode": "RO",
                    "name": "LkStatsRdByteHiCorr"
                },
                {
                    "altname": "LK_STATS_RD_BYTE_HI_RDATA",
                    "bit_lsb": 0,
                    "bit_msb": 23,
                    "description": "The read data.",
                    "mode": "RO",
                    "name": "LkStatsRdByteHiRData"
                }
            ]
        },
        "mac_csr.LkStatsRdByteLo": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "LK_STATS_RD_BYTE_LO_RDATA",
                    "bit_lsb": 0,
                    "bit_msb": 31,
                    "description": "The read data.",
                    "mode": "RO",
                    "name": "LkStatsRdByteLoWData"
                }
            ]
        },
        "mac_csr.LkStatsRdErrHi": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "LK_STATS_RD_ERR_HI_OVER",
                    "bit_lsb": 31,
                    "bit_msb": 31,
                    "description": "The counter overflowed and started counting again from zero.",
                    "mode": "RO",
                    "name": "LkStatsRdErrHiOver"
                },
                {
                    "altname": "LK_STATS_RD_ERR_HI_HALF",
                    "bit_lsb": 30,
                    "bit_msb": 30,
                    "description": "The counter is over half full based on the SLE_STATS_ERR_CNT_WIDTH parameter, which is defined as 32.",
                    "mode": "RO",
                    "name": "LkStatsRdErrHiHalf"
                },
                {
                    "altname": "LK_STATS_RD_ERR_HI_UNCORR",
                    "bit_lsb": 29,
                    "bit_msb": 29,
                    "description": "The counter had an uncorrectable ECC error.",
                    "mode": "RO",
                    "name": "LkStatsRdErrHiUncorr"
                },
                {
                    "altname": "LK_STATS_RD_ERR_HI_CORR",
                    "bit_lsb": 28,
                    "bit_msb": 28,
                    "description": "The counter had a correctable ECC error.",
                    "mode": "RO",
                    "name": "LkStatsRdErrHiCorr"
                },
                {
                    "altname": "LK_STATS_RD_ERR_HI_RDATA",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "The read data.",
                    "mode": "RO",
                    "name": "LkStatsRdErrHiRData"
                }
            ]
        },
        "mac_csr.LkStatsRdErrLo": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "LK_STATS_RD_ERR_LO_RDATA",
                    "bit_lsb": 0,
                    "bit_msb": 31,
                    "description": "The read data.",
                    "mode": "RO",
                    "name": "LkStatsRdErrLoWData"
                }
            ]
        },
        "mac_csr.LkStatsRdParity": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "LK_STATS_PAR_RDATA",
                    "bit_lsb": 0,
                    "bit_msb": 23,
                    "description": "The read data.",
                    "mode": "RO",
                    "name": "LkStatsRdParRData"
                }
            ]
        },
        "mac_csr.LkStatsRdPktHi": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "LK_STATS_RD_PKT_HI_OVER",
                    "bit_lsb": 31,
                    "bit_msb": 31,
                    "description": "The counter overflowed and started counting again from zero.",
                    "mode": "RO",
                    "name": "LkStatsRdPktHiOver"
                },
                {
                    "altname": "LK_STATS_RD_PKT_HI_HALF",
                    "bit_lsb": 30,
                    "bit_msb": 30,
                    "description": "The counter is over half full based on the SLE_STATS_PKT_CNT_WIDTH parameter, which is defined as 32.",
                    "mode": "RO",
                    "name": "LkStatsRdPktHiHalf"
                },
                {
                    "altname": "LK_STATS_RD_PKT_HI_UNCORR",
                    "bit_lsb": 29,
                    "bit_msb": 29,
                    "description": "The counter had an uncorrectable ECC error.",
                    "mode": "RO",
                    "name": "LkStatsRdPktHiUncorr"
                },
                {
                    "altname": "LK_STATS_RD_PKT_HI_CORR",
                    "bit_lsb": 28,
                    "bit_msb": 28,
                    "description": "The counter had a correctable ECC error.",
                    "mode": "RO",
                    "name": "LkStatsRdPktHiCorr"
                },
                {
                    "altname": "LK_STATS_RD_PKT_HI_RDATA",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "The read data.",
                    "mode": "RO",
                    "name": "LkStatsRdPktHiRData"
                }
            ]
        },
        "mac_csr.LkStatsRdPktLo": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "LK_STATS_RD_PKT_LO_RDATA",
                    "bit_lsb": 0,
                    "bit_msb": 31,
                    "description": "The read data.",
                    "mode": "RO",
                    "name": "LkStatsRdPktLoWData"
                }
            ]
        },
        "mac_csr.LkStatsWrByteHi": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "LK_STATS_WR_BYTE_HI_WDATA",
                    "bit_lsb": 0,
                    "bit_msb": 23,
                    "description": "The write data.",
                    "mode": "RW",
                    "name": "LkStatsWrByteHiWData"
                }
            ]
        },
        "mac_csr.LkStatsWrByteLo": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "LK_STATS_WR_BYTE_LO_WDATA",
                    "bit_lsb": 0,
                    "bit_msb": 31,
                    "description": "The write data.",
                    "mode": "RW",
                    "name": "LkStatsWrByteLoWData"
                }
            ]
        },
        "mac_csr.LkStatsWrErrHi": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "LK_STATS_WR_ERR_HI_WDATA",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "The write data.",
                    "mode": "RW",
                    "name": "LkStatsWrErrHiWData"
                }
            ]
        },
        "mac_csr.LkStatsWrErrLo": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "LK_STATS_WR_ERR_LO_WDATA",
                    "bit_lsb": 0,
                    "bit_msb": 31,
                    "description": "The write data.",
                    "mode": "RW",
                    "name": "LkStatsWrErrLoWData"
                }
            ]
        },
        "mac_csr.LkStatsWrParity": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "LK_STATS_WR_PAR_WDATA",
                    "bit_lsb": 0,
                    "bit_msb": 23,
                    "description": "The parity bits for the write data.",
                    "mode": "RW",
                    "name": "LkStatsWrParWData"
                }
            ]
        },
        "mac_csr.LkStatsWrPktHi": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "LK_STATS_WR_PKT_HI_WDATA",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "The write data.",
                    "mode": "RW",
                    "name": "LkStatsWrPktHiWData"
                }
            ]
        },
        "mac_csr.LkStatsWrPktLo": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "LK_STATS_WR_PKT_LO_WDATA",
                    "bit_lsb": 0,
                    "bit_msb": 31,
                    "description": "The write data.",
                    "mode": "RW",
                    "name": "LkStatsWrPktLoWData"
                }
            ]
        },
        "mac_csr.LkTxControl": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "INTLKN_STATUS_MSG_ENABLE",
                    "bit_lsb": 10,
                    "bit_msb": 10,
                    "description": "Enable the optional status messaging on the out of band flow control.",
                    "mode": "RW",
                    "name": "LkStatusMsgEn"
                },
                {
                    "altname": "INTLKN_DATA_ALL_ZERO",
                    "bit_lsb": 7,
                    "bit_msb": 7,
                    "description": "When set to 1, the serdes data is forced to all zeros. This is typically used in conjunction with tx_to_rx loopback on the data path which is enabled in registers 0x010, 0x020.",
                    "mode": "RW",
                    "name": "LkDataOutKill"
                },
                {
                    "altname": "INTLKN_FC_OOB_ALL_ZERO",
                    "bit_lsb": 6,
                    "bit_msb": 6,
                    "description": "When set to 1, o_tx_fcob is forced to all zeros, regardless of the out-of-band flow control received from the Interlaken Interface.",
                    "mode": "RW",
                    "name": "LkFcOutKill"
                },
                {
                    "altname": "INTLKN_DISPARITY_DISABLE",
                    "bit_lsb": 4,
                    "bit_msb": 4,
                    "description": "When set to 1, the disparity portion of the 64/67 code is disabled.",
                    "mode": "RW",
                    "name": "LkDispDis"
                },
                {
                    "altname": "INTLKN_CRC24_DISABLE",
                    "bit_lsb": 3,
                    "bit_msb": 3,
                    "description": "When set to 1, the control word crc24 is disabled.",
                    "mode": "RW",
                    "name": "LkCrc24Dis"
                },
                {
                    "altname": "INTLKN_CRC32_DISABLE",
                    "bit_lsb": 2,
                    "bit_msb": 2,
                    "description": "When set to 1, the per serdes lane crc32 is disabled.",
                    "mode": "RW",
                    "name": "LkCrc32Dis"
                },
                {
                    "altname": "INTLKN_UNALIGN_XOFF_DISABLE",
                    "bit_lsb": 1,
                    "bit_msb": 1,
                    "description": "When set to 0, if the receiver is not in the aligned state, XOFF will be sent on the flow control, if enabled. When set to 1, receiver alignment state does not affect flow control.",
                    "mode": "RW",
                    "name": "LkUnalignXoffDis"
                }
            ]
        },
        "mac_csr.LkTxErrInject": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "INTLKN_ERR_LOCATION",
                    "bit_lsb": 24,
                    "bit_msb": 30,
                    "description": "Interlaken Bit Err Insertion Location 0-66",
                    "mode": "RW",
                    "name": "LkErrLocation"
                },
                {
                    "altname": "INTLKN_ERR_LANE",
                    "bit_lsb": 16,
                    "bit_msb": 20,
                    "description": "Interlaken Lane to inject error",
                    "mode": "RW",
                    "name": "LkErrLane"
                },
                {
                    "altname": "INTLKN_ERR_TYPE",
                    "bit_lsb": 8,
                    "bit_msb": 10,
                    "description": "Interlaken Word type to inject error",
                    "mode": "RW",
                    "name": "LkErrType"
                },
                {
                    "altname": "INTLKN_ERR_SINGLE",
                    "bit_lsb": 1,
                    "bit_msb": 1,
                    "description": "Interlaken Error Inject Single",
                    "mode": "RW",
                    "name": "LkErrSingle"
                },
                {
                    "altname": "INTLKN_ERR_ENABLE",
                    "bit_lsb": 0,
                    "bit_msb": 0,
                    "description": "Interlaken Error Inject Enable",
                    "mode": "RW",
                    "name": "LkErrEnable"
                }
            ]
        },
        "mac_csr.LkTxFifoConfig": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "INTLKN_TXFIFO_SINGLE",
                    "bit_lsb": 17,
                    "bit_msb": 17,
                    "description": "Interlaken TX FIFO Single Parity error inject",
                    "mode": "RW",
                    "name": "LkTxFifoSingle"
                },
                {
                    "altname": "INTLKN_TXFIFO_INVPAR",
                    "bit_lsb": 16,
                    "bit_msb": 16,
                    "description": "Interlaken TX FIFO Parity test function",
                    "mode": "RW",
                    "name": "LkTxFifoInvPar"
                },
                {
                    "altname": "INTLKN_TXFIFO_HWM",
                    "bit_lsb": 8,
                    "bit_msb": 11,
                    "description": "Interlaken TX FIFO HWM",
                    "mode": "RW",
                    "name": "LkTxFifoHwm"
                },
                {
                    "altname": "INTLKN_TXFIFO_LWM",
                    "bit_lsb": 0,
                    "bit_msb": 3,
                    "description": "Interlaken TX FIFO LWM",
                    "mode": "RW",
                    "name": "LkTxFifoLwm"
                }
            ]
        },
        "mac_csr.LkTxInterrupt": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "INTLKN_TXINT_FIFO_UNCORRECTABLE",
                    "bit_lsb": 31,
                    "bit_msb": 31,
                    "description": "The transmitter's input fifo had an uncorrectable parity or ECC error.",
                    "mode": "RW1C",
                    "name": "LkTxIntFifoUnCorr"
                },
                {
                    "altname": "INTLKN_TXINT_FIFO_CORRECTABLE",
                    "bit_lsb": 30,
                    "bit_msb": 30,
                    "description": "The transmitter's input fifo had an correctable ECC error.",
                    "mode": "RW1C",
                    "name": "LkTxIntFifoCorr"
                },
                {
                    "altname": "INTLKN_TXINT_FIFO_OVERFLOW",
                    "bit_lsb": 29,
                    "bit_msb": 29,
                    "description": "The transmitter's input fifo overflowed. This should not happen if the high watermark in register SLE_TX_FIFO_CFG is set properly given the latency required for the user to respond to stall.",
                    "mode": "RW1C",
                    "name": "LkTxIntFifoOver"
                },
                {
                    "altname": "INTLKN_TXINT_FIFO_UNDERRUN",
                    "bit_lsb": 28,
                    "bit_msb": 28,
                    "description": "The transmitter's input fifo went empty not on a burst boundary. To try to prevent Interlaken protocol errors a burst boundary was forced. This condition should not happen if the user sends data in complete bursts and the low watermark in register FIXME is set properly given the latency required for the user to respond to stall.",
                    "mode": "RW1C",
                    "name": "LkTxIntFifoUnder"
                },
                {
                    "altname": "INTLKN_TXINT_FC_ERR",
                    "bit_lsb": 17,
                    "bit_msb": 17,
                    "description": "An error occurred on the out band flow control (mismatch between calendar length and reset calendar pulse or CRC4 error)..",
                    "mode": "RW1C",
                    "name": "LkTxIntFcErr"
                },
                {
                    "altname": "INTLKN_TXINT_STATUS_MESSAGE_CHANGE",
                    "bit_lsb": 16,
                    "bit_msb": 16,
                    "description": "When this interrupt is set, it reports if there is a change in the status that is part of the out-of-band flow control.\nThen STATUS_MSG_CHANGE interrupt sets if there is a change in any bit of register 0x140 : TX Status Message Received.",
                    "mode": "RW1C",
                    "name": "LkTxIntStatusMessageChange"
                },
                {
                    "altname": "INTLKN_TXINT_COUNT_UNCORRECTABLE",
                    "bit_lsb": 15,
                    "bit_msb": 15,
                    "description": "One of the statistics counters had an uncorrectable parity or ECC error. Each channel in the design has a flag that sets when an uncorrectable parity or ECC error has been seen. To clear the CNT_UNCORR interrupt, these flags must be cleared via the stats access register (0x074) using the Clear ECC/Parity Error flags command.",
                    "mode": "RW1C",
                    "name": "LkTxIntCntUnCorr"
                },
                {
                    "altname": "INTLKN_TXINT_COUNT_CORRECTABLE",
                    "bit_lsb": 14,
                    "bit_msb": 14,
                    "description": "One of the statistics counters had a correctable ECC error. Each channel in the design has a flag that sets when a correctable ECC error has been seen. To clear the CNT_CORR interrupt, these flags must be cleared via the stats access register (0x074) using the Clear ECC/Parity Error flags command.",
                    "mode": "RW1C",
                    "name": "LkTxIntCntCorr"
                },
                {
                    "altname": "INTLKN_TXINT_FC_CNT_FILL",
                    "bit_lsb": 1,
                    "bit_msb": 1,
                    "description": "The out-of-band flow control error counter is half full or overflowed.",
                    "mode": "RW1C",
                    "name": "LkTxIntFcCntFill"
                },
                {
                    "altname": "INTLKN_TXINT_CHAN_CNT_FILL",
                    "bit_lsb": 0,
                    "bit_msb": 0,
                    "description": "One or more per channel statistics counters (TX_Bytes, TX_Packets, and/or TX_Bad_Packets) are half full or overflowed.",
                    "mode": "RW1C",
                    "name": "LkTxIntChanCntFill"
                }
            ]
        },
        "mac_csr.LkTxInterruptForce": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "INTLKN_TXINT_FIFO_UNCORRECTABLE_FORCE",
                    "bit_lsb": 31,
                    "bit_msb": 31,
                    "description": "Force Interrupt.",
                    "mode": "RW",
                    "name": "LkTxIntFifoUnCorrForce"
                },
                {
                    "altname": "INTLKN_TXINT_FIFO_CORRECTABLE_FORCE",
                    "bit_lsb": 30,
                    "bit_msb": 30,
                    "description": "Force Interrupt.",
                    "mode": "RW",
                    "name": "LkTxIntFifoCorrForce"
                },
                {
                    "altname": "INTLKN_TXINT_FIFO_OVERFLOW_FORCE",
                    "bit_lsb": 29,
                    "bit_msb": 29,
                    "description": "Force Interrupt.",
                    "mode": "RW",
                    "name": "LkTxIntFifoOverForce"
                },
                {
                    "altname": "INTLKN_TXINT_FIFO_UNDERRUN_FORCE",
                    "bit_lsb": 28,
                    "bit_msb": 28,
                    "description": "Force Interrupt.",
                    "mode": "RW",
                    "name": "LkTxIntFifoUnderForce"
                },
                {
                    "altname": "INTLKN_TXINT_FC_ERR_FORCE",
                    "bit_lsb": 17,
                    "bit_msb": 17,
                    "description": "Force Interrupt.",
                    "mode": "RW",
                    "name": "LkTxIntFcErrForce"
                },
                {
                    "altname": "INTLKN_TXINT_STATUS_MESSAGE_CHANGE_FORCE",
                    "bit_lsb": 16,
                    "bit_msb": 16,
                    "description": "Force Interrupt.",
                    "mode": "RW",
                    "name": "LkTxIntStatusMessageChangeForce"
                },
                {
                    "altname": "INTLKN_TXINT_COUNT_UNCORRECTABLE_FORCE",
                    "bit_lsb": 15,
                    "bit_msb": 15,
                    "description": "Force Interrupt.",
                    "mode": "RW",
                    "name": "LkTxIntCntUnCorrForce"
                },
                {
                    "altname": "INTLKN_TXINT_COUNT_CORRECTABLE_FORCE",
                    "bit_lsb": 14,
                    "bit_msb": 14,
                    "description": "Force Interrupt.",
                    "mode": "RW",
                    "name": "LkTxIntCntCorrForce"
                },
                {
                    "altname": "INTLKN_TXINT_FC_CNT_FILL_FORCE",
                    "bit_lsb": 1,
                    "bit_msb": 1,
                    "description": "Force Interrupt.",
                    "mode": "RW",
                    "name": "LkTxIntFcCntFillForce"
                },
                {
                    "altname": "INTLKN_TXINT_CHAN_CNT_FILL_FORCE",
                    "bit_lsb": 0,
                    "bit_msb": 0,
                    "description": "Force Interrupt.",
                    "mode": "RW",
                    "name": "LkTxIntChanCntFillForce"
                }
            ]
        },
        "mac_csr.LkTxInterruptMask": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "INTLKN_TXINT_FIFO_UNCORRECTABLE_MASK",
                    "bit_lsb": 31,
                    "bit_msb": 31,
                    "description": "Mask Interrupt.",
                    "mode": "RW",
                    "name": "LkTxIntFifoUnCorrMask"
                },
                {
                    "altname": "INTLKN_TXINT_FIFO_CORRECTABLE_MASK",
                    "bit_lsb": 30,
                    "bit_msb": 30,
                    "description": "Mask Interrupt.",
                    "mode": "RW",
                    "name": "LkTxIntFifoCorrMask"
                },
                {
                    "altname": "INTLKN_TXINT_FIFO_OVERFLOW_MASK",
                    "bit_lsb": 29,
                    "bit_msb": 29,
                    "description": "Mask Interrupt.",
                    "mode": "RW",
                    "name": "LkTxIntFifoOverMask"
                },
                {
                    "altname": "INTLKN_TXINT_FIFO_UNDERRUN_MASK",
                    "bit_lsb": 28,
                    "bit_msb": 28,
                    "description": "Mask Interrupt.",
                    "mode": "RW",
                    "name": "LkTxIntFifoUnderMask"
                },
                {
                    "altname": "INTLKN_TXINT_FC_ERR_MASK",
                    "bit_lsb": 17,
                    "bit_msb": 17,
                    "description": "Mask Interrupt.",
                    "mode": "RW",
                    "name": "LkTxIntFcErrMask"
                },
                {
                    "altname": "INTLKN_TXINT_STATUS_MESSAGE_CHANGE_MASK",
                    "bit_lsb": 16,
                    "bit_msb": 16,
                    "description": "Mask Interrupt.",
                    "mode": "RW",
                    "name": "LkTxIntStatusMessageChangeMask"
                },
                {
                    "altname": "INTLKN_TXINT_COUNT_UNCORRECTABLE_MASK",
                    "bit_lsb": 15,
                    "bit_msb": 15,
                    "description": "Mask Interrupt.",
                    "mode": "RW",
                    "name": "LkTxIntCntUnCorrMask"
                },
                {
                    "altname": "INTLKN_TXINT_COUNT_CORRECTABLE_MASK",
                    "bit_lsb": 14,
                    "bit_msb": 14,
                    "description": "Mask Interrupt.",
                    "mode": "RW",
                    "name": "LkTxIntCntCorrMask"
                },
                {
                    "altname": "INTLKN_TXINT_FC_CNT_FILL_MASK",
                    "bit_lsb": 1,
                    "bit_msb": 1,
                    "description": "Mask Interrupt.",
                    "mode": "RW",
                    "name": "LkTxIntFcCntFillMask"
                },
                {
                    "altname": "INTLKN_TXINT_CHAN_CNT_FILL_MASK",
                    "bit_lsb": 0,
                    "bit_msb": 0,
                    "description": "Mask Interrupt.",
                    "mode": "RW",
                    "name": "LkTxIntChanCntFillMask"
                }
            ]
        },
        "mac_csr.LkTxRateLimit0": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "INTLKN_MAX_CREDITS",
                    "bit_lsb": 16,
                    "bit_msb": 31,
                    "description": "Interlaken Rate Limit Max Credits",
                    "mode": "RW",
                    "name": "LkMaxCredits"
                },
                {
                    "altname": "INTLKN_GRANULARITY",
                    "bit_lsb": 8,
                    "bit_msb": 10,
                    "description": "Interlaken Decrement Granularity",
                    "mode": "RW",
                    "name": "LkGranularity"
                },
                {
                    "altname": "INTLKN_RATE_LIMIT_ENABLE",
                    "bit_lsb": 0,
                    "bit_msb": 0,
                    "description": "Interlaken Rate Limit Enable",
                    "mode": "RW",
                    "name": "LkRateLimitEnable"
                }
            ]
        },
        "mac_csr.LkTxRateLimit1": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "INTLKN_CREDIT_INTERVAL",
                    "bit_lsb": 16,
                    "bit_msb": 31,
                    "description": "Interlaken Rate Limit Credit Interval",
                    "mode": "RW",
                    "name": "LkCreditInterval"
                },
                {
                    "altname": "INTLKN_CREDIT_DELTA",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "Interlaken Rate Limit Credit Delta",
                    "mode": "RW",
                    "name": "LkCreditDelta"
                }
            ]
        },
        "mac_csr.LkTxStatusMessage": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "INTLKN_TX_STATUS_MSG_CURRENT",
                    "bit_lsb": 31,
                    "bit_msb": 31,
                    "description": "The most recently received calendar included a status message.",
                    "mode": "RO",
                    "name": "LkTxStatusMessageCurrent"
                },
                {
                    "altname": "INTLKN_TX_STATUS_MSG_VALID",
                    "bit_lsb": 30,
                    "bit_msb": 30,
                    "description": "The most recently received status message was valid (no framing or CRC errors).\nWhen the most recently received status message was errored due to framing or CRC errors, the SIF and SL bits below are retained from the previous valid status message, if any.",
                    "mode": "RO",
                    "name": "LkTxStatusMessageValid"
                },
                {
                    "altname": "INTLKN_TX_STATUS_MSG_SYNC",
                    "bit_lsb": 26,
                    "bit_msb": 26,
                    "description": "Indicates if we are in sync, based on the SL and SIF bits for the enabled serdes lanes.",
                    "mode": "RO",
                    "name": "LkTxStatusMessageSync"
                },
                {
                    "altname": "INTLKN_TX_STATUS_MSG_SIF",
                    "bit_lsb": 24,
                    "bit_msb": 24,
                    "description": "The status bit for the interface as a whole.",
                    "mode": "RO",
                    "name": "LkTxStatusMessageSif"
                },
                {
                    "altname": "INTLKN_TX_STATUS_MSG_LANES",
                    "bit_lsb": 0,
                    "bit_msb": 23,
                    "description": "The status message received for the lanes. Bit [0] for lane 0, etc.",
                    "mode": "RO",
                    "name": "LkTxStatusMessageLanes"
                }
            ]
        },
        "mac_csr.MacBlkReset": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "RFU2",
                    "bit_lsb": 24,
                    "bit_msb": 31,
                    "description": "Reserved for Use.",
                    "mode": "RW",
                    "name": "Rfu2"
                },
                {
                    "altname": "MAC_HY1_STAT_RST",
                    "bit_lsb": 23,
                    "bit_msb": 23,
                    "description": "The Reset for Hydra1 Stats logic.",
                    "mode": "RW",
                    "name": "MacHy1StatRst"
                },
                {
                    "altname": "MAC_HY0_STAT_RST",
                    "bit_lsb": 22,
                    "bit_msb": 22,
                    "description": "The Reset for Hydra0 stats logic.",
                    "mode": "RW",
                    "name": "MacHy0StatRst"
                },
                {
                    "altname": "MAC_TX_RST_MPB",
                    "bit_lsb": 21,
                    "bit_msb": 21,
                    "description": "The Reset for tx gasket MPB logic.",
                    "mode": "RW",
                    "name": "MacTxRstMpb"
                },
                {
                    "altname": "MAC_RX_RST_MPB",
                    "bit_lsb": 20,
                    "bit_msb": 20,
                    "description": "The Reset for rx gasket MPB logic.",
                    "mode": "RW",
                    "name": "MacRxRstMpb"
                },
                {
                    "altname": "MAC_TX_RST_CORE",
                    "bit_lsb": 19,
                    "bit_msb": 19,
                    "description": "The Reset for tx gasket core logic.",
                    "mode": "RW",
                    "name": "MacTxRstCore"
                },
                {
                    "altname": "MAC_RX_RST_CORE",
                    "bit_lsb": 18,
                    "bit_msb": 18,
                    "description": "The Reset for rx gasket core logic.",
                    "mode": "RW",
                    "name": "MacRxRstCore"
                },
                {
                    "altname": "MAC_FCX2RST_LK1",
                    "bit_lsb": 17,
                    "bit_msb": 17,
                    "description": "The fc_x2_rst must be held active for at least 20 cycles for fc logic to be reset.",
                    "mode": "RW",
                    "name": "MacFcX2RstLk1"
                },
                {
                    "altname": "MAC_FCX2RST_LK0",
                    "bit_lsb": 16,
                    "bit_msb": 16,
                    "description": "The fc_x2_rst must be held active for at least 20 cycles for fc logic to be reset.",
                    "mode": "RW",
                    "name": "MacFcX2RstLk0"
                },
                {
                    "altname": "MAC_RXRST_LK1",
                    "bit_lsb": 15,
                    "bit_msb": 15,
                    "description": "The rx_rst must be held active for at least 20 cycles for the RX logic to be reset. SerDes RX clocks must be operating.",
                    "mode": "RW",
                    "name": "MacRxRstLk1"
                },
                {
                    "altname": "MAC_RXRST_LK0",
                    "bit_lsb": 14,
                    "bit_msb": 14,
                    "description": "The rx_rst must be held active for at least 20 cycles for RX logic to be reset. SerDes RX clocks must be operating.",
                    "mode": "RW",
                    "name": "MacRxRstLk0"
                },
                {
                    "altname": "MAC_TXRST_LK1",
                    "bit_lsb": 13,
                    "bit_msb": 13,
                    "description": "The tx_rst must be held active for at least 20 cycles the TX logic to be reset. SerDes TX clocks must be operating.",
                    "mode": "RW",
                    "name": "MacTxRstLk1"
                },
                {
                    "altname": "MAC_TXRST_LK0",
                    "bit_lsb": 12,
                    "bit_msb": 12,
                    "description": "The tx_rst must be held active for at least 20 cycles the TX logic to be reset. SerDes TX clocks must be operating.",
                    "mode": "RW",
                    "name": "MacTxRstLk0"
                },
                {
                    "altname": "MAC_RST_LK1",
                    "bit_lsb": 11,
                    "bit_msb": 11,
                    "description": "RST must be held active for at least 20 cycles for the Memory Mapped Registers logic to be reset. Then 20 cycles is needed for the reset propagation delay before any Memory Mapped Registers can be written, once the writes are complete another 50 cycles is needed so that the Interlaken core can be configured based from the values written. The core can start sending data once the mmr writes plus 50 clock cycles are complete.",
                    "mode": "RW",
                    "name": "MacRstLk1"
                },
                {
                    "altname": "MAC_RST_LK0",
                    "bit_lsb": 10,
                    "bit_msb": 10,
                    "description": "RST must be held active for at least 20 cycles for the Memory Mapped Registers, TX logic, and RX logic to be reset. Then 20 cycles is needed for the reset propagation delay before any Memory Mapped Registers can be written, once the writes are complete another 50 cycles is needed so that the Interlaken core can be configured based from the values written. The core can start sending data once the mmr writes plus 50 clock cycles are complete.",
                    "mode": "RW",
                    "name": "MacRstLk0"
                },
                {
                    "altname": "MAC_X2CLKEN_LK1",
                    "bit_lsb": 9,
                    "bit_msb": 9,
                    "description": "X2 Clock enable for Laken1",
                    "mode": "RW",
                    "name": "MacX2ClkEnLk1"
                },
                {
                    "altname": "MAC_X2CLKEN_LK0",
                    "bit_lsb": 8,
                    "bit_msb": 8,
                    "description": "X2 Clock enable for Laken0",
                    "mode": "RW",
                    "name": "MacX2ClkEnLk0"
                },
                {
                    "altname": "MAC_CORECLKEN_LK1",
                    "bit_lsb": 7,
                    "bit_msb": 7,
                    "description": "Core Clock enable for Laken1",
                    "mode": "RW",
                    "name": "MacCoreClkEnLk1"
                },
                {
                    "altname": "MAC_CORECLKEN_LK0",
                    "bit_lsb": 6,
                    "bit_msb": 6,
                    "description": "Core Clock enable for Laken0",
                    "mode": "RW",
                    "name": "MacCoreClkEnLk0"
                },
                {
                    "altname": "MAC_CORECLKEN_HY1",
                    "bit_lsb": 5,
                    "bit_msb": 5,
                    "description": "Core Clock enable for Hydra1",
                    "mode": "RW",
                    "name": "MacCoreClkEnHy1"
                },
                {
                    "altname": "MAC_CORECLKEN_HY0",
                    "bit_lsb": 4,
                    "bit_msb": 4,
                    "description": "Core Clock enable for Hydra0",
                    "mode": "RW",
                    "name": "MacCoreClkEnHy0"
                },
                {
                    "altname": "RFU",
                    "bit_lsb": 3,
                    "bit_msb": 3,
                    "description": "Reserved for Use.",
                    "mode": "RW",
                    "name": "Rfu"
                },
                {
                    "altname": "MAC_SERDES_RST",
                    "bit_lsb": 2,
                    "bit_msb": 2,
                    "description": "Reset to all MAC SerDes",
                    "mode": "RW",
                    "name": "MacSerDesRst"
                },
                {
                    "altname": "MAC_S_RST",
                    "bit_lsb": 1,
                    "bit_msb": 1,
                    "description": "SRESET - Not Used",
                    "mode": "RW",
                    "name": "MacSReset"
                },
                {
                    "altname": "MAC_H_RST",
                    "bit_lsb": 0,
                    "bit_msb": 0,
                    "description": "HRESET - Not Used",
                    "mode": "RW",
                    "name": "MacHReset"
                }
            ]
        },
        "mac_csr.MacChanBufCount": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "RFU1",
                    "bit_lsb": 27,
                    "bit_msb": 31,
                    "description": "Reserved for Use.",
                    "mode": "RO",
                    "name": "Rfu1"
                },
                {
                    "altname": "IG_CHAN_RD_BUF_CNT",
                    "bit_lsb": 16,
                    "bit_msb": 26,
                    "description": "Live Ingress Chan buffer count indexed by Ig Chan Rd Addr.",
                    "mode": "RO",
                    "name": "IgChanRdBufCnt"
                },
                {
                    "altname": "RFU0",
                    "bit_lsb": 11,
                    "bit_msb": 15,
                    "description": "Reserved for Use.",
                    "mode": "RO",
                    "name": "Rfu0"
                },
                {
                    "altname": "EG_CHAN_RD_BUF_CNT",
                    "bit_lsb": 0,
                    "bit_msb": 10,
                    "description": "Live Egress Chan buffer count indexed by Eg Chan Rd Addr.",
                    "mode": "RO",
                    "name": "EgChanRdBufCnt"
                }
            ]
        },
        "mac_csr.MacChanRdAddr": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "RFU1",
                    "bit_lsb": 23,
                    "bit_msb": 31,
                    "description": "Reserved for Use.",
                    "mode": "RW",
                    "name": "Rfu1"
                },
                {
                    "altname": "IG_CHAN_RD_ADDR",
                    "bit_lsb": 16,
                    "bit_msb": 22,
                    "description": "Channel index for reading Ig channel buffer count. Upper 2 bits index the qmt quadrant for Live_Status1.",
                    "mode": "RW",
                    "name": "IgChanRdAddr"
                },
                {
                    "altname": "RFU0",
                    "bit_lsb": 7,
                    "bit_msb": 15,
                    "description": "Reserved for Use.",
                    "mode": "RW",
                    "name": "Rfu0"
                },
                {
                    "altname": "EG_CHAN_RD_ADDR",
                    "bit_lsb": 0,
                    "bit_msb": 6,
                    "description": "Channel index for reading Eg channel buffer count. Upper 2 bits index the qmt quadrant for Live_Status0.",
                    "mode": "RW",
                    "name": "EgChanRdAddr"
                }
            ]
        },
        "mac_csr.MacEgDropCtrl": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "DROP_ALL",
                    "bit_lsb": 16,
                    "bit_msb": 31,
                    "description": "Drop all packets cleanly before the IP.Can be used as a clean TX flush in conjunction with PfcIgn. Port stats will not see the packets.) ",
                    "mode": "RW",
                    "name": "DropAll"
                },
                {
                    "altname": "DROP_ON_ERR",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "Egress packets enqueued with error set will be cleanly dropped before the IP. Port stats will not see the packet.) ",
                    "mode": "RW",
                    "name": "DropOnErr"
                }
            ]
        },
        "mac_csr.MacEgIlkChanAssign": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "RFU1",
                    "bit_lsb": 29,
                    "bit_msb": 31,
                    "description": "Reserved for Use.",
                    "mode": "RW",
                    "name": "Rfu1"
                },
                {
                    "altname": "LK_NUM_CHANNELS_UPPER_64",
                    "bit_lsb": 22,
                    "bit_msb": 28,
                    "description": "The number of contiguous channels, starting at the base_channel(upper64base of 0 maps to channel 64), Interlaken Core0 or Core1 will use and respond to. Channels outside this range are ignored on Egress and dropped on ingress. For either Core0 or Core1, depending on the state of SplitMemIg bit. If SplitMemIg is set, then the upper 64 channels are ONLY available to Interlaken Core1 (and/or Hydra1). BaseChannel plus NumChannel MUST NOT exceed 64.",
                    "mode": "RW",
                    "name": "LkNumChannelsUpper64"
                },
                {
                    "altname": "LK_BASE_CHANNEL_UPPER_64",
                    "bit_lsb": 16,
                    "bit_msb": 21,
                    "description": "Sets the base channel number of the upper 64 channels for Interlaken use. For either Core0 or Core1, depending on the state of SplitMemIg bit. If SplitMemIg is set, then the upper 64 channels are ONLY available to Interlaken Core1 (and/or Hydra1). A BaseChannel value of 0 maps to physical channel 64",
                    "mode": "RW",
                    "name": "LkBaseChannelUpper64"
                },
                {
                    "altname": "RFU0",
                    "bit_lsb": 13,
                    "bit_msb": 15,
                    "description": "Reserved for Use.",
                    "mode": "RW",
                    "name": "Rfu0"
                },
                {
                    "altname": "LK_NUM_CHANNELS_LOWER_64",
                    "bit_lsb": 6,
                    "bit_msb": 12,
                    "description": "The number of contiguous channels, starting at the base_channel, Interlaken Core0 will use and respond to. Channels outside this range are ignored on Egress and dropped on ingress. For Core0 ONLY. BaseChannel plus NumChannel MUST NOT exceed 64.",
                    "mode": "RW",
                    "name": "LkNumChannelsLower64"
                },
                {
                    "altname": "LK_BASE_CHANNEL_LOWER_64",
                    "bit_lsb": 0,
                    "bit_msb": 5,
                    "description": "Sets the base channel number of the lower 64 channels for Interlaken use. ONLY Core0 can access these channels (0-63).",
                    "mode": "RW",
                    "name": "LkBaseChannelLower64"
                }
            ]
        },
        "mac_csr.MacEgPortRR": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "EG_PORT_RR",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "If set, EG Ethernet Port uses a round-robin DQ versus strict priority for multi-channel ports that are not in PFC mode. ",
                    "mode": "RW",
                    "name": "EgPortRR"
                }
            ]
        },
        "mac_csr.MacEgTimeStampInserted": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "TIME_STAMP_VALUE",
                    "bit_lsb": 0,
                    "bit_msb": 31,
                    "description": "Timestamp Inserted value for last packet sent marked for TS insertion.) ",
                    "mode": "RC",
                    "name": "TimeStampValue"
                }
            ]
        },
        "mac_csr.MacEqInh": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ILK1",
                    "bit_lsb": 25,
                    "bit_msb": 25,
                    "description": "Unused.",
                    "mode": "RW",
                    "name": "MacEqInhIlk1"
                },
                {
                    "altname": "ILK0",
                    "bit_lsb": 24,
                    "bit_msb": 24,
                    "description": "When set, Inhibits ILK0 Rx enqueuing at packet boundry. Sets the associated MacEqInhDone[16] bit when in effect.",
                    "mode": "RW",
                    "name": "MacEqInhIlk0"
                },
                {
                    "altname": "ETH_PORT_RFU",
                    "bit_lsb": 16,
                    "bit_msb": 23,
                    "description": "Unused.",
                    "mode": "RW",
                    "name": "MacEqInhEthPortRfu"
                },
                {
                    "altname": "ETH_PORT",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "When set, per-port inhibit of  Rx enqueuing at packet boundry. Sets the associated MacEqInhDone[15:0] bits when in effect.",
                    "mode": "RW",
                    "name": "MacEqInhEthPort"
                }
            ]
        },
        "mac_csr.MacEqInhDone": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ILK0",
                    "bit_lsb": 16,
                    "bit_msb": 16,
                    "description": "When set, indicates that RX enqueue is stopped for ILK0. Clears when MacEqInhIlk0 is cleared.",
                    "mode": "RO",
                    "name": "MacEqInhDoneIlk0"
                },
                {
                    "altname": "ETH_PORT",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "When set, indicates that RX enqueue is stopped for the associated port. Clears when associated MacEqInhEthPort bit is cleared.",
                    "mode": "RO",
                    "name": "MacEqInhDoneEthPort"
                }
            ]
        },
        "mac_csr.MacEthAnStatus": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ETH_AN_INT",
                    "bit_lsb": 12,
                    "bit_msb": 23,
                    "description": "Clear on read. A set bit indicates a new page-received interrupt from the auto-neg logic of the associated port.) ",
                    "mode": "RO",
                    "name": "EthAnInt"
                },
                {
                    "altname": "ETH_AN_DONE",
                    "bit_lsb": 0,
                    "bit_msb": 11,
                    "description": "A set bit indicates auto-neg of the associated port has completed. ",
                    "mode": "RO",
                    "name": "EthAnDone"
                }
            ]
        },
        "mac_csr.MacEthFifoIfErr": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "REM_LOC_FAULT_STICKY",
                    "bit_lsb": 24,
                    "bit_msb": 24,
                    "description": "Clear on read. A set bit indicates a change in the Hydra faults REM_FAULT or LOC_FAULT. Read the associated Hydra registers to identify faulted port. ",
                    "mode": "RO",
                    "name": "RemLocFaultSticky"
                },
                {
                    "altname": "ETH_TX_IF_OVR",
                    "bit_lsb": 12,
                    "bit_msb": 23,
                    "description": "Clear on read. A set bit indicates an overflow of the associated port transmit Fifo interface. ",
                    "mode": "RO",
                    "name": "EthTxIfOvr"
                },
                {
                    "altname": "ETH_TX_IF_UNF",
                    "bit_lsb": 0,
                    "bit_msb": 11,
                    "description": "Clear on read. A set bit indicates an underflow of the associated port transmit Fifo interface. ",
                    "mode": "RO",
                    "name": "EthTxIfUnf"
                }
            ]
        },
        "mac_csr.MacFlushDropCounter": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "MAC_FLUSH_DROP_COUNTER_1",
                    "bit_lsb": 16,
                    "bit_msb": 31,
                    "description": "Per-port packet flush drops due to DropAll or DropErr. Clear on read.",
                    "mode": "RO",
                    "name": "MacFlushDropCounter1"
                },
                {
                    "altname": "MAC_FLUSH_DROP_COUNTER_0",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "Per-port packet flush drops due to DropAll or DropErr. Clear on read.",
                    "mode": "RO",
                    "name": "MacFlushDropCounter0"
                }
            ]
        },
        "mac_csr.MacHeadDropCounter": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "MAC_HEAD_DROP_COUNTER",
                    "bit_lsb": 0,
                    "bit_msb": 31,
                    "description": "Per-port packet head drops due to overskid and free buffer underrun. Clear on read.",
                    "mode": "RO",
                    "name": "MacHeadDropCounter"
                }
            ]
        },
        "mac_csr.MacHiBerStatus": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "HI_BER",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "A set bit indicates a High Bit Error Rate of the associated port. ",
                    "mode": "RC",
                    "name": "HiBer"
                }
            ]
        },
        "mac_csr.MacHyd4BlkReset": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "MAC_HYD_RFU_C",
                    "bit_lsb": 30,
                    "bit_msb": 31,
                    "description": "Hydra specific reserved",
                    "mode": "RW",
                    "name": "MacHydRfuC"
                },
                {
                    "altname": "MAC_HYD_100G_EMAC_RST",
                    "bit_lsb": 29,
                    "bit_msb": 29,
                    "description": "Hydra resets for 100G Ethernet MAC port. (hydra0 only)",
                    "mode": "RW",
                    "name": "MacHyd100GEMacRst"
                },
                {
                    "altname": "MAC_HYD_RST_RFU_B",
                    "bit_lsb": 28,
                    "bit_msb": 28,
                    "description": "RFU.",
                    "mode": "RW",
                    "name": "MacHydRstRfuB"
                },
                {
                    "altname": "MAC_HYD_EMAC_RST",
                    "bit_lsb": 24,
                    "bit_msb": 27,
                    "description": "Hydra resets for Ethernet MAC per port.",
                    "mode": "RW",
                    "name": "MacHydEMacRst"
                },
                {
                    "altname": "MAC_HYD_GPCS_RST",
                    "bit_lsb": 20,
                    "bit_msb": 23,
                    "description": "Hydra resets for 1G PCS per port.",
                    "mode": "RW",
                    "name": "MacHydGpcsRst"
                },
                {
                    "altname": "MAC_HYD_RFU_A",
                    "bit_lsb": 17,
                    "bit_msb": 19,
                    "description": "Hydra specific reserved",
                    "mode": "RW",
                    "name": "MacHydRfuA"
                },
                {
                    "altname": "MAC_HYD_XPCS_RST",
                    "bit_lsb": 16,
                    "bit_msb": 16,
                    "description": "Reset signal for the shared 10/25/40/50/100Geth PCS.",
                    "mode": "RW",
                    "name": "MacHydXpcsRst"
                },
                {
                    "altname": "MAC_HYD_RX_HS_SERDES_RST",
                    "bit_lsb": 12,
                    "bit_msb": 15,
                    "description": "Hydra RX HS Serdes Interface Resets. (if supported).",
                    "mode": "RW",
                    "name": "MacHydRxHSSerDesIfRst"
                },
                {
                    "altname": "MAC_HYD_RX_SERDES_RST",
                    "bit_lsb": 8,
                    "bit_msb": 11,
                    "description": "Hydra RX Serdes Interface Resets. Rx Serdes clks must be running.",
                    "mode": "RW",
                    "name": "MacHydRxSerDesIfRst"
                },
                {
                    "altname": "MAC_HYD_TX_SERDES_RST",
                    "bit_lsb": 4,
                    "bit_msb": 7,
                    "description": "Hydra TX Serdes Interface Resets. Tx Serdes clks must be running.",
                    "mode": "RW",
                    "name": "MacHydTxSerDesIfRst"
                },
                {
                    "altname": "MAC_HYD_SD_GB_RST",
                    "bit_lsb": 3,
                    "bit_msb": 3,
                    "description": "Hydra SerDes Gearbox Interface Clock Domain Reset.",
                    "mode": "RW",
                    "name": "MacHydSdGbRst"
                },
                {
                    "altname": "MAC_HYD_TDM_FF_RST",
                    "bit_lsb": 2,
                    "bit_msb": 2,
                    "description": "Hydra TDM Fifo Interface Clock Domain Reset.",
                    "mode": "RW",
                    "name": "MacHydTdmFFRst"
                },
                {
                    "altname": "MAC_HYD_REG_RST",
                    "bit_lsb": 1,
                    "bit_msb": 1,
                    "description": "Hydra Reg Clock Domain Reset.",
                    "mode": "RW",
                    "name": "MacHydRegRst"
                },
                {
                    "altname": "MAC_HYD_REF_RST",
                    "bit_lsb": 0,
                    "bit_msb": 0,
                    "description": "Hydra Ref Clock Domain Reset.",
                    "mode": "RW",
                    "name": "MacHydRefRst"
                }
            ]
        },
        "mac_csr.MacHyd4Ctrl": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "MAC_HYD_PCS_SD_N2",
                    "bit_lsb": 28,
                    "bit_msb": 31,
                    "description": "MBZero.",
                    "mode": "RW",
                    "name": "MacHydPcsSd_N2"
                },
                {
                    "altname": "MAC_HYD_FEC_ERR_ENA",
                    "bit_lsb": 24,
                    "bit_msb": 27,
                    "description": "FEC module optional function to forward indication of uncorrectable errors to the PCS layer by corrupting sync headers. Per PCS enable bit.",
                    "mode": "RW",
                    "name": "MacHydFecErrEna"
                },
                {
                    "altname": "MAC_HYD_RFU_20",
                    "bit_lsb": 20,
                    "bit_msb": 23,
                    "description": "RFU.",
                    "mode": "RW",
                    "name": "MacHydRfu20"
                },
                {
                    "altname": "MAC_HYD_FEC_ENA",
                    "bit_lsb": 16,
                    "bit_msb": 19,
                    "description": "If set to 1, FEC encapsulation is enabled. Per PCS enable bit. Note: The signal acts on a per PCS basis. Depending on the configuration of the PCS it will automatically ensure to enable the FEC in the required lanes applicable for the mode of operation.",
                    "mode": "RW",
                    "name": "MacHydFecEna"
                },
                {
                    "altname": "MAC_HYD_PCS_RXLAUI_ENA2",
                    "bit_lsb": 15,
                    "bit_msb": 15,
                    "description": "Define for Channel 2 to operate with 2:1 bitmuxing per lane to use 2-lanes for the 4 VLs instead of 4 lanes. Can be used when RS-FEC is disabled for the channel. Allows use of 50G over 2-lanes without FEC or with FEC74. When bit is '0' the Channel operates without lane bitmuxing (1:1). When bit is '1' the channel uses 2:1 bitmuxing allowing it to operate with 50G over 2 lanes. Note: Channel 3 has no such input as it operates at 1lane only. See table.",
                    "mode": "RW",
                    "name": "MacHydPcsRxlauiEna2"
                },
                {
                    "altname": "MAC_HYD_PCS_RXLAUI_ENA0",
                    "bit_lsb": 14,
                    "bit_msb": 14,
                    "description": "Define for Channel 0 to operate with 2:1 bitmuxing per lane to use 2-lanes for the 4 VLs instead of 4 lanes. Can be used when RS-FEC is disabled for the channel. Allows use of 50G over 2-lanes without FEC or with FEC74. When bit is '0' the Channel operates without lane bitmuxing (1:1). When bit is '1' the channel uses 2:1 bitmuxing allowing it to operate with 50G over 2 lanes. Note: Channels 1 has no such input as it operates at 1lane only. See table.",
                    "mode": "RW",
                    "name": "MacHydPcsRxlauiEna0"
                },
                {
                    "altname": "MAC_HYD_PCS_FEC91_SINGLE_LANE_ENA_2",
                    "bit_lsb": 13,
                    "bit_msb": 13,
                    "description": "Enable RS-FEC single lane mode. When 1, uses lane 2 for implementing 25G Ethernet. When 0, uses lanes 2,3 implementing 50G Ethernet. ",
                    "mode": "RW",
                    "name": "MacHydPcsFec91SingleLaneEna2"
                },
                {
                    "altname": "MAC_HYD_PCS_FEC91_SINGLE_LANE_ENA_0",
                    "bit_lsb": 12,
                    "bit_msb": 12,
                    "description": "Enable RS-FEC single lane mode. When 1, uses lane 0 for implementing 25G Ethernet. When 0, uses lanes 0,1 implementing 50G Ethernet. ",
                    "mode": "RW",
                    "name": "MacHydPcsFec91SingleLaneEna0"
                },
                {
                    "altname": "MAC_HYD_RFU11",
                    "bit_lsb": 11,
                    "bit_msb": 11,
                    "description": "RFU.",
                    "mode": "RW",
                    "name": "MacHydRFU11"
                },
                {
                    "altname": "MAC_HYD_PCS0_MODE40_ENA",
                    "bit_lsb": 10,
                    "bit_msb": 10,
                    "description": "Define 40G mode of operation for Channel 0. When set '1' the Channel 0 PCS is used to operate over all 4 links. Channels 1..3 are disabled. Has an effect only when MacHydCGEna=0. When set '0' all Channels 0..3 are active and can be configured individually. ",
                    "mode": "RW",
                    "name": "MacHydPcs0Mode40Ena"
                },
                {
                    "altname": "MAC_HYD_PCS_FEC91_ENA",
                    "bit_lsb": 6,
                    "bit_msb": 9,
                    "description": "Enable control for RS-FEC (Clause 91) datapath per channel. When asserted (1) the Clause 91 RS-FEC datapath is active for the potr. If deasserted (0) the datapath uses normal 66b coding and can optionally use FEC74. Bit 0 is relevant also when the 100G PCS is active to enable RS-FEC.",
                    "mode": "RW",
                    "name": "MacHydPcsFec91Ena"
                },
                {
                    "altname": "MAC_HYD_RFU5",
                    "bit_lsb": 5,
                    "bit_msb": 5,
                    "description": "RFU.",
                    "mode": "RW",
                    "name": "MacHydRFU5"
                },
                {
                    "altname": "MAC_HYD_CG_ENA",
                    "bit_lsb": 4,
                    "bit_msb": 4,
                    "description": "100Geth MAC PCS Enable, When set to 1, the 100Geth MAC and PCS are enabled. When set to 0, the 1/10/25/40/50Geth PCSs (N=0) can be enabled or the 1/10Geth PCSs (N=1 or N=3) can be enabled.",
                    "mode": "RW",
                    "name": "MacHydCGEna"
                },
                {
                    "altname": "MAC_HYD_SG_ENA",
                    "bit_lsb": 0,
                    "bit_msb": 3,
                    "description": "SGMII PCS Enable: When set to 1, the SGMII PCS is enabled, when set to 0, the 10/25/40/50Geth PCS (N=0) is enabled, the 10/25Geth PCS (N=1) is enabled or the 10Geth PCS (N=2 or N=3) is enabled.",
                    "mode": "RW",
                    "name": "MacHydSGEna"
                }
            ]
        },
        "mac_csr.MacHydBlkReset": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "MAC_HYD_RX_SERDES_RST",
                    "bit_lsb": 20,
                    "bit_msb": 31,
                    "description": "Hydra RX Serdes Interface Resets. Rx Serdes clks must be running.",
                    "mode": "RW",
                    "name": "MacHydRxSerDesIfRst"
                },
                {
                    "altname": "RFU",
                    "bit_lsb": 16,
                    "bit_msb": 19,
                    "description": "Reserved for Use.",
                    "mode": "RW",
                    "name": "Rfu"
                },
                {
                    "altname": "MAC_HYD_TX_SERDES_RST",
                    "bit_lsb": 4,
                    "bit_msb": 15,
                    "description": "Hydra TX Serdes Interface Resets. Tx Serdes clks must be running.",
                    "mode": "RW",
                    "name": "MacHydTxSerDesIfRst"
                },
                {
                    "altname": "MAC_HYD_RX_FF_RST",
                    "bit_lsb": 3,
                    "bit_msb": 3,
                    "description": "Hydra RX Fifo Interface Clock Domain Reset.",
                    "mode": "RW",
                    "name": "MacHydRxFFRst"
                },
                {
                    "altname": "MAC_HYD_TX_FF_RST",
                    "bit_lsb": 2,
                    "bit_msb": 2,
                    "description": "Hydra TX Fifo Interface Clock Domain Reset.",
                    "mode": "RW",
                    "name": "MacHydTxFFRst"
                },
                {
                    "altname": "MAC_HYD_REG_RST",
                    "bit_lsb": 1,
                    "bit_msb": 1,
                    "description": "Hydra Reg Clock Domain Reset.",
                    "mode": "RW",
                    "name": "MacHydRegRst"
                },
                {
                    "altname": "MAC_HYD_REF_RST",
                    "bit_lsb": 0,
                    "bit_msb": 0,
                    "description": "Hydra Ref Clock Domain Reset.",
                    "mode": "RW",
                    "name": "MacHydRefRst"
                }
            ]
        },
        "mac_csr.MacIgChDropOnExcd": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "DROP_ON_EXCD",
                    "bit_lsb": 0,
                    "bit_msb": 31,
                    "description": "When set, the associated Ingress Enqueue port will drop packets for a channel starting at SOP when that channel HWM is exceeded. ",
                    "mode": "RW",
                    "name": "DropOnExcd"
                }
            ]
        },
        "mac_csr.MacIgEqStatus": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "IG_EQ_STATUS_RFU",
                    "bit_lsb": 21,
                    "bit_msb": 31,
                    "description": "RFU.",
                    "mode": "RW",
                    "name": "IgEqStatusRfu"
                },
                {
                    "altname": "PURGE",
                    "bit_lsb": 20,
                    "bit_msb": 20,
                    "description": "Set the purge bit to force a packet purge. Purge should only be used if the eq_inh has been set and the enq_inh_done does not set and WT4EOP is set for that port. This bit self-clears.",
                    "mode": "W1C",
                    "name": "Purge"
                },
                {
                    "altname": "PURGE_PORT",
                    "bit_lsb": 16,
                    "bit_msb": 19,
                    "description": "Port number where to force a packet purge when the purge bit gets set.",
                    "mode": "RW",
                    "name": "PurgePort"
                },
                {
                    "altname": "IG_EQ_WT4EOP",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "Waiting For EOP status bit for all 16 ports. If 1, then a packet is in progress for thast port. Live bits.",
                    "mode": "RO",
                    "name": "IgEqWt4Eop"
                }
            ]
        },
        "mac_csr.MacIgPortErr": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "PORT_ERR",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "Per-port bits indicating Ingress port_status_err captured. Bit clears on read of the captured Port error status.) ",
                    "mode": "RO",
                    "name": "PortErr"
                }
            ]
        },
        "mac_csr.MacIgPortErrStatus": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ERR_VALID",
                    "bit_lsb": 24,
                    "bit_msb": 24,
                    "description": "When set, indicated a captured err_status for the given port is present on bits [23:0]) ",
                    "mode": "RC",
                    "name": "ErrValid"
                },
                {
                    "altname": "PAYLOAD_LENGTH",
                    "bit_lsb": 8,
                    "bit_msb": 23,
                    "description": "Payload length of the errored frame. This is a copy of the length/type field as it is found within the frame. For VLAN frames it is a copy of the length/type field following the 4-octet VLAN tag.) ",
                    "mode": "RC",
                    "name": "PayloadLength"
                },
                {
                    "altname": "VLAN_TAG",
                    "bit_lsb": 7,
                    "bit_msb": 7,
                    "description": "Set to 1 to indicate that the current errored Frame implements a VLAN Tag.) ",
                    "mode": "RC",
                    "name": "VlanTag"
                },
                {
                    "altname": "CTL_CHAR_ERR",
                    "bit_lsb": 6,
                    "bit_msb": 6,
                    "description": "Set to 1 to indicate that the current frame was received with an Error control character on the XL/CGMII interface.) ",
                    "mode": "RC",
                    "name": "CtlCharErr"
                },
                {
                    "altname": "STACKED_VLAN_TAG",
                    "bit_lsb": 5,
                    "bit_msb": 5,
                    "description": "Set to 1 to indicate that the current errored Frame implements a Stacked VLAN Tag.) ",
                    "mode": "RC",
                    "name": "StackedVlanTag"
                },
                {
                    "altname": "SEQ_ERR",
                    "bit_lsb": 4,
                    "bit_msb": 4,
                    "description": "Set to 1 to indicate that a Sequence Error (Local or Remote) was received from the PHY device during frame reception.) ",
                    "mode": "RC",
                    "name": "SeqErr"
                },
                {
                    "altname": "FIFO_ERR",
                    "bit_lsb": 3,
                    "bit_msb": 3,
                    "description": "Set to 1 to indicate that the current errored frame was truncated because of a FIFO exception (Overflow).) ",
                    "mode": "RC",
                    "name": "FifoErr"
                },
                {
                    "altname": "BAD_CODE_ERR",
                    "bit_lsb": 2,
                    "bit_msb": 2,
                    "description": ".Set to 1 to indicate that the current errored frame was received with a wrong or unexpected code during frame reception reported by the reconciliation sub-layer function.) ",
                    "mode": "RC",
                    "name": "BadCodeErr"
                },
                {
                    "altname": "CRC32_ERR",
                    "bit_lsb": 1,
                    "bit_msb": 1,
                    "description": "Set to 1 to indicate that the current errored frame was received with a CRC-32 error.) ",
                    "mode": "RC",
                    "name": "Crc32Err"
                },
                {
                    "altname": "LENGTH_ERR",
                    "bit_lsb": 0,
                    "bit_msb": 0,
                    "description": "Set to 1 when the current frame has an invalid length, i.e. less than 64 octets or more than the maximum value defined in register FRM_LENGTH, or a mismatch between the payload received and the payload length given within the frame was detected.) ",
                    "mode": "RC",
                    "name": "LengthErr"
                }
            ]
        },
        "mac_csr.MacInterlakenCtl1": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "LK_BURSTMAX_CORE_1",
                    "bit_lsb": 29,
                    "bit_msb": 31,
                    "description": "Core1 Burstmax setting for the gasket controls.",
                    "mode": "RW",
                    "name": "LkBurstMaxCore1"
                },
                {
                    "altname": "LK_NUM_CHANNELS_UPPER_64",
                    "bit_lsb": 22,
                    "bit_msb": 28,
                    "description": "The number of contiguous channels, starting at the base_channel(upper64base of 0 maps to channel 64), Interlaken Core0 or Core1 will use and respond to. Channels outside this range are ignored on Egress and dropped on ingress. For either Core0 or Core1, depending on the state of SplitMemIg bit. If SplitMemIg is set, then the upper 64 channels are ONLY available to Interlaken Core1 (and/or Hydra1). BaseChannel plus NumChannel MUST NOT exceed 64.",
                    "mode": "RW",
                    "name": "LkNumChannelsUpper64"
                },
                {
                    "altname": "LK_BASE_CHANNEL_UPPER_64",
                    "bit_lsb": 16,
                    "bit_msb": 21,
                    "description": "Sets the base channel number of the upper 64 channels for Interlaken use. For either Core0 or Core1, depending on the state of SplitMemIg bit. If SplitMemIg is set, then the upper 64 channels are ONLY available to Interlaken Core1 (and/or Hydra1). A BaseChannel value of 0 maps to physical channel 64",
                    "mode": "RW",
                    "name": "LkBaseChannelUpper64"
                },
                {
                    "altname": "LK_BURSTMAX_CORE_0",
                    "bit_lsb": 13,
                    "bit_msb": 15,
                    "description": "Core0 Burstmax setting for the gasket controls.",
                    "mode": "RW",
                    "name": "LkBurstMaxCore0"
                },
                {
                    "altname": "LK_NUM_CHANNELS_LOWER_64",
                    "bit_lsb": 6,
                    "bit_msb": 12,
                    "description": "The number of contiguous channels, starting at the base_channel, Interlaken Core0 will use and respond to. Channels outside this range are ignored on Egress and dropped on ingress. For Core0 ONLY. BaseChannel plus NumChannel MUST NOT exceed 64.",
                    "mode": "RW",
                    "name": "LkNumChannelsLower64"
                },
                {
                    "altname": "LK_BASE_CHANNEL_LOWER_64",
                    "bit_lsb": 0,
                    "bit_msb": 5,
                    "description": "Sets the base channel number of the lower 64 channels for Interlaken use. ONLY Core0 can access these channels (0-63).",
                    "mode": "RW",
                    "name": "LkBaseChannelLower64"
                }
            ]
        },
        "mac_csr.MacInterlakenCtl2": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "RFU2",
                    "bit_lsb": 23,
                    "bit_msb": 31,
                    "description": "Reserved for Use.",
                    "mode": "RW",
                    "name": "Rfu2"
                },
                {
                    "altname": "LK_NBI_CHAN_SWAP_EN_1",
                    "bit_lsb": 22,
                    "bit_msb": 22,
                    "description": "When set, will map Laken1 Interlaken channels 0-63 to NBI channels 64-127.",
                    "mode": "RW",
                    "name": "LkNbiChanSwapEn1"
                },
                {
                    "altname": "IG_OOB_FC_SEL_CORE_1",
                    "bit_lsb": 21,
                    "bit_msb": 21,
                    "description": "When set, the ingress FC state is transmitted out thru the Out-Of-Band path only. The In-Band path will be all 1's. When clear, only the In-Band path will send FC state information.",
                    "mode": "RW",
                    "name": "IgOobFcSelCore1"
                },
                {
                    "altname": "EG_OOB_FC_SEL_CORE_1",
                    "bit_lsb": 20,
                    "bit_msb": 20,
                    "description": "When set, the egress FC decisions are made from the Xon vector provided by the OOB core1. If 0, then the FC decisions are made from the InBand Xon vector.",
                    "mode": "RW",
                    "name": "EgOobFcSelCore1"
                },
                {
                    "altname": "EG_TDM_MODE_LK_CORE_1",
                    "bit_lsb": 17,
                    "bit_msb": 19,
                    "description": "Not Used.",
                    "mode": "RW",
                    "name": "EgTdmModeLkCore1"
                },
                {
                    "altname": "EG_ATOMIC_LK_CORE_1",
                    "bit_lsb": 16,
                    "bit_msb": 16,
                    "description": "If set to 1, the dequeue is SOP to EOP, no interleave. If 0,  segmented packet dequeue is allowed with channel interleaving on egress Core1.",
                    "mode": "RW",
                    "name": "EgAtomicLkCore1"
                },
                {
                    "altname": "RFU",
                    "bit_lsb": 7,
                    "bit_msb": 15,
                    "description": "Reserved for Use.",
                    "mode": "RW",
                    "name": "Rfu"
                },
                {
                    "altname": "LK_NBI_CHAN_SWAP_EN_0",
                    "bit_lsb": 6,
                    "bit_msb": 6,
                    "description": "When set, will map Laken0 Interlaken channels 0-63 to NBI channels 64-127 if split_mem not set and Laken0 only enabled on channels 64-127, otherwise channels are mapped one-to-one..",
                    "mode": "RW",
                    "name": "LkNbiChanSwapEn0"
                },
                {
                    "altname": "IG_OOB_FC_SEL_CORE_0",
                    "bit_lsb": 5,
                    "bit_msb": 5,
                    "description": "When set, the ingress FC state is transmitted out thru the Out-Of-Band path only. The In-Band path will be all 1's. When clear, only the In-Band path will send FC state information.",
                    "mode": "RW",
                    "name": "IgOobFcSelCore0"
                },
                {
                    "altname": "EG_OOB_FC_SEL_CORE_0",
                    "bit_lsb": 4,
                    "bit_msb": 4,
                    "description": "When set, the egress FC decisions are made from the Xon vector provided by the OOB core0. If 0, then the FC decisions are made from the InBand Xon vector.",
                    "mode": "RW",
                    "name": "EgOobFcSelCore0"
                },
                {
                    "altname": "EG_TDM_MODE_LK_CORE_0",
                    "bit_lsb": 1,
                    "bit_msb": 3,
                    "description": "Not Used.",
                    "mode": "RW",
                    "name": "EgTdmModeLkCore0"
                },
                {
                    "altname": "EG_ATOMIC_LK_CORE_0",
                    "bit_lsb": 0,
                    "bit_msb": 0,
                    "description": "If set to 1, the dequeue is SOP to EOP, no interleave. If 0, segmented packet dequeue is allowed with channel interleaving on egress Core0.",
                    "mode": "RW",
                    "name": "EgAtomicLkCore0"
                }
            ]
        },
        "mac_csr.MacInterruptErrStatus0": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "MAC_INTERRUPT_ERR_STATUS_1",
                    "bit_lsb": 0,
                    "bit_msb": 31,
                    "description": "RFU.",
                    "mode": "RW",
                    "name": "MacInterruptErrStatus1"
                }
            ]
        },
        "mac_csr.MacInterruptErrStatus1": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "MAC_RX_PFC_CHANGE_INT",
                    "bit_lsb": 31,
                    "bit_msb": 31,
                    "description": "Mac Interrupt for RX PFC State change any port.",
                    "mode": "RC",
                    "name": "MacRxPfcChangeInt"
                },
                {
                    "altname": "MAC_TX_PFC_CHANGE_INT",
                    "bit_lsb": 30,
                    "bit_msb": 30,
                    "description": "Mac Interrupt for TX PFC State change any port.",
                    "mode": "RC",
                    "name": "MacTxPfcChangeInt"
                },
                {
                    "altname": "RFU",
                    "bit_lsb": 24,
                    "bit_msb": 29,
                    "description": "Reserved for Use.",
                    "mode": "RC",
                    "name": "Rfu"
                },
                {
                    "altname": "MAC_LINKT_TRAINING_INT_HY1",
                    "bit_lsb": 12,
                    "bit_msb": 23,
                    "description": "Mac Link training Interrupt Hy1. (only 0-3 valid)",
                    "mode": "RC",
                    "name": "MacLinTrainingInthy1"
                },
                {
                    "altname": "MAC_LINKT_TRAINING_INT_HY0",
                    "bit_lsb": 0,
                    "bit_msb": 11,
                    "description": "Mac Link training Interrupt Hy0.",
                    "mode": "RC",
                    "name": "MacLinTrainingInthy0"
                }
            ]
        },
        "mac_csr.MacLiveStatus0": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "MAC_LIVE_STATUS_0",
                    "bit_lsb": 0,
                    "bit_msb": 31,
                    "description": "Egress Queue Empty live status. 1 = empty. A 32-bit quadrant of the 128 channels indexed by the Egress Chan Rd Addr field bit [6:5].",
                    "mode": "RO",
                    "name": "MacLiveStatus0"
                }
            ]
        },
        "mac_csr.MacLiveStatus1": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "MAC_LIVE_STATUS_1",
                    "bit_lsb": 0,
                    "bit_msb": 31,
                    "description": "Ingress Queue Empty live status. 1 = empty. A 32-bit quadrant of the 128 channels indexed by the Ingress Chan Rd Addr field bit [6:5].",
                    "mode": "RO",
                    "name": "MacLiveStatus1"
                }
            ]
        },
        "mac_csr.MacMemCtrlReg": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "MAC_MEM_CTRL_BC2",
                    "bit_lsb": 14,
                    "bit_msb": 14,
                    "description": "Mac Cores Memory Control BC2.",
                    "mode": "RW",
                    "name": "MacMemCtrlBC2"
                },
                {
                    "altname": "MAC_MEM_CTRL_BC1",
                    "bit_lsb": 13,
                    "bit_msb": 13,
                    "description": "Mac Cores Memory Control BC1.",
                    "mode": "RW",
                    "name": "MacMemCtrlBC1"
                },
                {
                    "altname": "MAC_MEM_CTRL_TEST1B",
                    "bit_lsb": 12,
                    "bit_msb": 12,
                    "description": "Mac Cores Memory Control TEST1B.",
                    "mode": "RW",
                    "name": "MacMemCtrlTest1B"
                },
                {
                    "altname": "MAC_MEM_CTRL_TEST1A",
                    "bit_lsb": 11,
                    "bit_msb": 11,
                    "description": "Mac Cores Memory Control TEST1A/TEST1.",
                    "mode": "RW",
                    "name": "MacMemCtrlTest1A"
                },
                {
                    "altname": "MAC_MEM_CTRL_RMEB",
                    "bit_lsb": 10,
                    "bit_msb": 10,
                    "description": "Mac Cores Memory Control RMEB/RME.",
                    "mode": "RW",
                    "name": "MacMemCtrlRMEB"
                },
                {
                    "altname": "MAC_MEM_CTRL_RA",
                    "bit_lsb": 8,
                    "bit_msb": 9,
                    "description": "Mac Cores Memory Control RA.",
                    "mode": "RW",
                    "name": "MacMemCtrlRA"
                },
                {
                    "altname": "MAC_MEM_CTRL_RMB",
                    "bit_lsb": 4,
                    "bit_msb": 7,
                    "description": "Mac Cores Memory Control RMB.",
                    "mode": "RW",
                    "name": "MacMemCtrlRMB"
                },
                {
                    "altname": "MAC_MEM_CTRL_RMA",
                    "bit_lsb": 0,
                    "bit_msb": 3,
                    "description": "Mac Cores Memory Control RMA/RM.",
                    "mode": "RW",
                    "name": "MacMemCtrlRMA"
                }
            ]
        },
        "mac_csr.MacMuxCtrl": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "HS_SERDES_SELECT_19_15",
                    "bit_lsb": 31,
                    "bit_msb": 31,
                    "description": "Per Lane HS serdes select.  When set to 1, the IP-lane will use the 25G/10G HS SerDes on lane 19. When 0, the IP-lane will use the 1G/10G GP SerDes on lane 15.",
                    "mode": "RW",
                    "name": "HsSerDesSelect1915"
                },
                {
                    "altname": "HS_SERDES_SELECT_18_14",
                    "bit_lsb": 30,
                    "bit_msb": 30,
                    "description": "Per Lane HS serdes select.  When set to 1, the IP-lane will use the 25G/10G HS SerDes on lane 18. When 0, the IP-lane will use the 1G/10G GP SerDes on lane 14.",
                    "mode": "RW",
                    "name": "HsSerDesSelect1814"
                },
                {
                    "altname": "HS_SERDES_SELECT_17_13",
                    "bit_lsb": 29,
                    "bit_msb": 29,
                    "description": "Per Lane HS serdes select.  When set to 1, the IP-lane will use the 25G/10G HS SerDes on lane 17. When 0, the IP-lane will use the 1G/10G GP SerDes on lane 13.",
                    "mode": "RW",
                    "name": "HsSerDesSelect1713"
                },
                {
                    "altname": "HS_SERDES_SELECT_16_12",
                    "bit_lsb": 28,
                    "bit_msb": 28,
                    "description": "Per Lane HS serdes select.  When set to 1, the IP-lane will use the 25G/10G HS SerDes on lane 16. When 0, the IP-lane will use the 1G/10G GP SerDes on lane 12.",
                    "mode": "RW",
                    "name": "HsSerDesSelect1612"
                },
                {
                    "altname": "RFU",
                    "bit_lsb": 25,
                    "bit_msb": 27,
                    "description": "Reserved for Use.",
                    "mode": "RW",
                    "name": "Rfu"
                },
                {
                    "altname": "MAC_ILA_SEL",
                    "bit_lsb": 24,
                    "bit_msb": 24,
                    "description": "MAC ILA MUX Select",
                    "mode": "RW",
                    "name": "LASelect"
                },
                {
                    "altname": "MAC_INLK_SEL",
                    "bit_lsb": 0,
                    "bit_msb": 23,
                    "description": "Selects Interlaken or Ethernet MACs for SerDes connect",
                    "mode": "RW",
                    "name": "MacSerDesIntlknSel"
                }
            ]
        },
        "mac_csr.MacOobFcIlkStatus": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "MAC_OOB_FC_CRC_ERR_1",
                    "bit_lsb": 19,
                    "bit_msb": 19,
                    "description": "Clear on read. A set bit indicates a CRC error for RX 512 OOB unit 1.) ",
                    "mode": "RO",
                    "name": "MacOobFcCrcErr1"
                },
                {
                    "altname": "MAC_OOB_FC_FRM_ERR_1",
                    "bit_lsb": 18,
                    "bit_msb": 18,
                    "description": "Clear on read. A set bit indicates a framing error for RX 512 OOB unit 1.) ",
                    "mode": "RO",
                    "name": "MacOobFcFrmErr1"
                },
                {
                    "altname": "MAC_OOB_FC_CRC_ERR_0",
                    "bit_lsb": 17,
                    "bit_msb": 17,
                    "description": "Clear on read. A set bit indicates a CRC error for RX 512 OOB unit 0.) ",
                    "mode": "RO",
                    "name": "MacOobFcCrcErr0"
                },
                {
                    "altname": "MAC_OOB_FC_FRM_ERR_0",
                    "bit_lsb": 16,
                    "bit_msb": 16,
                    "description": "Clear on read. A set bit indicates a framing error for RX 512 OOB unit 0.) ",
                    "mode": "RO",
                    "name": "MacOobFcFrmErr0"
                },
                {
                    "altname": "ILK_INT_2ND_RX_1",
                    "bit_lsb": 7,
                    "bit_msb": 7,
                    "description": "Sticky, Clear on read (or selectable as live). A set bit indicates 2nd RX interrupt from the ILK1 . ",
                    "mode": "RO",
                    "name": "IlkInt2ndRx1"
                },
                {
                    "altname": "ILK_INT_2ND_TX_1",
                    "bit_lsb": 6,
                    "bit_msb": 6,
                    "description": "Sticky, Clear on read (or selectable as live). A set bit indicates 2nd TX interrupt from the ILK1 . ",
                    "mode": "RO",
                    "name": "IlkInt2ndTx1"
                },
                {
                    "altname": "ILK_INT_RX_1",
                    "bit_lsb": 5,
                    "bit_msb": 5,
                    "description": "Sticky, Clear on read (or selectable as live). A set bit indicates RX interrupt from the ILK1 . ",
                    "mode": "RO",
                    "name": "IlkIntRx1"
                },
                {
                    "altname": "ILK_INT_TX_1",
                    "bit_lsb": 4,
                    "bit_msb": 4,
                    "description": "Sticky, Clear on read (or selectable as live). A set bit indicates TX interrupt from the ILK1 . ",
                    "mode": "RO",
                    "name": "IlkIntTx1"
                },
                {
                    "altname": "ILK_INT_2ND_RX_0",
                    "bit_lsb": 3,
                    "bit_msb": 3,
                    "description": "Sticky, Clear on read (or selectable as live). A set bit indicates 2nd RX interrupt from the ILK0 . ",
                    "mode": "RO",
                    "name": "IlkInt2ndRx0"
                },
                {
                    "altname": "ILK_INT_2ND_TX_0",
                    "bit_lsb": 2,
                    "bit_msb": 2,
                    "description": "Sticky, Clear on read (or selectable as live). A set bit indicates 2nd TX interrupt from the ILK0 . ",
                    "mode": "RO",
                    "name": "IlkInt2ndTx0"
                },
                {
                    "altname": "ILK_INT_RX_0",
                    "bit_lsb": 1,
                    "bit_msb": 1,
                    "description": "Sticky, Clear on read (or selectable as live). A set bit indicates RX interrupt from the ILK0 . ",
                    "mode": "RO",
                    "name": "IlkIntRx0"
                },
                {
                    "altname": "ILK_INT_TX_0",
                    "bit_lsb": 0,
                    "bit_msb": 0,
                    "description": "Sticky, Clear on read (or selectable as live). A set bit indicates TX interrupt from the ILK0 . ",
                    "mode": "RO",
                    "name": "IlkIntTx0"
                }
            ]
        },
        "mac_csr.MacOobFcTmCntl": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "OOB_1023_TO_512_RFU",
                    "bit_lsb": 22,
                    "bit_msb": 31,
                    "description": "RFU.",
                    "mode": "RW",
                    "name": "Oob1023To512RFU"
                },
                {
                    "altname": "OOB_1023_TO_512_MOD32_M1",
                    "bit_lsb": 18,
                    "bit_msb": 21,
                    "description": "N/A C0.",
                    "mode": "RW",
                    "name": "Oob1023To512Mod32M1"
                },
                {
                    "altname": "OOB_1023_TO_512_MSG_EN",
                    "bit_lsb": 17,
                    "bit_msb": 17,
                    "description": "N/A for C0.",
                    "mode": "RW",
                    "name": "Oob1023To512MsgEn"
                },
                {
                    "altname": "OOB_1023_TO_512_EN",
                    "bit_lsb": 16,
                    "bit_msb": 16,
                    "description": "N/A for C0.",
                    "mode": "RW",
                    "name": "Oob1023To512En"
                },
                {
                    "altname": "OOB_511_TO_0_RFU",
                    "bit_lsb": 6,
                    "bit_msb": 15,
                    "description": "RFU.",
                    "mode": "RW",
                    "name": "Oob511To0RFU"
                },
                {
                    "altname": "OOB_511_TO_0_MOD32_M1",
                    "bit_lsb": 2,
                    "bit_msb": 5,
                    "description": "Sets the size of the calendar == ((value + 1) * 32). A value of 0 => 32 channels. 7 => 256. 15 => 512.",
                    "mode": "RW",
                    "name": "Oob511To0Mod32M1"
                },
                {
                    "altname": "OOB_511_TO_0_MSG_EN",
                    "bit_lsb": 1,
                    "bit_msb": 1,
                    "description": "If set, enables OOB FC widget 0 for 13 bit messages.",
                    "mode": "RW",
                    "name": "Oob511To0MsgEn"
                },
                {
                    "altname": "OOB_511_TO_0_EN",
                    "bit_lsb": 0,
                    "bit_msb": 0,
                    "description": "If set, enables OOB FC widget 0 for queues 0-511. Uses ILK0 RX OOB pins. Also enables the FC address mux.",
                    "mode": "RW",
                    "name": "Oob511To0En"
                }
            ]
        },
        "mac_csr.MacOobFcTmReMap": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "TM_FC_ADDR7_SEL",
                    "bit_lsb": 28,
                    "bit_msb": 31,
                    "description": "Selects the which 128 bit segment from the 1024 vector is presented to TM when FC_ADDR = 7.",
                    "mode": "RW",
                    "name": "TmFcAddr7Sel"
                },
                {
                    "altname": "TM_FC_ADDR6_SEL",
                    "bit_lsb": 24,
                    "bit_msb": 27,
                    "description": "Selects the which 128 bit segment from the 1024 vector is presented to TM when FC_ADDR = 6.",
                    "mode": "RW",
                    "name": "TmFcAddr6Sel"
                },
                {
                    "altname": "TM_FC_ADDR5_SEL",
                    "bit_lsb": 20,
                    "bit_msb": 23,
                    "description": "Selects the which 128 bit segment from the 1024 vector is presented to TM when FC_ADDR = 5.",
                    "mode": "RW",
                    "name": "TmFcAddr5Sel"
                },
                {
                    "altname": "TM_FC_ADDR4_SEL",
                    "bit_lsb": 16,
                    "bit_msb": 19,
                    "description": "Selects the which 128 bit segment from the 1024 vector is presented to TM when FC_ADDR = 4.",
                    "mode": "RW",
                    "name": "TmFcAddr4Sel"
                },
                {
                    "altname": "TM_FC_ADDR3_SEL",
                    "bit_lsb": 12,
                    "bit_msb": 15,
                    "description": "Selects the which 128 bit segment from the 1024 vector is presented to TM when FC_ADDR = 3.",
                    "mode": "RW",
                    "name": "TmFcAddr3Sel"
                },
                {
                    "altname": "TM_FC_ADDR2_SEL",
                    "bit_lsb": 8,
                    "bit_msb": 11,
                    "description": "Selects the which 128 bit segment from the 1024 vector is presented to TM when FC_ADDR = 2.",
                    "mode": "RW",
                    "name": "TmFcAddr2Sel"
                },
                {
                    "altname": "TM_FC_ADDR1_SEL",
                    "bit_lsb": 4,
                    "bit_msb": 7,
                    "description": "Selects the which 128 bit segment from the 1024 vector is presented to TM when FC_ADDR = 1.",
                    "mode": "RW",
                    "name": "TmFcAddr1Sel"
                },
                {
                    "altname": "TM_FC_ADDR0_SEL",
                    "bit_lsb": 0,
                    "bit_msb": 3,
                    "description": "Selects the which 128 bit segment from the 1024 vector is presented to TM when FC_ADDR = 0. (0 = 127:0, 3 = 511:384, etc) ",
                    "mode": "RW",
                    "name": "TmFcAddr0Sel"
                }
            ]
        },
        "mac_csr.MacPauseStateChange": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "RX_PAUSE_STATE_CHANGE",
                    "bit_lsb": 16,
                    "bit_msb": 31,
                    "description": "A set bit indicates a state change in the received pause/pfc state for the associated port regardless of any inhibits or ignores.",
                    "mode": "RC",
                    "name": "RxPauseStateChange"
                },
                {
                    "altname": "TX_PAUSE_STATE_CHANGE",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "A set bit indicates a state change in the actual transmitted pause/pfc state for the associated port. Inhibited pfc levels will not trigger this.",
                    "mode": "RC",
                    "name": "TxPauseStateChange"
                }
            ]
        },
        "mac_csr.MacPcpReMap": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "PORT_IG_DQ_RR_EN",
                    "bit_lsb": 31,
                    "bit_msb": 31,
                    "description": "When set, enables the associated port Ingress DQ engine to use round-robin instead of strict priority between the port's channels.",
                    "mode": "RW",
                    "name": "PortIgDqRrEn"
                },
                {
                    "altname": "PCP_IG_DQ_LO_2_HI_PRI",
                    "bit_lsb": 30,
                    "bit_msb": 30,
                    "description": "When set, enables the associated port Ingress DQ engine to use lowest channel number as High priority between the port's channels.",
                    "mode": "RW",
                    "name": "PortIgDqLo2HiPri"
                },
                {
                    "altname": "MAC_UNTAGD_ABS",
                    "bit_lsb": 24,
                    "bit_msb": 29,
                    "description": "If PFC mode en, then an UNtagged packet will be directed to this absolute channel. For Hy0 the channels can be 0-63 and for Hy1 0-63 maps to 64-127",
                    "mode": "RW",
                    "name": "UntaggedChan"
                },
                {
                    "altname": "PCP_REMAP7",
                    "bit_lsb": 21,
                    "bit_msb": 23,
                    "description": "Maps tagged packet with PCP 7 to this value channel delta from the base channel.",
                    "mode": "RW",
                    "name": "PcpReMap7"
                },
                {
                    "altname": "PCP_REMAP6",
                    "bit_lsb": 18,
                    "bit_msb": 20,
                    "description": "Maps tagged packet with PCP 6 to this value channel delta from the base channel.",
                    "mode": "RW",
                    "name": "PcpReMap6"
                },
                {
                    "altname": "PCP_REMAP5",
                    "bit_lsb": 15,
                    "bit_msb": 17,
                    "description": "Maps tagged packet with PCP 5 to this value channel delta from the base channel.",
                    "mode": "RW",
                    "name": "PcpReMap5"
                },
                {
                    "altname": "PCP_REMAP4",
                    "bit_lsb": 12,
                    "bit_msb": 14,
                    "description": "Maps tagged packet with PCP 4 to this value channel delta from the base channel.",
                    "mode": "RW",
                    "name": "PcpReMap4"
                },
                {
                    "altname": "PCP_REMAP3",
                    "bit_lsb": 9,
                    "bit_msb": 11,
                    "description": "Maps tagged packet with PCP 3 to this value channel delta from the base channel.",
                    "mode": "RW",
                    "name": "PcpReMap3"
                },
                {
                    "altname": "PCP_REMAP2",
                    "bit_lsb": 6,
                    "bit_msb": 8,
                    "description": "Maps tagged packet with PCP 2 to this value channel delta from the base channel.",
                    "mode": "RW",
                    "name": "PcpReMap2"
                },
                {
                    "altname": "PCP_REMAP1",
                    "bit_lsb": 3,
                    "bit_msb": 5,
                    "description": "Maps tagged packet with PCP 1 to this value channel delta from the base channel.",
                    "mode": "RW",
                    "name": "PcpReMap1"
                },
                {
                    "altname": "PCP_REMAP0",
                    "bit_lsb": 0,
                    "bit_msb": 2,
                    "description": "Maps tagged packet with PCP 0 to this value channel delta from the base channel.",
                    "mode": "RW",
                    "name": "PcpReMap0"
                }
            ]
        },
        "mac_csr.MacPfcGen1Shot": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "PFC_1SHOT_3",
                    "bit_lsb": 24,
                    "bit_msb": 31,
                    "description": "When any bit set, a PFC/Pause frame will be issued on port(3+4xd) at that PFC level. The 1shot bit clears when sampled as a 1 by the IP. ",
                    "mode": "RW",
                    "name": "Pfc1Shot3"
                },
                {
                    "altname": "PFC_1SHOT_2",
                    "bit_lsb": 16,
                    "bit_msb": 23,
                    "description": "When any bit set, a PFC/Pause frame will be issued on port(2+4xd) at that PFC level. The 1shot bit clears when sampled as a 1 by the IP. ",
                    "mode": "RW",
                    "name": "Pfc1Shot2"
                },
                {
                    "altname": "PFC_1SHOT_1",
                    "bit_lsb": 8,
                    "bit_msb": 15,
                    "description": "When any bit set, a PFC/Pause frame will be issued on port(1+4xd) at that PFC level. The 1shot bit clears when sampled as a 1 by the IP. ",
                    "mode": "RW",
                    "name": "Pfc1Shot1"
                },
                {
                    "altname": "PFC_1SHOT_0",
                    "bit_lsb": 0,
                    "bit_msb": 7,
                    "description": "When any bit set, a PFC/Pause frame will be issued on port(4xd) at that PFC level. The 1shot bit clears when sampled as a 1 by the IP. ",
                    "mode": "RW",
                    "name": "Pfc1Shot0"
                }
            ]
        },
        "mac_csr.MacPfcIgnEn": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "PFC_IGN_3",
                    "bit_lsb": 24,
                    "bit_msb": 31,
                    "description": "When any bit set, PFC/Pause will be ingnored on port(3+4xd) at that PFC level.",
                    "mode": "RW",
                    "name": "PfcIgn3"
                },
                {
                    "altname": "PFC_IGN_2",
                    "bit_lsb": 16,
                    "bit_msb": 23,
                    "description": "When any bit set, PFC/Pause will be ingnored on port(2+4xd) at that PFC level.",
                    "mode": "RW",
                    "name": "PfcIgn2"
                },
                {
                    "altname": "PFC_IGN_1",
                    "bit_lsb": 8,
                    "bit_msb": 15,
                    "description": "When any bit set, PFC/Pause will be ignored on port(1+4xd) at that PFC level.",
                    "mode": "RW",
                    "name": "PfcIgn1"
                },
                {
                    "altname": "PFC_IGN_0",
                    "bit_lsb": 0,
                    "bit_msb": 7,
                    "description": "When any bit set, PFC/Pause will be ignored on port(4xd) at that PFC level.",
                    "mode": "RW",
                    "name": "PfcIgn0"
                }
            ]
        },
        "mac_csr.MacPfcReMap": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "PORT_EG_DQ_RR_EN",
                    "bit_lsb": 31,
                    "bit_msb": 31,
                    "description": "When set, enables the associated port Egress DQ engine to use round-robin instead of strict priority between the port's channels.",
                    "mode": "RW",
                    "name": "PortEgDqRrEn"
                },
                {
                    "altname": "PCP_EG_DQ_LO_2_HI_PRI",
                    "bit_lsb": 30,
                    "bit_msb": 30,
                    "description": "When set, enables the associated port Egress DQ engine to use lowest channel number as High priority between the port's channels.",
                    "mode": "RW",
                    "name": "PortEgDqLo2HiPri"
                },
                {
                    "altname": "PFC_REMAP7",
                    "bit_lsb": 21,
                    "bit_msb": 23,
                    "description": "If in pfc_mode, maps PFC_xoff[7] from hydra to this value channel delta from the base channel, otherwise PFC_xoff[0] is mapped to the delta.",
                    "mode": "RW",
                    "name": "PfcReMap7"
                },
                {
                    "altname": "PFC_REMAP6",
                    "bit_lsb": 18,
                    "bit_msb": 20,
                    "description": "If in pfc_mode, maps PFC_xoff[6] from hydra to this value channel delta from the base channel, otherwise PFC_xoff[0] is mapped to the delta.",
                    "mode": "RW",
                    "name": "PfcReMap6"
                },
                {
                    "altname": "PFC_REMAP5",
                    "bit_lsb": 15,
                    "bit_msb": 17,
                    "description": "If in pfc_mode, maps PFC_xoff[5] from hydra to this value channel delta from the base channel, otherwise PFC_xoff[0] is mapped to the delta.",
                    "mode": "RW",
                    "name": "PfcReMap5"
                },
                {
                    "altname": "PFC_REMAP4",
                    "bit_lsb": 12,
                    "bit_msb": 14,
                    "description": "If in pfc_mode, maps PFC_xoff[4] from hydra to this value channel delta from the base channel, otherwise PFC_xoff[0] is mapped to the delta.",
                    "mode": "RW",
                    "name": "PfcReMap4"
                },
                {
                    "altname": "PFC_REMAP3",
                    "bit_lsb": 9,
                    "bit_msb": 11,
                    "description": "If in pfc_mode, maps PFC_xoff[3] from hydra to this value channel delta from the base channel, otherwise PFC_xoff[0] is mapped to the delta.",
                    "mode": "RW",
                    "name": "PfcReMap3"
                },
                {
                    "altname": "PFC_REMAP2",
                    "bit_lsb": 6,
                    "bit_msb": 8,
                    "description": "If in pfc_mode, maps PFC_xoff[2] from hydra to this value channel delta from the base channel, otherwise PFC_xoff[0] is mapped to the delta.",
                    "mode": "RW",
                    "name": "PfcReMap2"
                },
                {
                    "altname": "PFC_REMAP1",
                    "bit_lsb": 3,
                    "bit_msb": 5,
                    "description": "If in pfc_mode, maps PFC_xoff[1] from hydra to this value channel delta from the base channel, otherwise PFC_xoff[0] is mapped to the delta.",
                    "mode": "RW",
                    "name": "PfcReMap1"
                },
                {
                    "altname": "PFC_REMAP0",
                    "bit_lsb": 0,
                    "bit_msb": 2,
                    "description": "If in pfc_mode, maps PFC_xoff[0] from hydra to this value channel delta from the base channel, otherwise PFC_xoff[0] is mapped to the delta.",
                    "mode": "RW",
                    "name": "PfcReMap0"
                }
            ]
        },
        "mac_csr.MacPortChanAssign": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "PORT_NUM_OF_CHANS2",
                    "bit_lsb": 26,
                    "bit_msb": 29,
                    "description": "Number of active channels 0 - 8 for a port. Channel mapping range = base + 0:num where base+0 is the lowest priority channel and base+(num-1) is the highest.",
                    "mode": "RW",
                    "name": "PortNumOfChannels2"
                },
                {
                    "altname": "PORT_BASE_CHAN2",
                    "bit_lsb": 20,
                    "bit_msb": 25,
                    "description": "Base channel number for port. For Hydra0 0-63. For Hydra1 0-63 + 64.  ",
                    "mode": "RW",
                    "name": "PortBaseChan2"
                },
                {
                    "altname": "PORT_NUM_OF_CHANS1",
                    "bit_lsb": 16,
                    "bit_msb": 19,
                    "description": "Number of active channels 0 - 8 for a port. Channel mapping range = base + 0:num where base+0 is the lowest priority channel and base+(num-1) is the highest.",
                    "mode": "RW",
                    "name": "PortNumOfChannels1"
                },
                {
                    "altname": "PORT_BASE_CHAN1",
                    "bit_lsb": 10,
                    "bit_msb": 15,
                    "description": "Base channel number for port. For Hydra0 0-63. For Hydra1 0-63 + 64.  ",
                    "mode": "RW",
                    "name": "PortBaseChan1"
                },
                {
                    "altname": "PORT_NUM_OF_CHANS0",
                    "bit_lsb": 6,
                    "bit_msb": 9,
                    "description": "Number of active channels 0 - 8 for a port. Channel mapping range = base + 0:num where base+0 is the lowest priority channel and base+(num-1) is the highest.",
                    "mode": "RW",
                    "name": "PortNumOfChannels0"
                },
                {
                    "altname": "PORT_BASE_CHAN0",
                    "bit_lsb": 0,
                    "bit_msb": 5,
                    "description": "Base channel number for port. For Hydra0 0-63. For Hydra1 0-63 + 64.  ",
                    "mode": "RW",
                    "name": "PortBaseChan0"
                }
            ]
        },
        "mac_csr.MacPortChanAssign1": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "RFU",
                    "bit_lsb": 10,
                    "bit_msb": 29,
                    "description": "Reserved.  ",
                    "mode": "RW",
                    "name": "Rfu"
                },
                {
                    "altname": "PORT_NUM_OF_CHANS0",
                    "bit_lsb": 6,
                    "bit_msb": 9,
                    "description": "Number of active channels 0 - 8 for a port. Channel mapping range = base + 0:num where base+0 is the lowest priority channel and base+(num-1) is the highest.",
                    "mode": "RW",
                    "name": "PortNumOfChannels0"
                },
                {
                    "altname": "PORT_BASE_CHAN0",
                    "bit_lsb": 0,
                    "bit_msb": 5,
                    "description": "Base channel number for port. For Hydra0 0-63. For Hydra1 0-63 + 64.  ",
                    "mode": "RW",
                    "name": "PortBaseChan0"
                }
            ]
        },
        "mac_csr.MacPortHwm": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "POR_DROP_DELTA1",
                    "bit_lsb": 27,
                    "bit_msb": 31,
                    "description": "Skid in 4 buffer increments (4x256B) over the HWM before all port traffic is dropped.",
                    "mode": "RW",
                    "name": "PortDropDelta1"
                },
                {
                    "altname": "PORT_HWM1",
                    "bit_lsb": 16,
                    "bit_msb": 26,
                    "description": "HWM in 256B buffers before Xoff/Pause is asserted to all port channels.",
                    "mode": "RW",
                    "name": "PortHwm1"
                },
                {
                    "altname": "POR_DROP_DELTA0",
                    "bit_lsb": 11,
                    "bit_msb": 15,
                    "description": "Skid in 4 buffer increments (4x256B) over the HWM before all port traffic is dropped.",
                    "mode": "RW",
                    "name": "PortDropDelta0"
                },
                {
                    "altname": "PORT_HWM0",
                    "bit_lsb": 0,
                    "bit_msb": 10,
                    "description": "HWM in 256B buffers before Xoff/Pause is asserted to all port channels.",
                    "mode": "RW",
                    "name": "PortHwm0"
                }
            ]
        },
        "mac_csr.MacPortHwm1": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "POR_DROP_DELTA1",
                    "bit_lsb": 27,
                    "bit_msb": 31,
                    "description": "Skid in 4 buffer increments (4x256B) over the HWM before all port traffic is dropped.",
                    "mode": "RW",
                    "name": "PortDropDelta1"
                },
                {
                    "altname": "PORT_HWM1",
                    "bit_lsb": 16,
                    "bit_msb": 26,
                    "description": "HWM in 256B buffers before Xoff/Pause is asserted to all port channels.",
                    "mode": "RW",
                    "name": "PortHwm1"
                },
                {
                    "altname": "POR_DROP_DELTA0",
                    "bit_lsb": 11,
                    "bit_msb": 15,
                    "description": "Skid in 4 buffer increments (4x256B) over the HWM before all port traffic is dropped.",
                    "mode": "RW",
                    "name": "PortDropDelta0"
                },
                {
                    "altname": "PORT_HWM0",
                    "bit_lsb": 0,
                    "bit_msb": 10,
                    "description": "HWM in 256B buffers before Xoff/Pause is asserted to all port channels.",
                    "mode": "RW",
                    "name": "PortHwm0"
                }
            ]
        },
        "mac_csr.MacPowercsrs": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "MAC_POWER_CSRS",
                    "bit_lsb": 0,
                    "bit_msb": 31,
                    "description": "32 bit Memory Control Power CSRs. Setting bit to 1 Shuts down the memory.",
                    "mode": "RW",
                    "name": "MacPowerCsrs"
                }
            ]
        },
        "mac_csr.MacPrePendCtl1": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "EG_SKIP_OCTETS_PORT_3",
                    "bit_lsb": 28,
                    "bit_msb": 31,
                    "description": "Number of bytes to skip at beginning of Egress packet before parsing for MAC Header(0-8 only).",
                    "mode": "RW",
                    "name": "EGSkipOctetsPort3"
                },
                {
                    "altname": "IG_SKIP_OCTETS_PORT_3",
                    "bit_lsb": 24,
                    "bit_msb": 27,
                    "description": "Number of bytes to skip at beginning of Ingress packet before parsing for MAC Header(0-8 only).",
                    "mode": "RW",
                    "name": "IGSkipOctetsPort3"
                },
                {
                    "altname": "EG_SKIP_OCTETS_PORT_2",
                    "bit_lsb": 20,
                    "bit_msb": 23,
                    "description": "Number of bytes to skip at beginning of Egress packet before parsing for MAC Header(0-8 only).",
                    "mode": "RW",
                    "name": "EGSkipOctetsPort2"
                },
                {
                    "altname": "IG_SKIP_OCTETS_PORT_2",
                    "bit_lsb": 16,
                    "bit_msb": 19,
                    "description": "Number of bytes to skip at beginning of Ingress packet before parsing for MAC Header(0-8 only).",
                    "mode": "RW",
                    "name": "IGSkipOctetsPort2"
                },
                {
                    "altname": "EG_SKIP_OCTETS_PORT_1",
                    "bit_lsb": 12,
                    "bit_msb": 15,
                    "description": "Number of bytes to skip at beginning of Egress packet before parsing for MAC Header(0-8 only).",
                    "mode": "RW",
                    "name": "EGSkipOctetsPort1"
                },
                {
                    "altname": "IG_SKIP_OCTETS_PORT_1",
                    "bit_lsb": 8,
                    "bit_msb": 11,
                    "description": "Number of bytes to skip at beginning of Ingress packet before parsing for MAC Header(0-8 only).",
                    "mode": "RW",
                    "name": "IGSkipOctetsPort1"
                },
                {
                    "altname": "EG_SKIP_OCTETS_PORT_0",
                    "bit_lsb": 4,
                    "bit_msb": 7,
                    "description": "Number of bytes to skip at beginning of Egress packet before parsing for MAC Header(0-8 only). Ports 0 Maps to Interlaken MAC 0 if enabled.",
                    "mode": "RW",
                    "name": "EGSkipOctetsPort0"
                },
                {
                    "altname": "IG_SKIP_OCTETS_PORT_0",
                    "bit_lsb": 0,
                    "bit_msb": 3,
                    "description": "Number of bytes to skip at beginning of Ingress packet before parsing for MAC Header(0-8 only). Port 0 Maps to Interlaken MAC 0 if enabled.",
                    "mode": "RW",
                    "name": "IGSkipOctetsPort0"
                }
            ]
        },
        "mac_csr.MacPrePendCtl2": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "EG_SKIP_OCTETS_PORT_7",
                    "bit_lsb": 28,
                    "bit_msb": 31,
                    "description": "Number of bytes to skip at beginning of Egress packet before parsing for MAC Header(0-8 only).",
                    "mode": "RW",
                    "name": "EGSkipOctetsPort7"
                },
                {
                    "altname": "IG_SKIP_OCTETS_PORT_7",
                    "bit_lsb": 24,
                    "bit_msb": 27,
                    "description": "Number of bytes to skip at beginning of Ingress packet before parsing for MAC Header(0-8 only).",
                    "mode": "RW",
                    "name": "IGSkipOctetsPort7"
                },
                {
                    "altname": "EG_SKIP_OCTETS_PORT_6",
                    "bit_lsb": 20,
                    "bit_msb": 23,
                    "description": "Number of bytes to skip at beginning of Egress packet before parsing for MAC Header(0-8 only).",
                    "mode": "RW",
                    "name": "EGSkipOctetsPort6"
                },
                {
                    "altname": "IG_SKIP_OCTETS_PORT_6",
                    "bit_lsb": 16,
                    "bit_msb": 19,
                    "description": "Number of bytes to skip at beginning of Ingress packet before parsing for MAC Header(0-8 only).",
                    "mode": "RW",
                    "name": "IGSkipOctetsPort6"
                },
                {
                    "altname": "EG_SKIP_OCTETS_PORT_5",
                    "bit_lsb": 12,
                    "bit_msb": 15,
                    "description": "Number of bytes to skip at beginning of Egress packet before parsing for MAC Header(0-8 only).",
                    "mode": "RW",
                    "name": "EGSkipOctetsPort5"
                },
                {
                    "altname": "IG_SKIP_OCTETS_PORT_5",
                    "bit_lsb": 8,
                    "bit_msb": 11,
                    "description": "Number of bytes to skip at beginning of Ingress packet before parsing for MAC Header(0-8 only).",
                    "mode": "RW",
                    "name": "IGSkipOctetsPort5"
                },
                {
                    "altname": "EG_SKIP_OCTETS_PORT_4",
                    "bit_lsb": 4,
                    "bit_msb": 7,
                    "description": "Number of bytes to skip at beginning of Egress packet before parsing for MAC Header(0-8 only).",
                    "mode": "RW",
                    "name": "EGSkipOctetsPort4"
                },
                {
                    "altname": "IG_SKIP_OCTETS_PORT_4",
                    "bit_lsb": 0,
                    "bit_msb": 3,
                    "description": "Number of bytes to skip at beginning of Ingress packet before parsing for MAC Header(0-8 only).",
                    "mode": "RW",
                    "name": "IGSkipOctetsPort4"
                }
            ]
        },
        "mac_csr.MacPrePendCtl3": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "EG_SKIP_OCTETS_PORT_11",
                    "bit_lsb": 28,
                    "bit_msb": 31,
                    "description": "Number of bytes to skip at beginning of Egress packet before parsing for MAC Header(0-8 only). Port 23 Maps to Interlaken MAC 1 if enabled.",
                    "mode": "RW",
                    "name": "EGSkipOctetsPort11"
                },
                {
                    "altname": "IG_SKIP_OCTETS_PORT_11",
                    "bit_lsb": 24,
                    "bit_msb": 27,
                    "description": "Number of bytes to skip at beginning of Ingress packet before parsing for MAC Header(0-8 only). Port 23 Maps to Interlaken MAC 1 if enabled.",
                    "mode": "RW",
                    "name": "IGSkipOctetsPort11"
                },
                {
                    "altname": "EG_SKIP_OCTETS_PORT_10",
                    "bit_lsb": 20,
                    "bit_msb": 23,
                    "description": "Number of bytes to skip at beginning of Egress packet before parsing for MAC Header(0-8 only).",
                    "mode": "RW",
                    "name": "EGSkipOctetsPort10"
                },
                {
                    "altname": "IG_SKIP_OCTETS_PORT_10",
                    "bit_lsb": 16,
                    "bit_msb": 19,
                    "description": "Number of bytes to skip at beginning of Ingress packet before parsing for MAC Header(0-8 only).",
                    "mode": "RW",
                    "name": "IGSkipOctetsPort10"
                },
                {
                    "altname": "EG_SKIP_OCTETS_PORT_9",
                    "bit_lsb": 12,
                    "bit_msb": 15,
                    "description": "Number of bytes to skip at beginning of Egress packet before parsing for MAC Header(0-8 only).",
                    "mode": "RW",
                    "name": "EGSkipOctetsPort9"
                },
                {
                    "altname": "IG_SKIP_OCTETS_PORT_9",
                    "bit_lsb": 8,
                    "bit_msb": 11,
                    "description": "Number of bytes to skip at beginning of Ingress packet before parsing for MAC Header(0-8 only).",
                    "mode": "RW",
                    "name": "IGSkipOctetsPort9"
                },
                {
                    "altname": "EG_SKIP_OCTETS_PORT_8",
                    "bit_lsb": 4,
                    "bit_msb": 7,
                    "description": "Number of bytes to skip at beginning of Egress packet before parsing for MAC Header(0-8 only).",
                    "mode": "RW",
                    "name": "EGSkipOctetsPort8"
                },
                {
                    "altname": "IG_SKIP_OCTETS_PORT_8",
                    "bit_lsb": 0,
                    "bit_msb": 3,
                    "description": "Number of bytes to skip at beginning of Ingress packet before parsing for MAC Header(0-8 only).",
                    "mode": "RW",
                    "name": "IGSkipOctetsPort8"
                }
            ]
        },
        "mac_csr.MacPrePendDsaCtl1": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "DSA_TAG_MODE_PORT_15",
                    "bit_lsb": 30,
                    "bit_msb": 31,
                    "description": "DSA tagging mode for port 15.",
                    "mode": "RW",
                    "name": "DsaTagModePort15"
                },
                {
                    "altname": "DSA_TAG_MODE_PORT_14",
                    "bit_lsb": 28,
                    "bit_msb": 29,
                    "description": "DSA tagging mode for port 14.",
                    "mode": "RW",
                    "name": "DsaTagModePort14"
                },
                {
                    "altname": "DSA_TAG_MODE_PORT_13",
                    "bit_lsb": 26,
                    "bit_msb": 27,
                    "description": "DSA tagging mode for port 13.",
                    "mode": "RW",
                    "name": "DsaTagModePort13"
                },
                {
                    "altname": "DSA_TAG_MODE_PORT_12",
                    "bit_lsb": 24,
                    "bit_msb": 25,
                    "description": "DSA tagging mode for port 12.",
                    "mode": "RW",
                    "name": "DsaTagModePort12"
                },
                {
                    "altname": "DSA_TAG_MODE_PORT_11",
                    "bit_lsb": 22,
                    "bit_msb": 23,
                    "description": "DSA tagging mode for port 11.",
                    "mode": "RW",
                    "name": "DsaTagModePort11"
                },
                {
                    "altname": "DSA_TAG_MODE_PORT_10",
                    "bit_lsb": 20,
                    "bit_msb": 21,
                    "description": "DSA tagging mode for port 10.",
                    "mode": "RW",
                    "name": "DsaTagModePort10"
                },
                {
                    "altname": "DSA_TAG_MODE_PORT_9",
                    "bit_lsb": 18,
                    "bit_msb": 19,
                    "description": "DSA tagging mode for port 9.",
                    "mode": "RW",
                    "name": "DsaTagModePort9"
                },
                {
                    "altname": "DSA_TAG_MODE_PORT_8",
                    "bit_lsb": 16,
                    "bit_msb": 17,
                    "description": "DSA tagging mode for port 8.",
                    "mode": "RW",
                    "name": "DsaTagModePort8"
                },
                {
                    "altname": "DSA_TAG_MODE_PORT_7",
                    "bit_lsb": 14,
                    "bit_msb": 15,
                    "description": "DSA tagging mode for port 7.",
                    "mode": "RW",
                    "name": "DsaTagModePort7"
                },
                {
                    "altname": "DSA_TAG_MODE_PORT_6",
                    "bit_lsb": 12,
                    "bit_msb": 13,
                    "description": "DSA tagging mode for port 6..",
                    "mode": "RW",
                    "name": "DsaTagModePort6"
                },
                {
                    "altname": "DSA_TAG_MODE_PORT_5",
                    "bit_lsb": 10,
                    "bit_msb": 11,
                    "description": "DSA tagging mode for port 5.",
                    "mode": "RW",
                    "name": "DsaTagModePort5"
                },
                {
                    "altname": "DSA_TAG_MODE_PORT_4",
                    "bit_lsb": 8,
                    "bit_msb": 9,
                    "description": "DSA tagging mode for port 4.",
                    "mode": "RW",
                    "name": "DsaTagModePort4"
                },
                {
                    "altname": "DSA_TAG_MODE_PORT_3",
                    "bit_lsb": 6,
                    "bit_msb": 7,
                    "description": "DSA tagging mode for port 3.",
                    "mode": "RW",
                    "name": "DsaTagModePort3"
                },
                {
                    "altname": "DSA_TAG_MODE_PORT_2",
                    "bit_lsb": 4,
                    "bit_msb": 5,
                    "description": "DSA tagging mode for port 2.",
                    "mode": "RW",
                    "name": "DsaTagModePort2"
                },
                {
                    "altname": "DSA_TAG_MODE_PORT_1",
                    "bit_lsb": 2,
                    "bit_msb": 3,
                    "description": "DSA tagging mode for port 1.",
                    "mode": "RW",
                    "name": "DsaTagModePort1"
                },
                {
                    "altname": "DSA_TAG_MODE_PORT_0",
                    "bit_lsb": 0,
                    "bit_msb": 1,
                    "description": "DSA tagging mode for port 0.",
                    "mode": "RW",
                    "name": "DsaTagModePort0"
                }
            ]
        },
        "mac_csr.MacPrePendDsaCtl2": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "RFU",
                    "bit_lsb": 20,
                    "bit_msb": 31,
                    "description": "Reserved for Use.",
                    "mode": "RW",
                    "name": "Rfu"
                },
                {
                    "altname": "DSA_TAG_MODE_LK_CORE_1",
                    "bit_lsb": 18,
                    "bit_msb": 19,
                    "description": "DSA tagging mode for LK Core 1.",
                    "mode": "RW",
                    "name": "DsaTagModeLkCore1"
                },
                {
                    "altname": "DSA_TAG_MODE_LK_CORE_0",
                    "bit_lsb": 16,
                    "bit_msb": 17,
                    "description": "DSA tagging mode for LK Core 0.",
                    "mode": "RW",
                    "name": "DsaTagModeLkCore0"
                },
                {
                    "altname": "DSA_TAG_MODE_PORT_23",
                    "bit_lsb": 14,
                    "bit_msb": 15,
                    "description": "DSA tagging mode for port 23.",
                    "mode": "RW",
                    "name": "DsaTagModePort23"
                },
                {
                    "altname": "DSA_TAG_MODE_PORT_22",
                    "bit_lsb": 12,
                    "bit_msb": 13,
                    "description": "DSA tagging mode for port 22.",
                    "mode": "RW",
                    "name": "DsaTagModePort22"
                },
                {
                    "altname": "DSA_TAG_MODE_PORT_21",
                    "bit_lsb": 10,
                    "bit_msb": 11,
                    "description": "DSA tagging mode for port 21.",
                    "mode": "RW",
                    "name": "DsaTagModePort21"
                },
                {
                    "altname": "DSA_TAG_MODE_PORT_20",
                    "bit_lsb": 8,
                    "bit_msb": 9,
                    "description": "DSA tagging mode for port 20.",
                    "mode": "RW",
                    "name": "DsaTagModePort20"
                },
                {
                    "altname": "DSA_TAG_MODE_PORT_19",
                    "bit_lsb": 6,
                    "bit_msb": 7,
                    "description": "DSA tagging mode for port 19.",
                    "mode": "RW",
                    "name": "DsaTagModePort19"
                },
                {
                    "altname": "DSA_TAG_MODE_PORT_18",
                    "bit_lsb": 4,
                    "bit_msb": 5,
                    "description": "DSA tagging mode for port 18.",
                    "mode": "RW",
                    "name": "DsaTagModePort18"
                },
                {
                    "altname": "DSA_TAG_MODE_PORT_17",
                    "bit_lsb": 2,
                    "bit_msb": 3,
                    "description": "DSA tagging mode for port 17.",
                    "mode": "RW",
                    "name": "DsaTagModePort17"
                },
                {
                    "altname": "DSA_TAG_MODE_PORT_16",
                    "bit_lsb": 0,
                    "bit_msb": 1,
                    "description": "DSA tagging mode for port 16.",
                    "mode": "RW",
                    "name": "DsaTagModePort16"
                }
            ]
        },
        "mac_csr.MacSerDesEn": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "RFU",
                    "bit_lsb": 24,
                    "bit_msb": 31,
                    "description": "Reserved for Use.",
                    "mode": "RW",
                    "name": "Rfu"
                },
                {
                    "altname": "SERDES_ENABLE",
                    "bit_lsb": 0,
                    "bit_msb": 23,
                    "description": "Serdes Enables. (May be redefined when SerDes added).",
                    "mode": "RW",
                    "name": "SerDesEnable"
                }
            ]
        },
        "mac_csr.MacSerialCount": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "SERIAL_COUNT_RFU",
                    "bit_lsb": 26,
                    "bit_msb": 31,
                    "description": "Reserved.",
                    "mode": "RW",
                    "name": "SerialCountRFU"
                },
                {
                    "altname": "BAUD_COUNT",
                    "bit_lsb": 8,
                    "bit_msb": 25,
                    "description": "Reload count for core_clk decremented baud counter.) ",
                    "mode": "RW",
                    "name": "BaudCount"
                },
                {
                    "altname": "FRAC_COUNT",
                    "bit_lsb": 0,
                    "bit_msb": 7,
                    "description": "Fractional increment count for creating more accurate baud n/256.) ",
                    "mode": "RW",
                    "name": "FracCount"
                }
            ]
        },
        "mac_csr.MacSerialCtrl": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "SERIAL_ENABLE",
                    "bit_lsb": 31,
                    "bit_msb": 31,
                    "description": "Enable for Serial LED IO to emit state info.",
                    "mode": "RW",
                    "name": "SerialEnable"
                },
                {
                    "altname": "SERIAL_UN_INVERT",
                    "bit_lsb": 30,
                    "bit_msb": 30,
                    "description": "Serial data default inverted for 8N1. Setting this bit emits uninverted data.",
                    "mode": "RW",
                    "name": "SerialUnInvert"
                },
                {
                    "altname": "SERIAL_LSB_FIRST",
                    "bit_lsb": 29,
                    "bit_msb": 29,
                    "description": "When set, emitted data byte will be sent LSb first.",
                    "mode": "RW",
                    "name": "SerialLsbFirst"
                },
                {
                    "altname": "SERIAL_8N1",
                    "bit_lsb": 28,
                    "bit_msb": 28,
                    "description": "Enable for 8N1 format. 10b : start(0), 8b data, stop(1). inverted. When 0, only 8b data will be transmitted, no framing, subject to uninvert and lsb_first.",
                    "mode": "RW",
                    "name": "Serial8N1"
                },
                {
                    "altname": "SERIAL_OE",
                    "bit_lsb": 27,
                    "bit_msb": 27,
                    "description": "Output Enable for Serial LED IO pin. IO pin must also be mux selected to the MAC LED function.",
                    "mode": "RW",
                    "name": "SerialOe"
                },
                {
                    "altname": "SERIAL_CTRL_RFU",
                    "bit_lsb": 10,
                    "bit_msb": 26,
                    "description": "Reserved.",
                    "mode": "RW",
                    "name": "SerialCtrlRFU"
                },
                {
                    "altname": "LED_CLR_BIT_NUM",
                    "bit_lsb": 5,
                    "bit_msb": 9,
                    "description": "When the indexed bit in the FRC transitions from 0 to 1, deluminates any LEDs selected for activity. except if Clr and Set are equal, in which case it will be on the 1 to 0 transition for a 50/50 display.) ",
                    "mode": "RW",
                    "name": "LedClrBitNum"
                },
                {
                    "altname": "LED_SET_BIT_NUM",
                    "bit_lsb": 0,
                    "bit_msb": 4,
                    "description": "When the indexed bit in the FRC transitions from 0 to 1, illuminates any LEDs selected for activity if activity on the port has occurred.) ",
                    "mode": "RW",
                    "name": "LedSetBitNum"
                }
            ]
        },
        "mac_csr.MacStatsHalfFull": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "TX_STAT_HALF_FULL_VLD",
                    "bit_lsb": 24,
                    "bit_msb": 24,
                    "description": "Clear on read. A set bit indicates a Tx stat @TX_STAT_ADDR went half full.) ",
                    "mode": "RO",
                    "name": "TxStatHalfFullVld"
                },
                {
                    "altname": "TX_STAT_ADDR",
                    "bit_lsb": 16,
                    "bit_msb": 23,
                    "description": "When VLD set, indicates the channel or port where a statistic count has gone half full.) ",
                    "mode": "RO",
                    "name": "TxStatAddr"
                },
                {
                    "altname": "RX_STAT_HALF_FULL_VLD",
                    "bit_lsb": 8,
                    "bit_msb": 8,
                    "description": "Clear on read. A set bit indicates an Rx stat @RX_STAT_ADDR went half full.) ",
                    "mode": "RO",
                    "name": "RxStatHalfFullVld"
                },
                {
                    "altname": "RX_STAT_ADDR",
                    "bit_lsb": 0,
                    "bit_msb": 7,
                    "description": "When VLD set, indicates the channel or port where a statistic count has gone half full.) ",
                    "mode": "RO",
                    "name": "RxStatAddr"
                }
            ]
        },
        "mac_csr.MacSysSupCtrl": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "HISTO_GOODPUT_ONLY",
                    "bit_lsb": 31,
                    "bit_msb": 31,
                    "description": "When set,  stats histograms only count goodput",
                    "mode": "RW",
                    "name": "HistoGoodputOnly"
                },
                {
                    "altname": "NBI_IG_PORT_XOFF_EN",
                    "bit_lsb": 30,
                    "bit_msb": 30,
                    "description": "If set to 1, enables the NBI to inhibit IG dequeues on a port basis.",
                    "mode": "RW",
                    "name": "NbiIgPortXoffEn"
                },
                {
                    "altname": "SPLIT_MEM_ENH_EG",
                    "bit_lsb": 29,
                    "bit_msb": 29,
                    "description": "Combined with SplitMemIG to configure the gasket memories for Egress. 2b00:Core0 all mem, 2b01:Core0 1/2 and Core1 1.2, 2b10:Core1 all memory, 2b11:Core0 3/4 Core1 1/4.",
                    "mode": "RW",
                    "name": "SplitMemEnhEg"
                },
                {
                    "altname": "SPLIT_MEM_ENH",
                    "bit_lsb": 28,
                    "bit_msb": 28,
                    "description": "Combined with SplitMemIG to configure the gasket memories for Ingress. 2b00:Core0 all mem, 2b01:Core0 1/2 and Core1 1.2, 2b10:Core1 all memory, 2b11:Core0 3/4 Core1 1/4.",
                    "mode": "RW",
                    "name": "SplitMemEnh"
                },
                {
                    "altname": "IG_PARSE_PAYLEN_ENABLE",
                    "bit_lsb": 27,
                    "bit_msb": 27,
                    "description": "When set, IG parser will use L3 paylength to limit checksum for L4(UDP/TCP) and L4 overall checksums.",
                    "mode": "RW",
                    "name": "IgParsePaylenEnable"
                },
                {
                    "altname": "MAC_SERDES_LANE_SWAP_L23_L12",
                    "bit_lsb": 26,
                    "bit_msb": 26,
                    "description": "When set, serdes lanes 12 thru 23 and reversed to be 23 thru 12. eg NFP-6000 pins for Serdes Lane 23 will be received on IP lane 12 and Serdes Lane 12 will be received on IP lane 23.",
                    "mode": "RW",
                    "name": "MacSerDesLaneSwapL23L12"
                },
                {
                    "altname": "MAC_SERDES_LANE_SWAP_L11_L00",
                    "bit_lsb": 25,
                    "bit_msb": 25,
                    "description": "When set, serdes lanes 0 thru 11 and reversed to be 11 thru 0. eg NFP-6000 pins for Serdes Lane 11 will be received on IP lane 0 and Serdes lane 0 will be received on IP lane 11.",
                    "mode": "RW",
                    "name": "MacSerDesLaneSwapL11L00"
                },
                {
                    "altname": "MAC_ILK_FORCE_PAD_ERR",
                    "bit_lsb": 24,
                    "bit_msb": 24,
                    "description": "When set to 1, packets less than 17 bytes will dropped. When 0, packets are padded to 24 bytes and passed thru to NBI.",
                    "mode": "RW",
                    "name": "MacIlkForcePadErr"
                },
                {
                    "altname": "MAC_MPB_FREE_BUF_FIFO_LOW_WM",
                    "bit_lsb": 20,
                    "bit_msb": 23,
                    "description": "Low Water mark for Free Buffer FIFO to start backpressuring NBI MPB thru denial of data credits.",
                    "mode": "RW",
                    "name": "MacMpbFreeBufFifoLowWm"
                },
                {
                    "altname": "MAC_IG_LNK_LST_FREEZE_ON_ERR_N",
                    "bit_lsb": 19,
                    "bit_msb": 19,
                    "description": "When 0, Freeze IG Linklist on Multibit ECC error.",
                    "mode": "RW",
                    "name": "MacIgLnkLstFreezeOnErrN"
                },
                {
                    "altname": "MAC_EG_LNK_LST_FREEZE_ON_ERR_N",
                    "bit_lsb": 18,
                    "bit_msb": 18,
                    "description": "When 0, Freeze EG Linklist on Multibit ECC error.",
                    "mode": "RW",
                    "name": "MacEgLnkLstFreezeOnErrN"
                },
                {
                    "altname": "DWRR_ARBITER_DISABLE",
                    "bit_lsb": 17,
                    "bit_msb": 17,
                    "description": "IG DQ DWRR arbiter disable bit. Setting this bit to 1 will disable Ingress DQ operation.",
                    "mode": "RW",
                    "name": "DwrrArbiterDisable"
                },
                {
                    "altname": "DWRR_WEIGHT_WR_ENABLE",
                    "bit_lsb": 16,
                    "bit_msb": 16,
                    "description": "IG DQ DWRR arbiter inits to fixed weights. To overwrite the fixed weights, this bit must be set and remain set to use the override values.",
                    "mode": "RW",
                    "name": "DwrrWeightWrEnable"
                },
                {
                    "altname": "MAC_ILK_LIVE_INT_SEL",
                    "bit_lsb": 15,
                    "bit_msb": 15,
                    "description": "When set, ILK IP Interrupts are selected live to the ILK status register. When clear, the Interrupt bits are sticky and clear on read.",
                    "mode": "RW",
                    "name": "MacIlkLiveIntSel"
                },
                {
                    "altname": "LK1_IG_DQ_SEGEMENTED_EN",
                    "bit_lsb": 14,
                    "bit_msb": 14,
                    "description": "When set IG DQ from LK1 channels is segmented on buffer (256B) boundries, subject to the limits of packet credits.",
                    "mode": "RW",
                    "name": "Lk1IgDqSegmentedEn"
                },
                {
                    "altname": "LK0_IG_DQ_SEGEMENTED_EN",
                    "bit_lsb": 13,
                    "bit_msb": 13,
                    "description": "When set IG DQ from LK0 channels is segmented on buffer (256B) boundries, subject to the limits of packet credits.",
                    "mode": "RW",
                    "name": "Lk0IgDqSegmentedEn"
                },
                {
                    "altname": "LK1_LINKLIST_EN",
                    "bit_lsb": 12,
                    "bit_msb": 12,
                    "description": "When set and SplitMemIG set, enables the IG freelist FIFO for Laken1 to pull from the free pool.",
                    "mode": "RW",
                    "name": "Lk1LinklistEn"
                },
                {
                    "altname": "LK0_LINKLIST_EN",
                    "bit_lsb": 11,
                    "bit_msb": 11,
                    "description": "When set, enables the IG freelist FIFO for Laken0 to pull from the free pool.",
                    "mode": "RW",
                    "name": "Lk0LinklistEn"
                },
                {
                    "altname": "HY1_LINKLIST_EN",
                    "bit_lsb": 10,
                    "bit_msb": 10,
                    "description": "When set and SplitMemIG also set, enables the IG freelist FIFO for Hydra1 to pull from the free pool.",
                    "mode": "RW",
                    "name": "Hy1LinklistEn"
                },
                {
                    "altname": "HY0_LINKLIST_EN",
                    "bit_lsb": 9,
                    "bit_msb": 9,
                    "description": "When set, enables the IG freelist FIFO for Hydra0 to pull from the free pool.",
                    "mode": "RW",
                    "name": "Hy0LinklistEn"
                },
                {
                    "altname": "SPLIT_MEM_IG",
                    "bit_lsb": 8,
                    "bit_msb": 8,
                    "description": "When set, splits the channels, packet and linklist memories in half to support 2 active hydras. Ingress and Egress.",
                    "mode": "RW",
                    "name": "SplitMemIG"
                },
                {
                    "altname": "EXTRA_ETH_HIST_MODE",
                    "bit_lsb": 7,
                    "bit_msb": 7,
                    "description": "When set, swaps some channel stats counters for additional histogram size counters. Ethernet ports only",
                    "mode": "RW",
                    "name": "ExtraEthHistMode"
                },
                {
                    "altname": "LIMITER_DISABLE_HY1",
                    "bit_lsb": 6,
                    "bit_msb": 6,
                    "description": "When set, disables the EG DQ limiter for ports 12-15 when in 10G/1G modes. ",
                    "mode": "RW",
                    "name": "Limiter_Disable_Hy1"
                },
                {
                    "altname": "MAC_SYS_SUPPORT_CTRLA",
                    "bit_lsb": 4,
                    "bit_msb": 5,
                    "description": "Control Bits for system support block",
                    "mode": "RW",
                    "name": "MacSysSupCtrlA"
                },
                {
                    "altname": "TIMESTAMP_FRC",
                    "bit_lsb": 3,
                    "bit_msb": 3,
                    "description": "When set, timestamp runs as a 64-bit Free Running Counter incrementing the assigned every Core_Clock cycle. When 0, the counters operate as 32 bits of seconds and 32 bits of nsec when the appropriate increment value is set with the lower 32 bits rolling over to 0 at 999,999,999 + 1 and incrementing the upper 32 bit seconds counter",
                    "mode": "RW",
                    "name": "TimeStampFrc"
                },
                {
                    "altname": "TIMESTAMP_SET",
                    "bit_lsb": 2,
                    "bit_msb": 2,
                    "description": "When set, timestamp loads with the init values from the setSec and setNsec registers. TimeStamEn  MUST BE 0 for set function to operate.",
                    "mode": "RW",
                    "name": "TimeStampSet"
                },
                {
                    "altname": "TIMESTAMP_RST",
                    "bit_lsb": 1,
                    "bit_msb": 1,
                    "description": "When set, timestamp resets to 0.",
                    "mode": "RW",
                    "name": "TimeStampRst"
                },
                {
                    "altname": "TIMESTAMP_EN",
                    "bit_lsb": 0,
                    "bit_msb": 0,
                    "description": "When set, timestamp increments at the set incr value each core_clock.",
                    "mode": "RW",
                    "name": "TimeStampEn"
                }
            ]
        },
        "mac_csr.MacSysSupStat": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "MAC_SYS_SUPPORT_STAT",
                    "bit_lsb": 10,
                    "bit_msb": 31,
                    "description": "Reserved Bits for system support block",
                    "mode": "RW",
                    "name": "MacSysSupStat"
                },
                {
                    "altname": "MAC_ETH_TS_MLD_2",
                    "bit_lsb": 5,
                    "bit_msb": 9,
                    "description": "Timestamp adjustment value for Multi-Lane TS when MLD=2(100G). 40G adjustment is val >> 1. ",
                    "mode": "RW",
                    "name": "MacEthTsMld2"
                },
                {
                    "altname": "MAC_ETH_TS_MLD_1",
                    "bit_lsb": 0,
                    "bit_msb": 4,
                    "description": "Timestamp adjustment value for Multi-Lane TS when MLD=1(100G). 40G adjustment is val >> 1. ",
                    "mode": "RW",
                    "name": "MacEthTsMld1"
                }
            ]
        },
        "mac_csr.MacTdmCycleWord1500": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "MAC_TDM_PORT_SLOT3",
                    "bit_lsb": 12,
                    "bit_msb": 15,
                    "description": "TDM egress port for TDM slot 3",
                    "mode": "RW",
                    "name": "MacTdmPortSlot3"
                },
                {
                    "altname": "MAC_TDM_PORT_SLOT2",
                    "bit_lsb": 8,
                    "bit_msb": 11,
                    "description": "TDM egress port for TDM slot 2",
                    "mode": "RW",
                    "name": "MacTdmPortSlot2"
                },
                {
                    "altname": "MAC_TDM_PORT_SLOT1",
                    "bit_lsb": 4,
                    "bit_msb": 7,
                    "description": "TDM egress port for TDM slot 1",
                    "mode": "RW",
                    "name": "MacTdmPortSlot1"
                },
                {
                    "altname": "MAC_TDM_PORT_SLOT0",
                    "bit_lsb": 0,
                    "bit_msb": 3,
                    "description": "TDM egress port for TDM slot 0",
                    "mode": "RW",
                    "name": "MacTdmPortSlot0"
                }
            ]
        },
        "mac_csr.MacTdmCycleWord3100": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "MAC_TDM_PORT_SLOT7",
                    "bit_lsb": 28,
                    "bit_msb": 31,
                    "description": "TDM egress port for TDM slot 7",
                    "mode": "RW",
                    "name": "MacTdmPortSlot7"
                },
                {
                    "altname": "MAC_TDM_PORT_SLOT6",
                    "bit_lsb": 24,
                    "bit_msb": 27,
                    "description": "TDM egress port for TDM slot 6",
                    "mode": "RW",
                    "name": "MacTdmPortSlot6"
                },
                {
                    "altname": "MAC_TDM_PORT_SLOT5",
                    "bit_lsb": 20,
                    "bit_msb": 23,
                    "description": "TDM egress port for TDM slot 5",
                    "mode": "RW",
                    "name": "MacTdmPortSlot5"
                },
                {
                    "altname": "MAC_TDM_PORT_SLOT4",
                    "bit_lsb": 16,
                    "bit_msb": 19,
                    "description": "TDM egress port for TDM slot 4",
                    "mode": "RW",
                    "name": "MacTdmPortSlot4"
                },
                {
                    "altname": "MAC_TDM_PORT_SLOT3",
                    "bit_lsb": 12,
                    "bit_msb": 15,
                    "description": "TDM egress port for TDM slot 3",
                    "mode": "RW",
                    "name": "MacTdmPortSlot3"
                },
                {
                    "altname": "MAC_TDM_PORT_SLOT2",
                    "bit_lsb": 8,
                    "bit_msb": 11,
                    "description": "TDM egress port for TDM slot 2",
                    "mode": "RW",
                    "name": "MacTdmPortSlot2"
                },
                {
                    "altname": "MAC_TDM_PORT_SLOT1",
                    "bit_lsb": 4,
                    "bit_msb": 7,
                    "description": "TDM egress port for TDM slot 1",
                    "mode": "RW",
                    "name": "MacTdmPortSlot1"
                },
                {
                    "altname": "MAC_TDM_PORT_SLOT0",
                    "bit_lsb": 0,
                    "bit_msb": 3,
                    "description": "TDM egress port for TDM slot 0",
                    "mode": "RW",
                    "name": "MacTdmPortSlot0"
                }
            ]
        },
        "mac_csr.MacTdmCycleWord4732": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "MAC_TDM_PORT_SLOT11",
                    "bit_lsb": 12,
                    "bit_msb": 15,
                    "description": "TDM egress port for TDM slot 11",
                    "mode": "RW",
                    "name": "MacTdmPortSlot11"
                },
                {
                    "altname": "MAC_TDM_PORT_SLOT10",
                    "bit_lsb": 8,
                    "bit_msb": 11,
                    "description": "TDM egress port for TDM slot 10",
                    "mode": "RW",
                    "name": "MacTdmPortSlot10"
                },
                {
                    "altname": "MAC_TDM_PORT_SLOT9",
                    "bit_lsb": 4,
                    "bit_msb": 7,
                    "description": "TDM egress port for TDM slot 9",
                    "mode": "RW",
                    "name": "MacTdmPortSlot9"
                },
                {
                    "altname": "MAC_TDM_PORT_SLOT8",
                    "bit_lsb": 0,
                    "bit_msb": 3,
                    "description": "TDM egress port for TDM slot 8",
                    "mode": "RW",
                    "name": "MacTdmPortSlot8"
                }
            ]
        },
        "mac_csr.MacTdmMode0300Crc": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "MAC_EGRESS_PORT_CRC_EN",
                    "bit_lsb": 16,
                    "bit_msb": 19,
                    "description": "If set, Enables MAC egress port (3-0) to append CRC.",
                    "mode": "RW",
                    "name": "MacEgressPortCrcEn"
                },
                {
                    "altname": "MAC_TDM_MODE_PORT_3",
                    "bit_lsb": 9,
                    "bit_msb": 11,
                    "description": "TDM egress port rate for Mac port 3",
                    "mode": "RW",
                    "name": "MacTdmModePort3"
                },
                {
                    "altname": "MAC_TDM_MODE_PORT_2",
                    "bit_lsb": 6,
                    "bit_msb": 8,
                    "description": "TDM egress port rate for Mac port 2",
                    "mode": "RW",
                    "name": "MacTdmModePort2"
                },
                {
                    "altname": "MAC_TDM_MODE_PORT_1",
                    "bit_lsb": 3,
                    "bit_msb": 5,
                    "description": "TDM egress port rate for Mac port 1",
                    "mode": "RW",
                    "name": "MacTdmModePort1"
                },
                {
                    "altname": "MAC_TDM_MODE_PORT_0",
                    "bit_lsb": 0,
                    "bit_msb": 2,
                    "description": "TDM egress port rate for Mac port 0",
                    "mode": "RW",
                    "name": "MacTdmModePort0"
                }
            ]
        },
        "mac_csr.MacTdmMode0900": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "MAC_TDM_MODE_PORT_9",
                    "bit_lsb": 27,
                    "bit_msb": 29,
                    "description": "TDM egress port rate for Mac port 9",
                    "mode": "RW",
                    "name": "MacTdmModePort9"
                },
                {
                    "altname": "MAC_TDM_MODE_PORT_8",
                    "bit_lsb": 24,
                    "bit_msb": 26,
                    "description": "TDM egress port rate for Mac port 8",
                    "mode": "RW",
                    "name": "MacTdmModePort8"
                },
                {
                    "altname": "MAC_TDM_MODE_PORT_7",
                    "bit_lsb": 21,
                    "bit_msb": 23,
                    "description": "TDM egress port rate for Mac port 67",
                    "mode": "RW",
                    "name": "MacTdmModePort7"
                },
                {
                    "altname": "MAC_TDM_MODE_PORT_6",
                    "bit_lsb": 18,
                    "bit_msb": 20,
                    "description": "TDM egress port rate for Mac port 6",
                    "mode": "RW",
                    "name": "MacTdmModePort6"
                },
                {
                    "altname": "MAC_TDM_MODE_PORT_5",
                    "bit_lsb": 15,
                    "bit_msb": 17,
                    "description": "TDM egress port rate for Mac port 5",
                    "mode": "RW",
                    "name": "MacTdmModePort5"
                },
                {
                    "altname": "MAC_TDM_MODE_PORT_4",
                    "bit_lsb": 12,
                    "bit_msb": 14,
                    "description": "TDM egress port rate for Mac port 4",
                    "mode": "RW",
                    "name": "MacTdmModePort4"
                },
                {
                    "altname": "MAC_TDM_MODE_PORT_3",
                    "bit_lsb": 9,
                    "bit_msb": 11,
                    "description": "TDM egress port rate for Mac port 3",
                    "mode": "RW",
                    "name": "MacTdmModePort3"
                },
                {
                    "altname": "MAC_TDM_MODE_PORT_2",
                    "bit_lsb": 6,
                    "bit_msb": 8,
                    "description": "TDM egress port rate for Mac port 2",
                    "mode": "RW",
                    "name": "MacTdmModePort2"
                },
                {
                    "altname": "MAC_TDM_MODE_PORT_1",
                    "bit_lsb": 3,
                    "bit_msb": 5,
                    "description": "TDM egress port rate for Mac port 1",
                    "mode": "RW",
                    "name": "MacTdmModePort1"
                },
                {
                    "altname": "MAC_TDM_MODE_PORT_0",
                    "bit_lsb": 0,
                    "bit_msb": 2,
                    "description": "TDM egress port rate for Mac port 0",
                    "mode": "RW",
                    "name": "MacTdmModePort0"
                }
            ]
        },
        "mac_csr.MacTdmMode1110Crc": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "MAC_EGRESS_PORT_CRC_EN",
                    "bit_lsb": 16,
                    "bit_msb": 27,
                    "description": "If set, Enables MAC egress port (11-0) to append CRC.",
                    "mode": "RW",
                    "name": "MacEgressPortCrcEn"
                },
                {
                    "altname": "MAC_TDM_MODE_PORT_1",
                    "bit_lsb": 3,
                    "bit_msb": 5,
                    "description": "TDM egress port rate for Mac port 1",
                    "mode": "RW",
                    "name": "MacTdmModePort1"
                },
                {
                    "altname": "MAC_TDM_MODE_PORT_0",
                    "bit_lsb": 0,
                    "bit_msb": 2,
                    "description": "TDM egress port rate for Mac port 0",
                    "mode": "RW",
                    "name": "MacTdmModePort0"
                }
            ]
        },
        "mac_csr.MacTimeStampIncr": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "MAC_TS_INCR_NSEC",
                    "bit_lsb": 16,
                    "bit_msb": 19,
                    "description": "Increment in whole nsecs to TsNsec in nsec every Mac Core Clock(800Mhz nominal)",
                    "mode": "RW",
                    "name": "IncrNsec"
                },
                {
                    "altname": "MAC_TS_INCR_FRAC",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "Increment in fractional to TsNsec in nsec every Mac Core Clock to compensate for variations.",
                    "mode": "RW",
                    "name": "IncrFraction"
                }
            ]
        },
        "mac_csr.MacTimeStampNsec": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "MAC_TS_NSEC",
                    "bit_lsb": 0,
                    "bit_msb": 31,
                    "description": "Timestamp in Nsec in system support block: count 0-999,999,999, increments the TsSec counter on roll to 0",
                    "mode": "RO",
                    "name": "MacTimeStampNsec"
                }
            ]
        },
        "mac_csr.MacTimeStampSec": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "MAC_TS_SEC",
                    "bit_lsb": 0,
                    "bit_msb": 31,
                    "description": "Timestamp in Seconds in system support block: increments when the TsSec counter rolls to 0",
                    "mode": "RO",
                    "name": "MacTimeStampSec"
                }
            ]
        },
        "mac_csr.MacTimeStampSetNsec": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "MAC_TS_SET_NSEC",
                    "bit_lsb": 0,
                    "bit_msb": 31,
                    "description": "Timestamp in Nsec in system support block: count 0-999,999,999, increments the TsSec counter on roll to 0",
                    "mode": "RW",
                    "name": "MacTimeStampSetNsec"
                }
            ]
        },
        "mac_csr.MacTimeStampSetSec": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "MAC_TS_SEC",
                    "bit_lsb": 0,
                    "bit_msb": 31,
                    "description": "Timestamp in Seconds in system support block: increments when the TsSec counter rolls to 0",
                    "mode": "RW",
                    "name": "MacTimeStampSetSec"
                }
            ]
        },
        "mac_csr.MacTxPfcInhEn": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "PFC_INH_3",
                    "bit_lsb": 24,
                    "bit_msb": 31,
                    "description": "When any bit set, PFC/Pause generate will be inhibited on port(3+4xd) at that PFC level.",
                    "mode": "RW",
                    "name": "PfcInh3"
                },
                {
                    "altname": "PFC_INH_2",
                    "bit_lsb": 16,
                    "bit_msb": 23,
                    "description": "When any bit set, PFC/Pause generate will be inhibited on port(2+4xd) at that PFC level.",
                    "mode": "RW",
                    "name": "PfcInh2"
                },
                {
                    "altname": "PFC_INH_1",
                    "bit_lsb": 8,
                    "bit_msb": 15,
                    "description": "When any bit set, PFC/Pause generate will be inhibited on port(1+4xd) at that PFC level.",
                    "mode": "RW",
                    "name": "PfcInh1"
                },
                {
                    "altname": "PFC_INH_0",
                    "bit_lsb": 0,
                    "bit_msb": 7,
                    "description": "When any bit set, PFC/Pause generate will be inhibited on port(4xd) at that PFC level.",
                    "mode": "RW",
                    "name": "PfcInh0"
                }
            ]
        },
        "mac_csr.MemErrDropCounts": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "IG_MEM_ERR_DROP_1",
                    "bit_lsb": 24,
                    "bit_msb": 31,
                    "description": "Count of packets errored during DQ due to memory errors. Saturates at 255. Clear on read.",
                    "mode": "RO",
                    "name": "IgMemErrDrop1"
                },
                {
                    "altname": "IG_MEM_ERR_DROP_0",
                    "bit_lsb": 16,
                    "bit_msb": 23,
                    "description": "Count of packets errored during DQ due to memory errors. Saturates at 255. Clear on read.",
                    "mode": "RO",
                    "name": "IgMemErrDrop0"
                },
                {
                    "altname": "EG_MEM_ERR_DROP_1",
                    "bit_lsb": 8,
                    "bit_msb": 15,
                    "description": "Count of packets errored during DQ due to memory errors. Saturates at 255. Clear on read.",
                    "mode": "RO",
                    "name": "EgMemErrDrop1"
                },
                {
                    "altname": "EG_MEM_ERR_DROP_0",
                    "bit_lsb": 0,
                    "bit_msb": 7,
                    "description": "Count of packets errored during DQ due to memory errors. Saturates at 255. Clear on read.",
                    "mode": "RO",
                    "name": "EgMemErrDrop0"
                }
            ]
        },
        "mac_csr.MiscStatusCtrl": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "EG_LL_MEM_MBE_LOCK",
                    "bit_lsb": 10,
                    "bit_msb": 10,
                    "description": "Read only status for Ingress linklist. When set, a multibit error on the linklist memory has occurred and reset is required.",
                    "mode": "RO",
                    "name": "EgLLMemMbeLock"
                },
                {
                    "altname": "IG_LL_MEM_MBE_LOCK",
                    "bit_lsb": 9,
                    "bit_msb": 9,
                    "description": "Read only status for Egress linklist. When set, a multibit error on the linklist memory has occurred and reset is required.",
                    "mode": "RO",
                    "name": "IgLLMemMbeLock"
                },
                {
                    "altname": "IG_ILK_CTX_MEM_MBE_LOCK0",
                    "bit_lsb": 8,
                    "bit_msb": 8,
                    "description": "Read only status for ILK0. When set, a multibit error on the ctx reassembly memory has occurred and reset is required.",
                    "mode": "RO",
                    "name": "IgIlkCtxMemMbeLock0"
                },
                {
                    "altname": "IG_ILK_CTX_LIMIT_OVER0",
                    "bit_lsb": 7,
                    "bit_msb": 7,
                    "description": "Read only status for ILK0. When set, all inactive channels are set to Xoff.",
                    "mode": "RO",
                    "name": "IgIlkCtxLimitOver0"
                },
                {
                    "altname": "IG_ILK_CTX_LIMIT0",
                    "bit_lsb": 0,
                    "bit_msb": 6,
                    "description": "Open ctx limit for ILK0 ingress enqueue. XOff all inactive channels when exceeded. 0 disables feature.",
                    "mode": "RW",
                    "name": "IgIlkCtxLimit0"
                }
            ]
        },
        "mac_csr.ParityErrInject": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "INJECT_IG_PAR_ERR_DESC_MEM",
                    "bit_lsb": 5,
                    "bit_msb": 5,
                    "description": "Write a 1 to inject an error to IG descriptor memory.",
                    "mode": "RW",
                    "name": "InjectIgParErrDescMem"
                },
                {
                    "altname": "INJECT_IG_PAR_ERR_TSMP_MEM",
                    "bit_lsb": 4,
                    "bit_msb": 4,
                    "description": "Write a 1 to inject an error to IG timestamp memory.",
                    "mode": "RW",
                    "name": "InjectIgParErrTsmpMem"
                },
                {
                    "altname": "INJECT_IG_PAR_ERR_RSLT_MEM",
                    "bit_lsb": 3,
                    "bit_msb": 3,
                    "description": "Write a 1 to inject an error to IG parse result memory.",
                    "mode": "RW",
                    "name": "InjectIgParErrRsltMem"
                },
                {
                    "altname": "INJECT_EG_PAR_ERR_DESC_MEM",
                    "bit_lsb": 2,
                    "bit_msb": 2,
                    "description": "Write a 1 to inject an error to EG descriptor memory.",
                    "mode": "RW",
                    "name": "InjectEgParErrDescMem"
                },
                {
                    "altname": "INJECT_EG_PAR_ERR_RSLT1_MEM",
                    "bit_lsb": 1,
                    "bit_msb": 1,
                    "description": "Write a 1 to inject an error to EG parse result1 memory.",
                    "mode": "RW",
                    "name": "InjectEgParErrRslt1Mem"
                },
                {
                    "altname": "INJECT_EG_PAR_ERR_RSLT0_MEM",
                    "bit_lsb": 0,
                    "bit_msb": 0,
                    "description": "Write a 1 to inject an error to EG parse result0 memory.",
                    "mode": "RW",
                    "name": "InjectEgParErrRslt0Mem"
                }
            ]
        },
        "mac_csr.PauseWaterMark": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "PWM_RESV1",
                    "bit_lsb": 28,
                    "bit_msb": 31,
                    "description": "Reserved",
                    "mode": "RW",
                    "name": "PWMResv1"
                },
                {
                    "altname": "PAUSE_WATERMARK1",
                    "bit_lsb": 16,
                    "bit_msb": 27,
                    "description": "Pause gen hi water mark. When crossed, pause for this class is generated.",
                    "mode": "RW",
                    "name": "PauseWaterMark1"
                },
                {
                    "altname": "PWM_RESV0",
                    "bit_lsb": 12,
                    "bit_msb": 15,
                    "description": "Reserved",
                    "mode": "RW",
                    "name": "PWMResv0"
                },
                {
                    "altname": "PAUSE_WATERMARK0",
                    "bit_lsb": 0,
                    "bit_msb": 11,
                    "description": "Pause gen hi water mark. When crossed, pause for this class is generated.",
                    "mode": "RW",
                    "name": "PauseWaterMark0"
                }
            ]
        },
        "mac_csr.PfcTxEn": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "PORT_PFC_TX_EN",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "Per-port enable for issuing a Pause/Pfc frame. No Pause/PFC issued without this bit set.",
                    "mode": "RW",
                    "name": "PortPfcTxEn"
                }
            ]
        },
        "mac_csr.RxCalEqCtl": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "PRE_CALCODE_SEL",
                    "bit_lsb": 2,
                    "bit_msb": 4,
                    "description": "Provides RX Equalizer Pre-Hint, prior to beginning adaptive equalization.",
                    "mode": "RW",
                    "name": "PreCalCodeSel"
                },
                {
                    "altname": "START",
                    "bit_lsb": 1,
                    "bit_msb": 1,
                    "description": "Starts adaptive RX Equalization. Clearing Start clears Done/Result register.",
                    "mode": "RW",
                    "name": "Start"
                },
                {
                    "altname": "ENABLE",
                    "bit_lsb": 0,
                    "bit_msb": 0,
                    "description": "Enable to use macro pins for RX EQ.",
                    "mode": "RW",
                    "name": "Enable"
                }
            ]
        },
        "mac_csr.RxCalEqResult": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "DONE",
                    "bit_lsb": 14,
                    "bit_msb": 14,
                    "description": "When set, indicates best eye diagram is complete and results are valid for sampling. Cleared when Start bit is cleared.",
                    "mode": "RO",
                    "name": "Done"
                },
                {
                    "altname": "BEST_EYE",
                    "bit_lsb": 0,
                    "bit_msb": 13,
                    "description": "Optimum Receive Eye diagram Figure of Merit signal. Safe for sampling when Done set: 14h0000=>Completely Closed Eye, 14hFFFF=>Completely Open Eye.",
                    "mode": "RO",
                    "name": "BestEye"
                }
            ]
        },
        "mac_csr.RxCalEqVal": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "DFE_ROAMING_N4_TAP_GAIN",
                    "bit_lsb": 29,
                    "bit_msb": 31,
                    "description": "DFE Roaming N-4 Tap Gain. Bit 3 of N-4 Tap gain set to 1 when this reg written at odd word address, set to 0 when written to the even word address.",
                    "mode": "RW",
                    "name": "DfeRoamingN4TapGain"
                },
                {
                    "altname": "DFE_ROAMING_N3_TAP_GAIN",
                    "bit_lsb": 25,
                    "bit_msb": 28,
                    "description": "DFE Roaming N-3 Tap Gain.",
                    "mode": "RW",
                    "name": "DfeRoamingN3TapGain"
                },
                {
                    "altname": "DFE_ROAMING_N2_TAP_GAIN",
                    "bit_lsb": 21,
                    "bit_msb": 24,
                    "description": "DFE Roaming N-2 Tap Gain.",
                    "mode": "RW",
                    "name": "DfeRoamingN2TapGain"
                },
                {
                    "altname": "DFE_ROAMING_N1_TAP_GAIN",
                    "bit_lsb": 17,
                    "bit_msb": 20,
                    "description": "DFE Roaming N-1 Tap Gain.",
                    "mode": "RW",
                    "name": "DfeRoamingN1TapGain"
                },
                {
                    "altname": "DFE_PULSE_SHAPING_TAP_GAIN",
                    "bit_lsb": 14,
                    "bit_msb": 16,
                    "description": "DFE Pulse-Shaping DFE Tap Gain.",
                    "mode": "RW",
                    "name": "DfePulseShapingTapGain"
                },
                {
                    "altname": "DFE_PULSE_SHAPING_TAP_3DB",
                    "bit_lsb": 11,
                    "bit_msb": 13,
                    "description": "DFE Pulse-Shaping DFE Tap F3dB Frequency.",
                    "mode": "RW",
                    "name": "DfePulseShapingTap3db"
                },
                {
                    "altname": "HI_FREQ_AGC_AC_BOOST",
                    "bit_lsb": 6,
                    "bit_msb": 10,
                    "description": "High Frequency AGC AC Boost.",
                    "mode": "RW",
                    "name": "HiFreqAgcAcBoost"
                },
                {
                    "altname": "HI_FREQ_AGC_DC_GAIN",
                    "bit_lsb": 3,
                    "bit_msb": 5,
                    "description": "High Frequency AGC DC Gain.",
                    "mode": "RW",
                    "name": "HiFreqAgcDcGain"
                },
                {
                    "altname": "LOW_FREQ_AGC_DC_GAIN",
                    "bit_lsb": 0,
                    "bit_msb": 2,
                    "description": "Low Frequency AGC DC Gain.",
                    "mode": "RW",
                    "name": "LowFreqAgcDcGain"
                }
            ]
        },
        "mac_csr.RxEyeDiagCtl": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "START",
                    "bit_lsb": 0,
                    "bit_msb": 0,
                    "description": "Enables an eye diagram measurement within the PMA. Clearing Start clears Done/Result register.",
                    "mode": "RW",
                    "name": "Start"
                }
            ]
        },
        "mac_csr.RxEyeDiagResult": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "ERR",
                    "bit_lsb": 15,
                    "bit_msb": 15,
                    "description": "Eye diagram error signal. Indicates if the measurement is invalid because the eye diagram was interrupted by the link entering electrical idle. Cleared when Start bit is cleared.",
                    "mode": "RO",
                    "name": "Err"
                },
                {
                    "altname": "DONE",
                    "bit_lsb": 14,
                    "bit_msb": 14,
                    "description": "When set, indicates eye diagram is complete and results are valid for sampling. Cleared when Start bit is cleared.",
                    "mode": "RO",
                    "name": "Done"
                },
                {
                    "altname": "RESULT",
                    "bit_lsb": 0,
                    "bit_msb": 13,
                    "description": "Eye diagram status signal. Safe for sampling when Done has asserted: 14h0000=>Completely Closed Eye,\n14hFFFF=>Completely Open Eye.",
                    "mode": "RO",
                    "name": "Result"
                }
            ]
        },
        "mac_csr.RxMpbCreditInit": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "RFU2",
                    "bit_lsb": 30,
                    "bit_msb": 31,
                    "description": "Reserved for Use.",
                    "mode": "RW",
                    "name": "Rfu2"
                },
                {
                    "altname": "RX_MPB_CREDIT_DATA_INIT",
                    "bit_lsb": 16,
                    "bit_msb": 29,
                    "description": "Egress-side MPB Data credits initial value(not used).",
                    "mode": "RW",
                    "name": "RxMpbCreditDataInit"
                },
                {
                    "altname": "RFU",
                    "bit_lsb": 14,
                    "bit_msb": 15,
                    "description": "Reserved for Use.",
                    "mode": "RW",
                    "name": "Rfu"
                },
                {
                    "altname": "RX_MPB_CREDIT_BUF_INIT",
                    "bit_lsb": 0,
                    "bit_msb": 13,
                    "description": "Egress-side MPB Buffer credit init.(not used).",
                    "mode": "RW",
                    "name": "RxMpbCreditBufInit"
                }
            ]
        },
        "mac_csr.SerDes4RdData": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "MAC_SERDES_RD_PAGE_ADDR",
                    "bit_lsb": 29,
                    "bit_msb": 31,
                    "description": "Read page address to serdes membus",
                    "mode": "RO",
                    "name": "SerDesRdPageAddr"
                },
                {
                    "altname": "MAC_SERDES_RD_OFFSET_ADDR",
                    "bit_lsb": 16,
                    "bit_msb": 28,
                    "description": "Read offset Address to serdes membus",
                    "mode": "RO",
                    "name": "SerDesRdOffsetAddr"
                },
                {
                    "altname": "MAC_SERDES_RD_DATA_VALID",
                    "bit_lsb": 9,
                    "bit_msb": 9,
                    "description": "Set to '1' when read complete, cleared when next read initiated",
                    "mode": "RO",
                    "name": "SerDesRdDataValid"
                },
                {
                    "altname": "MAC_SERDES_RD_DATA",
                    "bit_lsb": 0,
                    "bit_msb": 7,
                    "description": "8 bit read data from SerDes",
                    "mode": "RO",
                    "name": "SerDesRdData"
                }
            ]
        },
        "mac_csr.SerDes4RdWr": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "MAC_SERDES_PAGE_ADDR",
                    "bit_lsb": 29,
                    "bit_msb": 31,
                    "description": "Read/Write page address to serdes membus",
                    "mode": "RW",
                    "name": "SerDesPageAddr"
                },
                {
                    "altname": "MAC_SERDES_PCS_PMA_SEL",
                    "bit_lsb": 28,
                    "bit_msb": 28,
                    "description": "Write to 1 to select PCS Registers. Write to 0 to select PMA registers. PageAddr and OffsetAddr bits will index into the PCS or PMA register sets depending on the state of this bit.",
                    "mode": "RW",
                    "name": "SerDesPcsPmaSel"
                },
                {
                    "altname": "MAC_SERDES_OFFSET_ADDR",
                    "bit_lsb": 16,
                    "bit_msb": 27,
                    "description": "Read/Write offset Address to serdes membus",
                    "mode": "RW",
                    "name": "SerDesOffsetAddr"
                },
                {
                    "altname": "RFU",
                    "bit_lsb": 10,
                    "bit_msb": 15,
                    "description": "Reserved for Use.",
                    "mode": "RW",
                    "name": "Rfu"
                },
                {
                    "altname": "MAC_SERDES_RD_BUSY",
                    "bit_lsb": 9,
                    "bit_msb": 9,
                    "description": "write to 1 to start read op. Self clears when read complete. read data in corresponding read register. If read and write bits set at same time, operation default to NOP.",
                    "mode": "RW",
                    "name": "SerDesRdBusy"
                },
                {
                    "altname": "MAC_SERDES_WR_BUSY",
                    "bit_lsb": 8,
                    "bit_msb": 8,
                    "description": "write to 1 to start write op. Self clears when write complete.",
                    "mode": "RW",
                    "name": "SerDesWrBusy"
                },
                {
                    "altname": "MAC_SERDES_WR_DATA",
                    "bit_lsb": 0,
                    "bit_msb": 7,
                    "description": "8 bit write data to SerDes. Dont care for a read op.",
                    "mode": "RW",
                    "name": "SerDesWrData"
                }
            ]
        },
        "mac_csr.SerDesActDetect": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "SERDES_PORT_ACTIVITY_DETECT",
                    "bit_lsb": 0,
                    "bit_msb": 23,
                    "description": "Active Hi when Activity on a port. Clear on Read",
                    "mode": "RO",
                    "name": "SerDesPortActDetect"
                }
            ]
        },
        "mac_csr.SerDesCkMuxSel": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "SERDES_CK_MUX_SEL_RFU",
                    "bit_lsb": 26,
                    "bit_msb": 31,
                    "description": "reserved.",
                    "mode": "RW",
                    "name": "SerDesCkMuxSel_RFU"
                },
                {
                    "altname": "SERDES_CK_MUX_SEL_GANG_1918",
                    "bit_lsb": 25,
                    "bit_msb": 25,
                    "description": "Mux selector for 100G/40G/50G gang clocking lanes 19-18. Asserted selects 100G/40G gang. Zero selects 50G gang.",
                    "mode": "RW",
                    "name": "SerDesCkMuxSelGang1918"
                },
                {
                    "altname": "SERDES_CK_MUX_SEL_GANG_1716",
                    "bit_lsb": 24,
                    "bit_msb": 24,
                    "description": "Mux selector for 100G/40G/50G gang clocking lanes 17-16. Asserted selects 100G/10G gang. Zero selects 50G gang.",
                    "mode": "RW",
                    "name": "SerDesCkMuxSelGang1716"
                },
                {
                    "altname": "SERDES_CK_MUX_SEL_19",
                    "bit_lsb": 23,
                    "bit_msb": 23,
                    "description": "Mux selector for lane19 clocking. Asserted selects gang clock. Zero selects self-clock.",
                    "mode": "RW",
                    "name": "SerDesCkMuxSelL19"
                },
                {
                    "altname": "SERDES_CK_MUX_SEL_18",
                    "bit_lsb": 22,
                    "bit_msb": 22,
                    "description": "Mux selector for lane18 clocking. Asserted selects gang clock. Zero selects self-clock.",
                    "mode": "RW",
                    "name": "SerDesCkMuxSelL18"
                },
                {
                    "altname": "SERDES_CK_MUX_SEL_17",
                    "bit_lsb": 21,
                    "bit_msb": 21,
                    "description": "Mux selector for lane17 clocking. Asserted selects gang clock. Zero selects self-clock.",
                    "mode": "RW",
                    "name": "SerDesCkMuxSelL17"
                },
                {
                    "altname": "SERDES_CK_MUX_SEL_16",
                    "bit_lsb": 20,
                    "bit_msb": 20,
                    "description": "Mux selector for lane16 clocking. Asserted selects gang clock. Zero selects self-clock.",
                    "mode": "RW",
                    "name": "SerDesCkMuxSelL16"
                },
                {
                    "altname": "SERDES_CK_MUX_SEL_GANG_1512",
                    "bit_lsb": 19,
                    "bit_msb": 19,
                    "description": "Mux selector for gang clocking lanes 15-12. Asserted selects multi-gang clock. Zero selects local-gang.",
                    "mode": "RW",
                    "name": "SerDesCkMuxSelGang1512"
                },
                {
                    "altname": "SERDES_CK_MUX_SEL_15",
                    "bit_lsb": 18,
                    "bit_msb": 18,
                    "description": "Mux selector for lane15 clocking. Asserted selects gang clock. Zero selects self-clock.",
                    "mode": "RW",
                    "name": "SerDesCkMuxSelL15"
                },
                {
                    "altname": "SERDES_CK_MUX_SEL_14",
                    "bit_lsb": 17,
                    "bit_msb": 17,
                    "description": "Mux selector for lane14 clocking. Asserted selects gang clock. Zero selects self-clock.",
                    "mode": "RW",
                    "name": "SerDesCkMuxSelL14"
                },
                {
                    "altname": "SERDES_CK_MUX_SEL_13",
                    "bit_lsb": 16,
                    "bit_msb": 16,
                    "description": "Mux selector for lane13 clocking. Asserted selects gang clock. Zero selects self-clock.",
                    "mode": "RW",
                    "name": "SerDesCkMuxSelL13"
                },
                {
                    "altname": "SERDES_CK_MUX_SEL_12",
                    "bit_lsb": 15,
                    "bit_msb": 15,
                    "description": "Mux selector for lane12 clocking. Asserted selects gang clock. Zero selects self-clock.",
                    "mode": "RW",
                    "name": "SerDesCkMuxSelL12"
                },
                {
                    "altname": "SERDES_CK_MUX_SEL_GANG_1108",
                    "bit_lsb": 14,
                    "bit_msb": 14,
                    "description": "Mux selector for gang clocking lanes 11-8. Asserted selects multi-gang clock. Zero selects local-gang.",
                    "mode": "RW",
                    "name": "SerDesCkMuxSelGang1108"
                },
                {
                    "altname": "SERDES_CK_MUX_SEL_11",
                    "bit_lsb": 13,
                    "bit_msb": 13,
                    "description": "Mux selector for lane11 clocking. Asserted selects gang clock. Zero selects self-clock.",
                    "mode": "RW",
                    "name": "SerDesCkMuxSelL11"
                },
                {
                    "altname": "SERDES_CK_MUX_SEL_10",
                    "bit_lsb": 12,
                    "bit_msb": 12,
                    "description": "Mux selector for lane10 clocking. Asserted selects gang clock. Zero selects self-clock.",
                    "mode": "RW",
                    "name": "SerDesCkMuxSelL10"
                },
                {
                    "altname": "SERDES_CK_MUX_SEL_09",
                    "bit_lsb": 11,
                    "bit_msb": 11,
                    "description": "Mux selector for lane9 clocking. Asserted selects gang clock. Zero selects self-clock.",
                    "mode": "RW",
                    "name": "SerDesCkMuxSelL09"
                },
                {
                    "altname": "SERDES_CK_MUX_SEL_08",
                    "bit_lsb": 10,
                    "bit_msb": 10,
                    "description": "Mux selector for lane8 clocking. Asserted selects gang clock. Zero selects self-clock.",
                    "mode": "RW",
                    "name": "SerDesCkMuxSelL08"
                },
                {
                    "altname": "SERDES_CK_MUX_SEL_GANG_0704",
                    "bit_lsb": 9,
                    "bit_msb": 9,
                    "description": "Mux selector for gang clocking lanes 7-4. Asserted selects multi-gang clock. Zero selects local-gang.",
                    "mode": "RW",
                    "name": "SerDesCkMuxSelGang0704"
                },
                {
                    "altname": "SERDES_CK_MUX_SEL_07",
                    "bit_lsb": 8,
                    "bit_msb": 8,
                    "description": "Mux selector for lane7 clocking. Asserted selects gang clock. Zero selects self-clock.",
                    "mode": "RW",
                    "name": "SerDesCkMuxSelL07"
                },
                {
                    "altname": "SERDES_CK_MUX_SEL_06",
                    "bit_lsb": 7,
                    "bit_msb": 7,
                    "description": "Mux selector for lane6 clocking. Asserted selects gang clock. Zero selects self-clock.",
                    "mode": "RW",
                    "name": "SerDesCkMuxSelL06"
                },
                {
                    "altname": "SERDES_CK_MUX_SEL_05",
                    "bit_lsb": 6,
                    "bit_msb": 6,
                    "description": "Mux selector for lane5 clocking. Asserted selects gang clock. Zero selects self-clock.",
                    "mode": "RW",
                    "name": "SerDesCkMuxSelL05"
                },
                {
                    "altname": "SERDES_CK_MUX_SEL_04",
                    "bit_lsb": 5,
                    "bit_msb": 5,
                    "description": "Mux selector for lane4 clocking. Asserted selects gang clock. Zero selects self-clock.",
                    "mode": "RW",
                    "name": "SerDesCkMuxSelL04"
                },
                {
                    "altname": "SERDES_CK_MUX_SEL_GANG_0300",
                    "bit_lsb": 4,
                    "bit_msb": 4,
                    "description": "Mux selector for gang clocking lanes 3-0. Asserted selects multi-gang clock. Zero selects local-gang.",
                    "mode": "RW",
                    "name": "SerDesCkMuxSelGang0300"
                },
                {
                    "altname": "SERDES_CK_MUX_SEL_03",
                    "bit_lsb": 3,
                    "bit_msb": 3,
                    "description": "Mux selector for lane3 clocking. Asserted selects gang clock. Zero selects self-clock.",
                    "mode": "RW",
                    "name": "SerDesCkMuxSelL03"
                },
                {
                    "altname": "SERDES_CK_MUX_SEL_02",
                    "bit_lsb": 2,
                    "bit_msb": 2,
                    "description": "Mux selector for lane2 clocking. Asserted selects gang clock. Zero selects self-clock.",
                    "mode": "RW",
                    "name": "SerDesCkMuxSelL02"
                },
                {
                    "altname": "SERDES_CK_MUX_SEL_01",
                    "bit_lsb": 1,
                    "bit_msb": 1,
                    "description": "Mux selector for lane1 clocking. Asserted selects gang clock. Zero selects self-clock.",
                    "mode": "RW",
                    "name": "SerDesCkMuxSelL01"
                },
                {
                    "altname": "SERDES_CK_MUX_SEL_00",
                    "bit_lsb": 0,
                    "bit_msb": 0,
                    "description": "Mux selector for lane0 clocking. Asserted selects gang clock. Zero selects self-clock.",
                    "mode": "RW",
                    "name": "SerDesCkMuxSelL00"
                }
            ]
        },
        "mac_csr.SerDesCkMuxSel2": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "SERDES_CK_MUX_SEL_CDR_23",
                    "bit_lsb": 23,
                    "bit_msb": 23,
                    "description": "Mux selector for lane23 local clocking. Asserted selects CDR clock. Zero selects TX self-clock.",
                    "mode": "RW",
                    "name": "SerDesCkMuxSelCdrL23"
                },
                {
                    "altname": "SERDES_CK_MUX_SEL_CDR_22",
                    "bit_lsb": 22,
                    "bit_msb": 22,
                    "description": "Mux selector for lane22 local clocking. Asserted selects CDR clock. Zero selects TX self-clock.",
                    "mode": "RW",
                    "name": "SerDesCkMuxSelCdrL22"
                },
                {
                    "altname": "SERDES_CK_MUX_SEL_CDR_21",
                    "bit_lsb": 21,
                    "bit_msb": 21,
                    "description": "Mux selector for lane21 local clocking. Asserted selects CDR clock. Zero selects TX self-clock.",
                    "mode": "RW",
                    "name": "SerDesCkMuxSelCdrL21"
                },
                {
                    "altname": "SERDES_CK_MUX_SEL_CD_20",
                    "bit_lsb": 20,
                    "bit_msb": 20,
                    "description": "Mux selector for lane20 local clocking. Asserted selects CDR clock. Zero selects TX self-clock.",
                    "mode": "RW",
                    "name": "SerDesCkMuxSelCdrL20"
                },
                {
                    "altname": "SERDES_CK_MUX_SEL_CDR_19",
                    "bit_lsb": 19,
                    "bit_msb": 19,
                    "description": "Mux selector for lane19 local clocking. Asserted selects CDR clock. Zero selects TX self-clock.",
                    "mode": "RW",
                    "name": "SerDesCkMuxSelCdrL19"
                },
                {
                    "altname": "SERDES_CK_MUX_SEL_CDR_18",
                    "bit_lsb": 18,
                    "bit_msb": 18,
                    "description": "Mux selector for lane18 local clocking. Asserted selects CDR clock. Zero selects TX self-clock.",
                    "mode": "RW",
                    "name": "SerDesCkMuxSelCdrL18"
                },
                {
                    "altname": "SERDES_CK_MUX_SEL_CDR_17",
                    "bit_lsb": 17,
                    "bit_msb": 17,
                    "description": "Mux selector for lane17 local clocking. Asserted selects CDR clock. Zero selects TX self-clock.",
                    "mode": "RW",
                    "name": "SerDesCkMuxSelCdrL17"
                },
                {
                    "altname": "SERDES_CK_MUX_SEL_CDR_16",
                    "bit_lsb": 16,
                    "bit_msb": 16,
                    "description": "Mux selector for lane16 local clocking. Asserted selects CDR clock. Zero selects TX self-clock.",
                    "mode": "RW",
                    "name": "SerDesCkMuxSelCdrL16"
                },
                {
                    "altname": "SERDES_CK_MUX_SEL_CDR_15",
                    "bit_lsb": 15,
                    "bit_msb": 15,
                    "description": "Mux selector for lane15 local clocking. Asserted selects CDR clock. Zero selects TX self-clock.",
                    "mode": "RW",
                    "name": "SerDesCkMuxSelCdrL15"
                },
                {
                    "altname": "SERDES_CK_MUX_SEL_CDR_14",
                    "bit_lsb": 14,
                    "bit_msb": 14,
                    "description": "Mux selector for lane14 local clocking. Asserted selects CDR clock. Zero selects TX self-clock.",
                    "mode": "RW",
                    "name": "SerDesCkMuxSelCdrL14"
                },
                {
                    "altname": "SERDES_CK_MUX_SEL_CDR_13",
                    "bit_lsb": 13,
                    "bit_msb": 13,
                    "description": "Mux selector for lane13 local clocking. Asserted selects CDR clock. Zero selects TX self-clock.",
                    "mode": "RW",
                    "name": "SerDesCkMuxSelCdrL13"
                },
                {
                    "altname": "SERDES_CK_MUX_SEL_CDR_12",
                    "bit_lsb": 12,
                    "bit_msb": 12,
                    "description": "Mux selector for lane12 local clocking. Asserted selects CDR clock. Zero selects TX self-clock.",
                    "mode": "RW",
                    "name": "SerDesCkMuxSelCdrL12"
                },
                {
                    "altname": "SERDES_CK_MUX_SEL_CDR_11",
                    "bit_lsb": 11,
                    "bit_msb": 11,
                    "description": "Mux selector for lane11 local clocking. Asserted selects CDR clock. Zero selects TX self-clock.",
                    "mode": "RW",
                    "name": "SerDesCkMuxSelCdrL11"
                },
                {
                    "altname": "SERDES_CK_MUX_SEL_CDR_10",
                    "bit_lsb": 10,
                    "bit_msb": 10,
                    "description": "Mux selector for lane10 local clocking. Asserted selects CDR clock. Zero selects TX self-clock.",
                    "mode": "RW",
                    "name": "SerDesCkMuxSelCdrL10"
                },
                {
                    "altname": "SERDES_CK_MUX_SEL_CDR_09",
                    "bit_lsb": 9,
                    "bit_msb": 9,
                    "description": "Mux selector for lane9 local clocking. Asserted selects CDR clock. Zero selects TX self-clock.",
                    "mode": "RW",
                    "name": "SerDesCkMuxSelCdrL09"
                },
                {
                    "altname": "SERDES_CK_MUX_SEL_CDR_08",
                    "bit_lsb": 8,
                    "bit_msb": 8,
                    "description": "Mux selector for lane8 local clocking. Asserted selects CDR clock. Zero selects TX self-clock.",
                    "mode": "RW",
                    "name": "SerDesCkMuxSelCdrL08"
                },
                {
                    "altname": "SERDES_CK_MUX_SEL_CDR_07",
                    "bit_lsb": 7,
                    "bit_msb": 7,
                    "description": "Mux selector for lane7 local clocking. Asserted selects CDR clock. Zero selects TX self-clock.",
                    "mode": "RW",
                    "name": "SerDesCkMuxSelCdrL07"
                },
                {
                    "altname": "SERDES_CK_MUX_SEL_CDR_06",
                    "bit_lsb": 6,
                    "bit_msb": 6,
                    "description": "Mux selector for lane6 local clocking. Asserted selects CDR clock. Zero selects TX self-clock.",
                    "mode": "RW",
                    "name": "SerDesCkMuxSelCdrL06"
                },
                {
                    "altname": "SERDES_CK_MUX_SEL_CDR_05",
                    "bit_lsb": 5,
                    "bit_msb": 5,
                    "description": "Mux selector for lane5 local clocking. Asserted selects CDR clock. Zero selects TX self-clock.",
                    "mode": "RW",
                    "name": "SerDesCkMuxSelCdrL05"
                },
                {
                    "altname": "SERDES_CK_MUX_SEL_CDR_04",
                    "bit_lsb": 4,
                    "bit_msb": 4,
                    "description": "Mux selector for lane4 local clocking. Asserted selects CDR clock. Zero selects TX self-clock.",
                    "mode": "RW",
                    "name": "SerDesCkMuxSelCdrL04"
                },
                {
                    "altname": "SERDES_CK_MUX_SEL_CDR_03",
                    "bit_lsb": 3,
                    "bit_msb": 3,
                    "description": "Mux selector for lane3 local clocking. Asserted selects CDR clock. Zero selects TX self-clock.",
                    "mode": "RW",
                    "name": "SerDesCkMuxSelCdrL03"
                },
                {
                    "altname": "SERDES_CK_MUX_SEL_CDR_02",
                    "bit_lsb": 2,
                    "bit_msb": 2,
                    "description": "Mux selector for lane2 local clocking. Asserted selects CDR clock. Zero selects TX self-clock.",
                    "mode": "RW",
                    "name": "SerDesCkMuxSelCdrL02"
                },
                {
                    "altname": "SERDES_CK_MUX_SEL_CDR_01",
                    "bit_lsb": 1,
                    "bit_msb": 1,
                    "description": "Mux selector for lane1 local clocking. Asserted selects CDR clock. Zero selects TX self-clock.",
                    "mode": "RW",
                    "name": "SerDesCkMuxSelCdrL01"
                },
                {
                    "altname": "SERDES_CK_MUX_SEL_CDR_00",
                    "bit_lsb": 0,
                    "bit_msb": 0,
                    "description": "Mux selector for lane0 local clocking. Asserted selects CDR clock. Zero selects TX self-clock.",
                    "mode": "RW",
                    "name": "SerDesCkMuxSelCdrL00"
                }
            ]
        },
        "mac_csr.SerDesLinkUp": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "SERDES_LINK_UP",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "Active Hi Block Lock when Serdes link up state occurs(per lane) as indicated by the EthMAC.",
                    "mode": "RO",
                    "name": "SerDesLinkUp"
                }
            ]
        },
        "mac_csr.SerDesPdLn": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "SERDES_LANE_POWER_DOWN",
                    "bit_lsb": 0,
                    "bit_msb": 23,
                    "description": "Active Low. Per-Lane PowerDown of RX or TX logic.",
                    "mode": "RW",
                    "name": "SerDesLanePowerDown"
                }
            ]
        },
        "mac_csr.SerDesPdSy": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "SERDES_HS_SYNTH_POWER_DOWN",
                    "bit_lsb": 5,
                    "bit_msb": 8,
                    "description": "Active Low. Per-Lane PowerDown of HS Synth logic.",
                    "mode": "RW",
                    "name": "SerDesHSSynthPowerDown"
                },
                {
                    "altname": "SERDES_SYNTH_POWER_DOWN",
                    "bit_lsb": 0,
                    "bit_msb": 4,
                    "description": "Active Low. Per-macro PowerDown of Synth logic.",
                    "mode": "RW",
                    "name": "SerDesSynthPowerDown"
                }
            ]
        },
        "mac_csr.SerDesSigDetect": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "SERDES_LANE_SIGNAL_DETECT",
                    "bit_lsb": 0,
                    "bit_msb": 19,
                    "description": "Active Hi when Serdes detects a signal(per lane).",
                    "mode": "RO",
                    "name": "SerDesLaneSigDetect"
                }
            ]
        },
        "mac_csr.SerDesSigDetectOvr": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "SERDES_LANE_SIGNAL_DETECT_OVR",
                    "bit_lsb": 0,
                    "bit_msb": 23,
                    "description": "Override for SigDETECT from the serdes. Deasserts the PHY_LOS to the Ethernet MAC.",
                    "mode": "RW",
                    "name": "SerDesLaneSigDetectOvr"
                }
            ]
        },
        "mac_csr.TDMRateCreditInit": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "TDM_100GE_CREDIT_INIT",
                    "bit_lsb": 24,
                    "bit_msb": 31,
                    "description": "Initial value of hydra 100G TDM credits.",
                    "mode": "RW",
                    "name": "TDM100GECreditInit"
                },
                {
                    "altname": "TDM_40GE_CREDIT_INIT",
                    "bit_lsb": 16,
                    "bit_msb": 23,
                    "description": "Initial value of hydra 40G TDM credits.",
                    "mode": "RW",
                    "name": "TDM40GECreditInit"
                },
                {
                    "altname": "TDM_10GE_CREDIT_INIT",
                    "bit_lsb": 8,
                    "bit_msb": 15,
                    "description": "Initial value of hydra 10G TDM credits.",
                    "mode": "RW",
                    "name": "TDM10GECreditInit"
                },
                {
                    "altname": "TDM_1GE_CREDIT_INIT",
                    "bit_lsb": 0,
                    "bit_msb": 7,
                    "description": "Initial value of hydra 1G TDM credits.",
                    "mode": "RW",
                    "name": "TDM1GECreditInit"
                }
            ]
        },
        "mac_csr.TdmMemRdData": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "TDM_MEM_RD_ADDR",
                    "bit_lsb": 24,
                    "bit_msb": 29,
                    "description": "Read address of last read to IG DQ TDM enry memory. Sets when read is initiated.",
                    "mode": "RO",
                    "name": "TdmMemRdAddr"
                },
                {
                    "altname": "TDM_MEM_RD_DATA_VALID",
                    "bit_lsb": 21,
                    "bit_msb": 21,
                    "description": "Sets to '1' when a read completes, cleared when the next read initiated.",
                    "mode": "RO",
                    "name": "TdmMemRdDataValid"
                },
                {
                    "altname": "TDM_PORT_UNUSED_RD_RET",
                    "bit_lsb": 16,
                    "bit_msb": 19,
                    "description": "5 bit unused.",
                    "mode": "RO",
                    "name": "TdmPortUnusedRdRet"
                },
                {
                    "altname": "TDM_PORT_ARB_ENABLE",
                    "bit_lsb": 15,
                    "bit_msb": 15,
                    "description": "If bit to 1, port enabled for arbitration indexed by  @ addr TdmMemRdAddr.",
                    "mode": "RO",
                    "name": "TdmPortArbEnable"
                },
                {
                    "altname": "TDM_PORT_WEIGHTRD_DATA",
                    "bit_lsb": 0,
                    "bit_msb": 14,
                    "description": "15 bit DWRR port credit init value @ addr TdmMemRdAddr",
                    "mode": "RO",
                    "name": "TdmPortWeightRdData"
                }
            ]
        },
        "mac_csr.TdmMemRdWr": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "TDM_MEM_RD_WR_RFU1",
                    "bit_lsb": 30,
                    "bit_msb": 31,
                    "description": "RFU1.",
                    "mode": "RW",
                    "name": "TdmMemRdWrRFU1"
                },
                {
                    "altname": "TDM_MEM_RD_WR_ADDR",
                    "bit_lsb": 24,
                    "bit_msb": 29,
                    "description": "Address of 15-bit IG DQ DWRR port credit value to be read or written.(0-25) Hydra0 = 0-11, Hydra1 = 12-23, LK0 = 24, LK1 = 25. ",
                    "mode": "RW",
                    "name": "TdmMemRdWrAddr"
                },
                {
                    "altname": "TDM_MEM_RD_WR_RFU0",
                    "bit_lsb": 22,
                    "bit_msb": 23,
                    "description": "RFU0.",
                    "mode": "RW",
                    "name": "TdmMemRdWrRFU0"
                },
                {
                    "altname": "TDM_MEM_RD_BUSY",
                    "bit_lsb": 21,
                    "bit_msb": 21,
                    "description": "Write to 1 to start read op. Self clears when read complete. read data in corresponding read register. If read and write bits set at same time, operation default to NOP.",
                    "mode": "RW",
                    "name": "TdmMemRdBusy"
                },
                {
                    "altname": "TDM_MEM_WR_BUSY",
                    "bit_lsb": 20,
                    "bit_msb": 20,
                    "description": "write to 1 to start write op. Self clears when write complete.",
                    "mode": "RW",
                    "name": "TdmMemWrBusy"
                },
                {
                    "altname": "TDM_MEM_UNUSED",
                    "bit_lsb": 16,
                    "bit_msb": 19,
                    "description": "unused.",
                    "mode": "RW",
                    "name": "TdmMemUnused"
                },
                {
                    "altname": "TDM_PORT_ARB_ENABLE",
                    "bit_lsb": 15,
                    "bit_msb": 15,
                    "description": "Set bit to 1 to enable the port for arbitration indexed @ addr TdmMemRdAddr(0-25).",
                    "mode": "RW",
                    "name": "TdmPortArbEnable"
                },
                {
                    "altname": "TDM_PORT_WEIGHTWR_DATA",
                    "bit_lsb": 0,
                    "bit_msb": 14,
                    "description": "15 bit DWRR credit weight value to be written @ addr TdmMemRdAddr(0-25)",
                    "mode": "RW",
                    "name": "TdmPortWeightWrData"
                }
            ]
        },
        "mac_csr.TxMpbCreditInit": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "RFU",
                    "bit_lsb": 20,
                    "bit_msb": 31,
                    "description": "Reserved for Use.",
                    "mode": "RW",
                    "name": "Rfu"
                },
                {
                    "altname": "TX_MPB_CREDIT_DATA_INIT",
                    "bit_lsb": 16,
                    "bit_msb": 19,
                    "description": "TX MPB Data credits initial value.",
                    "mode": "RW",
                    "name": "TxMpbCreditDataInit"
                },
                {
                    "altname": "RFU2",
                    "bit_lsb": 12,
                    "bit_msb": 15,
                    "description": "Reserved for Use.",
                    "mode": "RW",
                    "name": "Rfu2"
                },
                {
                    "altname": "TX_MPB_CREDIT_MAX_PKT_INIT",
                    "bit_lsb": 6,
                    "bit_msb": 11,
                    "description": "TX MPB Pkt Max credits initial value.",
                    "mode": "RW",
                    "name": "TxMpbCreditMaxPktInit"
                },
                {
                    "altname": "TX_MPB_CREDIT_PKT_INIT",
                    "bit_lsb": 0,
                    "bit_msb": 5,
                    "description": "TX MPB Pkt credits initial value. The register MUST BE set to 7 or less.",
                    "mode": "RW",
                    "name": "TxMpbCreditPktInit"
                }
            ]
        },
        "mac_csr.VlanMatchReg": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "VLAN_MASK",
                    "bit_lsb": 16,
                    "bit_msb": 31,
                    "description": "VLAN Mask Field for parser matching.",
                    "mode": "RW",
                    "name": "VlanMask"
                },
                {
                    "altname": "VLAN_MATCH",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "VLAN Match Field for parser matching.",
                    "mode": "RW",
                    "name": "VlanMatch"
                }
            ]
        },
        "mac_csr.VlanMatchReg1": {
            "bit_length": 32,
            "fields": [
                {
                    "altname": "VLAN_MASK1",
                    "bit_lsb": 16,
                    "bit_msb": 31,
                    "description": "VLAN Mask Field for parser matching.",
                    "mode": "RW",
                    "name": "VlanMask1"
                },
                {
                    "altname": "VLAN_MATCH1",
                    "bit_lsb": 0,
                    "bit_msb": 15,
                    "description": "VLAN Match Field for parser matching.",
                    "mode": "RW",
                    "name": "VlanMatch1"
                }
            ]
        }
    }
}